{"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/core/DiamondMonitor.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/core/DiamondMonitor.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":58}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":18},"end":{"line":6,"column":61}},"5":{"start":{"line":12,"column":8},"end":{"line":12,"column":23}},"6":{"start":{"line":13,"column":8},"end":{"line":13,"column":27}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":38}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":42}},"9":{"start":{"line":36,"column":8},"end":{"line":36,"column":30}},"10":{"start":{"line":37,"column":8},"end":{"line":37,"column":33}},"11":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"12":{"start":{"line":39,"column":12},"end":{"line":39,"column":70}},"13":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"14":{"start":{"line":42,"column":12},"end":{"line":42,"column":62}},"15":{"start":{"line":44,"column":8},"end":{"line":44,"column":31}},"16":{"start":{"line":45,"column":8},"end":{"line":45,"column":33}},"17":{"start":{"line":47,"column":8},"end":{"line":53,"column":10}},"18":{"start":{"line":54,"column":8},"end":{"line":54,"column":41}},"19":{"start":{"line":55,"column":8},"end":{"line":58,"column":11}},"20":{"start":{"line":64,"column":8},"end":{"line":72,"column":11}},"21":{"start":{"line":78,"column":8},"end":{"line":84,"column":9}},"22":{"start":{"line":79,"column":33},"end":{"line":79,"column":70}},"23":{"start":{"line":80,"column":12},"end":{"line":80,"column":54}},"24":{"start":{"line":83,"column":12},"end":{"line":83,"column":100}},"25":{"start":{"line":90,"column":8},"end":{"line":105,"column":9}},"26":{"start":{"line":91,"column":35},"end":{"line":91,"column":59}},"27":{"start":{"line":93,"column":29},"end":{"line":99,"column":13}},"28":{"start":{"line":100,"column":12},"end":{"line":100,"column":91}},"29":{"start":{"line":101,"column":12},"end":{"line":101,"column":83}},"30":{"start":{"line":104,"column":12},"end":{"line":104,"column":78}},"31":{"start":{"line":113,"column":8},"end":{"line":138,"column":9}},"32":{"start":{"line":114,"column":33},"end":{"line":114,"column":70}},"33":{"start":{"line":116,"column":27},"end":{"line":116,"column":29}},"34":{"start":{"line":117,"column":12},"end":{"line":127,"column":13}},"35":{"start":{"line":118,"column":16},"end":{"line":126,"column":19}},"36":{"start":{"line":119,"column":20},"end":{"line":125,"column":21}},"37":{"start":{"line":120,"column":24},"end":{"line":124,"column":27}},"38":{"start":{"line":128,"column":35},"end":{"line":128,"column":101}},"39":{"start":{"line":128,"column":67},"end":{"line":128,"column":97}},"40":{"start":{"line":129,"column":12},"end":{"line":134,"column":14}},"41":{"start":{"line":137,"column":12},"end":{"line":137,"column":82}},"42":{"start":{"line":146,"column":8},"end":{"line":149,"column":9}},"43":{"start":{"line":147,"column":12},"end":{"line":147,"column":61}},"44":{"start":{"line":148,"column":12},"end":{"line":148,"column":19}},"45":{"start":{"line":150,"column":8},"end":{"line":160,"column":9}},"46":{"start":{"line":151,"column":12},"end":{"line":151,"column":44}},"47":{"start":{"line":152,"column":12},"end":{"line":154,"column":13}},"48":{"start":{"line":153,"column":16},"end":{"line":153,"column":41}},"49":{"start":{"line":155,"column":12},"end":{"line":155,"column":33}},"50":{"start":{"line":156,"column":12},"end":{"line":156,"column":59}},"51":{"start":{"line":159,"column":12},"end":{"line":159,"column":75}},"52":{"start":{"line":166,"column":8},"end":{"line":168,"column":9}},"53":{"start":{"line":167,"column":12},"end":{"line":167,"column":19}},"54":{"start":{"line":169,"column":8},"end":{"line":169,"column":32}},"55":{"start":{"line":170,"column":8},"end":{"line":170,"column":33}},"56":{"start":{"line":171,"column":8},"end":{"line":171,"column":30}},"57":{"start":{"line":172,"column":8},"end":{"line":172,"column":55}},"58":{"start":{"line":180,"column":8},"end":{"line":180,"column":29}},"59":{"start":{"line":188,"column":26},"end":{"line":188,"column":36}},"60":{"start":{"line":189,"column":23},"end":{"line":189,"column":25}},"61":{"start":{"line":190,"column":8},"end":{"line":209,"column":9}},"62":{"start":{"line":192,"column":38},"end":{"line":192,"column":75}},"63":{"start":{"line":193,"column":12},"end":{"line":193,"column":43}},"64":{"start":{"line":195,"column":34},"end":{"line":195,"column":67}},"65":{"start":{"line":196,"column":12},"end":{"line":196,"column":39}},"66":{"start":{"line":198,"column":31},"end":{"line":198,"column":70}},"67":{"start":{"line":199,"column":12},"end":{"line":199,"column":36}},"68":{"start":{"line":202,"column":12},"end":{"line":208,"column":15}},"69":{"start":{"line":210,"column":26},"end":{"line":210,"column":48}},"70":{"start":{"line":211,"column":26},"end":{"line":211,"column":74}},"71":{"start":{"line":211,"column":48},"end":{"line":211,"column":73}},"72":{"start":{"line":212,"column":8},"end":{"line":217,"column":10}},"73":{"start":{"line":226,"column":8},"end":{"line":228,"column":9}},"74":{"start":{"line":227,"column":12},"end":{"line":227,"column":44}},"75":{"start":{"line":229,"column":8},"end":{"line":231,"column":9}},"76":{"start":{"line":230,"column":12},"end":{"line":230,"column":47}},"77":{"start":{"line":232,"column":8},"end":{"line":234,"column":9}},"78":{"start":{"line":233,"column":12},"end":{"line":233,"column":37}},"79":{"start":{"line":235,"column":8},"end":{"line":235,"column":55}},"80":{"start":{"line":241,"column":8},"end":{"line":251,"column":40}},"81":{"start":{"line":242,"column":12},"end":{"line":250,"column":13}},"82":{"start":{"line":243,"column":31},"end":{"line":243,"column":59}},"83":{"start":{"line":244,"column":16},"end":{"line":246,"column":17}},"84":{"start":{"line":245,"column":20},"end":{"line":245,"column":87}},"85":{"start":{"line":249,"column":16},"end":{"line":249,"column":67}},"86":{"start":{"line":257,"column":8},"end":{"line":260,"column":9}},"87":{"start":{"line":258,"column":12},"end":{"line":258,"column":52}},"88":{"start":{"line":259,"column":12},"end":{"line":259,"column":49}},"89":{"start":{"line":266,"column":26},"end":{"line":266,"column":36}},"90":{"start":{"line":267,"column":8},"end":{"line":284,"column":9}},"91":{"start":{"line":268,"column":12},"end":{"line":268,"column":45}},"92":{"start":{"line":269,"column":12},"end":{"line":274,"column":14}},"93":{"start":{"line":277,"column":12},"end":{"line":283,"column":14}},"94":{"start":{"line":290,"column":26},"end":{"line":290,"column":36}},"95":{"start":{"line":291,"column":8},"end":{"line":318,"column":9}},"96":{"start":{"line":292,"column":35},"end":{"line":292,"column":59}},"97":{"start":{"line":293,"column":25},"end":{"line":293,"column":68}},"98":{"start":{"line":294,"column":12},"end":{"line":302,"column":13}},"99":{"start":{"line":295,"column":16},"end":{"line":301,"column":18}},"100":{"start":{"line":303,"column":12},"end":{"line":308,"column":14}},"101":{"start":{"line":311,"column":12},"end":{"line":317,"column":14}},"102":{"start":{"line":324,"column":26},"end":{"line":324,"column":36}},"103":{"start":{"line":325,"column":8},"end":{"line":361,"column":9}},"104":{"start":{"line":326,"column":25},"end":{"line":326,"column":52}},"105":{"start":{"line":327,"column":12},"end":{"line":334,"column":13}},"106":{"start":{"line":328,"column":16},"end":{"line":333,"column":18}},"107":{"start":{"line":336,"column":32},"end":{"line":336,"column":89}},"108":{"start":{"line":336,"column":60},"end":{"line":336,"column":88}},"109":{"start":{"line":337,"column":12},"end":{"line":345,"column":13}},"110":{"start":{"line":338,"column":16},"end":{"line":344,"column":18}},"111":{"start":{"line":346,"column":12},"end":{"line":351,"column":14}},"112":{"start":{"line":354,"column":12},"end":{"line":360,"column":14}},"113":{"start":{"line":367,"column":8},"end":{"line":369,"column":9}},"114":{"start":{"line":368,"column":12},"end":{"line":368,"column":19}},"115":{"start":{"line":371,"column":8},"end":{"line":383,"column":11}},"116":{"start":{"line":372,"column":26},"end":{"line":372,"column":47}},"117":{"start":{"line":373,"column":12},"end":{"line":373,"column":69}},"118":{"start":{"line":375,"column":12},"end":{"line":382,"column":15}},"119":{"start":{"line":376,"column":16},"end":{"line":381,"column":17}},"120":{"start":{"line":377,"column":20},"end":{"line":377,"column":36}},"121":{"start":{"line":380,"column":20},"end":{"line":380,"column":73}},"122":{"start":{"line":384,"column":8},"end":{"line":384,"column":59}},"123":{"start":{"line":387,"column":0},"end":{"line":387,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":32},"end":{"line":15,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":48},"end":{"line":59,"column":5}},"line":35},"2":{"name":"(anonymous_2)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":26},"end":{"line":73,"column":5}},"line":63},"3":{"name":"(anonymous_3)","decl":{"start":{"line":77,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":77,"column":24},"end":{"line":85,"column":5}},"line":77},"4":{"name":"(anonymous_4)","decl":{"start":{"line":89,"column":4},"end":{"line":89,"column":5}},"loc":{"start":{"line":89,"column":31},"end":{"line":106,"column":5}},"line":89},"5":{"name":"(anonymous_5)","decl":{"start":{"line":112,"column":4},"end":{"line":112,"column":5}},"loc":{"start":{"line":112,"column":27},"end":{"line":139,"column":5}},"line":112},"6":{"name":"(anonymous_6)","decl":{"start":{"line":118,"column":68},"end":{"line":118,"column":69}},"loc":{"start":{"line":118,"column":91},"end":{"line":126,"column":17}},"line":118},"7":{"name":"(anonymous_7)","decl":{"start":{"line":128,"column":49},"end":{"line":128,"column":50}},"loc":{"start":{"line":128,"column":67},"end":{"line":128,"column":97}},"line":128},"8":{"name":"(anonymous_8)","decl":{"start":{"line":145,"column":4},"end":{"line":145,"column":5}},"loc":{"start":{"line":145,"column":28},"end":{"line":161,"column":5}},"line":145},"9":{"name":"(anonymous_9)","decl":{"start":{"line":165,"column":4},"end":{"line":165,"column":5}},"loc":{"start":{"line":165,"column":21},"end":{"line":173,"column":5}},"line":165},"10":{"name":"(anonymous_10)","decl":{"start":{"line":179,"column":4},"end":{"line":179,"column":5}},"loc":{"start":{"line":179,"column":19},"end":{"line":181,"column":5}},"line":179},"11":{"name":"(anonymous_11)","decl":{"start":{"line":187,"column":4},"end":{"line":187,"column":5}},"loc":{"start":{"line":187,"column":28},"end":{"line":218,"column":5}},"line":187},"12":{"name":"(anonymous_12)","decl":{"start":{"line":211,"column":39},"end":{"line":211,"column":40}},"loc":{"start":{"line":211,"column":48},"end":{"line":211,"column":73}},"line":211},"13":{"name":"(anonymous_13)","decl":{"start":{"line":225,"column":4},"end":{"line":225,"column":5}},"loc":{"start":{"line":225,"column":32},"end":{"line":236,"column":5}},"line":225},"14":{"name":"(anonymous_14)","decl":{"start":{"line":240,"column":4},"end":{"line":240,"column":5}},"loc":{"start":{"line":240,"column":24},"end":{"line":252,"column":5}},"line":240},"15":{"name":"(anonymous_15)","decl":{"start":{"line":241,"column":47},"end":{"line":241,"column":48}},"loc":{"start":{"line":241,"column":59},"end":{"line":251,"column":9}},"line":241},"16":{"name":"(anonymous_16)","decl":{"start":{"line":256,"column":4},"end":{"line":256,"column":5}},"loc":{"start":{"line":256,"column":23},"end":{"line":261,"column":5}},"line":256},"17":{"name":"(anonymous_17)","decl":{"start":{"line":265,"column":4},"end":{"line":265,"column":5}},"loc":{"start":{"line":265,"column":37},"end":{"line":285,"column":5}},"line":265},"18":{"name":"(anonymous_18)","decl":{"start":{"line":289,"column":4},"end":{"line":289,"column":5}},"loc":{"start":{"line":289,"column":33},"end":{"line":319,"column":5}},"line":289},"19":{"name":"(anonymous_19)","decl":{"start":{"line":323,"column":4},"end":{"line":323,"column":5}},"loc":{"start":{"line":323,"column":39},"end":{"line":362,"column":5}},"line":323},"20":{"name":"(anonymous_20)","decl":{"start":{"line":336,"column":51},"end":{"line":336,"column":52}},"loc":{"start":{"line":336,"column":60},"end":{"line":336,"column":88}},"line":336},"21":{"name":"(anonymous_21)","decl":{"start":{"line":366,"column":4},"end":{"line":366,"column":5}},"loc":{"start":{"line":366,"column":24},"end":{"line":385,"column":5}},"line":366},"22":{"name":"(anonymous_22)","decl":{"start":{"line":371,"column":39},"end":{"line":371,"column":40}},"loc":{"start":{"line":371,"column":52},"end":{"line":383,"column":9}},"line":371},"23":{"name":"(anonymous_23)","decl":{"start":{"line":375,"column":40},"end":{"line":375,"column":41}},"loc":{"start":{"line":375,"column":52},"end":{"line":382,"column":13}},"line":375}},"branchMap":{"0":{"loc":{"start":{"line":35,"column":35},"end":{"line":35,"column":46}},"type":"default-arg","locations":[{"start":{"line":35,"column":44},"end":{"line":35,"column":46}}],"line":35},"1":{"loc":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},{"start":{},"end":{}}],"line":38},"2":{"loc":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},{"start":{},"end":{}}],"line":41},"3":{"loc":{"start":{"line":48,"column":29},"end":{"line":48,"column":60}},"type":"binary-expr","locations":[{"start":{"line":48,"column":29},"end":{"line":48,"column":51}},{"start":{"line":48,"column":55},"end":{"line":48,"column":60}}],"line":48},"4":{"loc":{"start":{"line":49,"column":32},"end":{"line":49,"column":65}},"type":"binary-expr","locations":[{"start":{"line":49,"column":32},"end":{"line":49,"column":57}},{"start":{"line":49,"column":61},"end":{"line":49,"column":65}}],"line":49},"5":{"loc":{"start":{"line":50,"column":32},"end":{"line":50,"column":65}},"type":"binary-expr","locations":[{"start":{"line":50,"column":32},"end":{"line":50,"column":57}},{"start":{"line":50,"column":61},"end":{"line":50,"column":65}}],"line":50},"6":{"loc":{"start":{"line":51,"column":20},"end":{"line":51,"column":63}},"type":"binary-expr","locations":[{"start":{"line":51,"column":20},"end":{"line":51,"column":33}},{"start":{"line":51,"column":37},"end":{"line":51,"column":63}}],"line":51},"7":{"loc":{"start":{"line":52,"column":23},"end":{"line":52,"column":51}},"type":"binary-expr","locations":[{"start":{"line":52,"column":23},"end":{"line":52,"column":39}},{"start":{"line":52,"column":43},"end":{"line":52,"column":51}}],"line":52},"8":{"loc":{"start":{"line":80,"column":19},"end":{"line":80,"column":53}},"type":"binary-expr","locations":[{"start":{"line":80,"column":19},"end":{"line":80,"column":47}},{"start":{"line":80,"column":51},"end":{"line":80,"column":53}}],"line":80},"9":{"loc":{"start":{"line":117,"column":12},"end":{"line":127,"column":13}},"type":"if","locations":[{"start":{"line":117,"column":12},"end":{"line":127,"column":13}},{"start":{},"end":{}}],"line":117},"10":{"loc":{"start":{"line":119,"column":20},"end":{"line":125,"column":21}},"type":"if","locations":[{"start":{"line":119,"column":20},"end":{"line":125,"column":21}},{"start":{},"end":{}}],"line":119},"11":{"loc":{"start":{"line":119,"column":24},"end":{"line":119,"column":70}},"type":"binary-expr","locations":[{"start":{"line":119,"column":24},"end":{"line":119,"column":42}},{"start":{"line":119,"column":46},"end":{"line":119,"column":70}}],"line":119},"12":{"loc":{"start":{"line":130,"column":25},"end":{"line":130,"column":59}},"type":"binary-expr","locations":[{"start":{"line":130,"column":25},"end":{"line":130,"column":53}},{"start":{"line":130,"column":57},"end":{"line":130,"column":59}}],"line":130},"13":{"loc":{"start":{"line":146,"column":8},"end":{"line":149,"column":9}},"type":"if","locations":[{"start":{"line":146,"column":8},"end":{"line":149,"column":9}},{"start":{},"end":{}}],"line":146},"14":{"loc":{"start":{"line":152,"column":12},"end":{"line":154,"column":13}},"type":"if","locations":[{"start":{"line":152,"column":12},"end":{"line":154,"column":13}},{"start":{},"end":{}}],"line":152},"15":{"loc":{"start":{"line":166,"column":8},"end":{"line":168,"column":9}},"type":"if","locations":[{"start":{"line":166,"column":8},"end":{"line":168,"column":9}},{"start":{},"end":{}}],"line":166},"16":{"loc":{"start":{"line":205,"column":49},"end":{"line":205,"column":105}},"type":"cond-expr","locations":[{"start":{"line":205,"column":74},"end":{"line":205,"column":87}},{"start":{"line":205,"column":90},"end":{"line":205,"column":105}}],"line":205},"17":{"loc":{"start":{"line":226,"column":8},"end":{"line":228,"column":9}},"type":"if","locations":[{"start":{"line":226,"column":8},"end":{"line":228,"column":9}},{"start":{},"end":{}}],"line":226},"18":{"loc":{"start":{"line":229,"column":8},"end":{"line":231,"column":9}},"type":"if","locations":[{"start":{"line":229,"column":8},"end":{"line":231,"column":9}},{"start":{},"end":{}}],"line":229},"19":{"loc":{"start":{"line":232,"column":8},"end":{"line":234,"column":9}},"type":"if","locations":[{"start":{"line":232,"column":8},"end":{"line":234,"column":9}},{"start":{},"end":{}}],"line":232},"20":{"loc":{"start":{"line":244,"column":16},"end":{"line":246,"column":17}},"type":"if","locations":[{"start":{"line":244,"column":16},"end":{"line":246,"column":17}},{"start":{},"end":{}}],"line":244},"21":{"loc":{"start":{"line":257,"column":8},"end":{"line":260,"column":9}},"type":"if","locations":[{"start":{"line":257,"column":8},"end":{"line":260,"column":9}},{"start":{},"end":{}}],"line":257},"22":{"loc":{"start":{"line":280,"column":58},"end":{"line":280,"column":114}},"type":"cond-expr","locations":[{"start":{"line":280,"column":83},"end":{"line":280,"column":96}},{"start":{"line":280,"column":99},"end":{"line":280,"column":114}}],"line":280},"23":{"loc":{"start":{"line":294,"column":12},"end":{"line":302,"column":13}},"type":"if","locations":[{"start":{"line":294,"column":12},"end":{"line":302,"column":13}},{"start":{},"end":{}}],"line":294},"24":{"loc":{"start":{"line":314,"column":51},"end":{"line":314,"column":107}},"type":"cond-expr","locations":[{"start":{"line":314,"column":76},"end":{"line":314,"column":89}},{"start":{"line":314,"column":92},"end":{"line":314,"column":107}}],"line":314},"25":{"loc":{"start":{"line":327,"column":12},"end":{"line":334,"column":13}},"type":"if","locations":[{"start":{"line":327,"column":12},"end":{"line":334,"column":13}},{"start":{},"end":{}}],"line":327},"26":{"loc":{"start":{"line":337,"column":12},"end":{"line":345,"column":13}},"type":"if","locations":[{"start":{"line":337,"column":12},"end":{"line":345,"column":13}},{"start":{},"end":{}}],"line":337},"27":{"loc":{"start":{"line":357,"column":58},"end":{"line":357,"column":114}},"type":"cond-expr","locations":[{"start":{"line":357,"column":83},"end":{"line":357,"column":96}},{"start":{"line":357,"column":99},"end":{"line":357,"column":114}}],"line":357},"28":{"loc":{"start":{"line":367,"column":8},"end":{"line":369,"column":9}},"type":"if","locations":[{"start":{"line":367,"column":8},"end":{"line":369,"column":9}},{"start":{},"end":{}}],"line":367}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":4,"6":4,"7":4,"8":1,"9":23,"10":23,"11":23,"12":2,"13":21,"14":2,"15":19,"16":19,"17":19,"18":19,"19":19,"20":19,"21":29,"22":29,"23":29,"24":0,"25":7,"26":7,"27":7,"28":7,"29":7,"30":0,"31":6,"32":6,"33":6,"34":6,"35":6,"36":12,"37":12,"38":6,"39":12,"40":6,"41":0,"42":5,"43":1,"44":1,"45":4,"46":4,"47":4,"48":3,"49":4,"50":4,"51":0,"52":23,"53":19,"54":4,"55":4,"56":4,"57":4,"58":7,"59":3,"60":3,"61":3,"62":3,"63":3,"64":3,"65":3,"66":3,"67":3,"68":0,"69":3,"70":3,"71":3,"72":3,"73":3,"74":3,"75":3,"76":2,"77":3,"78":3,"79":3,"80":3,"81":0,"82":0,"83":0,"84":0,"85":0,"86":4,"87":3,"88":3,"89":3,"90":3,"91":3,"92":0,"93":3,"94":3,"95":3,"96":3,"97":3,"98":0,"99":0,"100":0,"101":3,"102":3,"103":3,"104":3,"105":3,"106":0,"107":3,"108":5,"109":3,"110":0,"111":3,"112":0,"113":3,"114":0,"115":3,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":3,"123":1},"f":{"0":4,"1":23,"2":19,"3":29,"4":7,"5":6,"6":12,"7":12,"8":5,"9":23,"10":7,"11":3,"12":3,"13":3,"14":3,"15":0,"16":4,"17":3,"18":3,"19":3,"20":5,"21":3,"22":0,"23":0},"b":{"0":[14],"1":[2,21],"2":[2,19],"3":[19,10],"4":[19,10],"5":[19,10],"6":[19,19],"7":[19,19],"8":[29,0],"9":[6,0],"10":[12,0],"11":[12,12],"12":[6,0],"13":[1,4],"14":[3,1],"15":[19,4],"16":[0,0],"17":[3,0],"18":[2,1],"19":[3,0],"20":[0,0],"21":[3,1],"22":[3,0],"23":[0,0],"24":[3,0],"25":[0,3],"26":[0,3],"27":[0,0],"28":[0,3]},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/core/DiamondMonitor.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/core/DiamondMonitor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Provider, Contract, EventLog } from 'ethers';\nimport { Diamond } from 'diamonds';\nimport winston from 'winston';\n\n/**\n * Configuration options for DiamondMonitor\n */\nexport interface DiamondMonitorConfig {\n  /** Polling interval in milliseconds for health checks (default: 30000) */\n  pollingInterval?: number;\n  /** Enable event logging (default: true) */\n  enableEventLogging?: boolean;\n  /** Enable automated health checks (default: true) */\n  enableHealthChecks?: boolean;\n  /** Custom logger instance */\n  logger?: winston.Logger;\n  /** Block number to start monitoring from */\n  fromBlock?: number | 'latest';\n}\n\n/**\n * Internal configuration with all required properties\n */\ninterface InternalConfig {\n  pollingInterval: number;\n  enableEventLogging: boolean;\n  enableHealthChecks: boolean;\n  logger: winston.Logger;\n  fromBlock: number | 'latest';\n}\n\n/**\n * Diamond information structure\n */\nexport interface DiamondInfo {\n  /** Diamond contract address */\n  address: string;\n  /** Array of facet information */\n  facets: FacetInfo[];\n  /** Total number of function selectors */\n  totalSelectors: number;\n  /** Diamond ABI */\n  abi?: any[];\n}\n\n/**\n * Facet information structure\n */\nexport interface FacetInfo {\n  /** Facet contract address */\n  address: string;\n  /** Function selectors handled by this facet */\n  selectors: string[];\n  /** Facet name (if available) */\n  name?: string;\n}\n\n/**\n * Health check result structure\n */\nexport interface HealthCheckResult {\n  /** Overall health status */\n  isHealthy: boolean;\n  /** Individual health checks */\n  checks: HealthCheck[];\n  /** Timestamp of the health check */\n  timestamp: Date;\n  /** Total time taken for all checks */\n  totalTime: number;\n}\n\n/**\n * Individual health check structure\n */\nexport interface HealthCheck {\n  /** Name of the health check */\n  name: string;\n  /** Check status */\n  status: 'passed' | 'failed' | 'warning';\n  /** Check message */\n  message: string;\n  /** Time taken for this check */\n  duration: number;\n  /** Additional details */\n  details?: any;\n}\n\n/**\n * Event listener function type\n */\nexport type EventListener = (event: EventLog) => void;\n\n/**\n * Monitoring errors\n */\nexport class MonitoringError extends Error {\n  constructor(message: string, public readonly cause?: Error) {\n    super(message);\n    this.name = 'MonitoringError';\n  }\n}\n\n/**\n * Main DiamondMonitor class for monitoring ERC-2535 Diamond Proxy contracts\n * \n * This class provides comprehensive monitoring capabilities including:\n * - Real-time event monitoring\n * - Health checks and diagnostics\n * - Facet management and analysis\n * - Integration with the diamonds module\n */\nexport class DiamondMonitor {\n  private readonly diamond: Diamond;\n  private readonly provider: Provider;\n  private readonly config: InternalConfig;\n  private readonly logger: winston.Logger;\n  \n  private isActive = false;\n  private contract?: Contract;\n  private eventListeners: EventListener[] = [];\n  private healthCheckInterval?: NodeJS.Timeout;\n\n  /**\n   * Creates a new DiamondMonitor instance\n   * \n   * @param diamond - Diamond instance from the diamonds module\n   * @param provider - Ethereum provider (ethers.js)\n   * @param config - Optional configuration\n   */\n  constructor(\n    diamond: Diamond,\n    provider: Provider,\n    config: DiamondMonitorConfig = {}\n  ) {\n    if (!diamond) {\n      throw new MonitoringError('Diamond instance is required');\n    }\n    if (!provider) {\n      throw new MonitoringError('Provider is required');\n    }\n\n    this.diamond = diamond;\n    this.provider = provider;\n    \n    // Merge config with defaults\n    this.config = {\n      pollingInterval: config.pollingInterval ?? 30000,\n      enableEventLogging: config.enableEventLogging ?? true,\n      enableHealthChecks: config.enableHealthChecks ?? true,\n      logger: config.logger ?? this.createDefaultLogger(),\n      fromBlock: config.fromBlock ?? 'latest'\n    };\n\n    this.logger = this.config.logger;\n    this.logger.info('DiamondMonitor initialized', {\n      diamondAddress: this.getDiamondAddress(),\n      config: this.config\n    });\n  }\n\n  /**\n   * Create default winston logger\n   */\n  private createDefaultLogger(): winston.Logger {\n    return winston.createLogger({\n      level: 'info',\n      format: winston.format.combine(\n        winston.format.timestamp(),\n        winston.format.errors({ stack: true }),\n        winston.format.json()\n      ),\n      transports: [\n        new winston.transports.Console({\n          format: winston.format.simple()\n        })\n      ]\n    });\n  }\n\n  /**\n   * Get diamond address from Diamond instance\n   */\n  private getDiamondAddress(): string {\n    try {\n      const deployedData = this.diamond.getDeployedDiamondData();\n      return deployedData?.DiamondAddress || '';\n    } catch (error) {\n      throw new MonitoringError('Failed to get diamond address from Diamond instance', error as Error);\n    }\n  }\n\n  /**\n   * Initialize contract instance for monitoring\n   */\n  private async initializeContract(): Promise<void> {\n    try {\n      const diamondAddress = this.getDiamondAddress();\n      // For now, we'll use a basic Diamond ABI - this can be enhanced later\n      const basicAbi = [\n        'event DiamondCut(tuple(address facetAddress, uint8 action, bytes4[] functionSelectors)[] _diamondCut, address _init, bytes _calldata)',\n        'function facets() external view returns (tuple(address facetAddress, bytes4[] functionSelectors)[])',\n        'function facetFunctionSelectors(address _facet) external view returns (bytes4[])',\n        'function facetAddresses() external view returns (address[])',\n        'function facetAddress(bytes4 _functionSelector) external view returns (address)'\n      ];\n      \n      this.contract = new Contract(diamondAddress, basicAbi, this.provider);\n      this.logger.debug('Contract initialized', { address: diamondAddress });\n    } catch (error) {\n      throw new MonitoringError('Failed to initialize contract', error as Error);\n    }\n  }\n\n  /**\n   * Get comprehensive diamond information\n   * \n   * @returns Promise resolving to diamond information\n   */\n  public async getDiamondInfo(): Promise<DiamondInfo> {\n    try {\n      const deployedData = this.diamond.getDeployedDiamondData();\n      \n      // Transform deployed facets data to our format\n      const facets: FacetInfo[] = [];\n      if (deployedData?.DeployedFacets) {\n        Object.entries(deployedData.DeployedFacets).forEach(([name, facetData]) => {\n          if (facetData?.address && facetData?.funcSelectors) {\n            facets.push({\n              address: facetData.address,\n              selectors: facetData.funcSelectors,\n              name: name\n            });\n          }\n        });\n      }\n\n      const totalSelectors = facets.reduce((total, facet) => total + facet.selectors.length, 0);\n\n      return {\n        address: deployedData?.DiamondAddress || '',\n        facets,\n        totalSelectors,\n        abi: [] // ABI will be populated separately if needed\n      };\n    } catch (error) {\n      throw new MonitoringError('Failed to get diamond information', error as Error);\n    }\n  }\n\n  /**\n   * Start monitoring the diamond contract\n   * \n   * @returns Promise that resolves when monitoring is started\n   */\n  public async startMonitoring(): Promise<void> {\n    if (this.isActive) {\n      this.logger.warn('Monitoring is already active');\n      return;\n    }\n\n    try {\n      await this.initializeContract();\n      \n      if (this.config.enableHealthChecks) {\n        this.startHealthChecks();\n      }\n\n      this.isActive = true;\n      this.logger.info('Diamond monitoring started');\n    } catch (error) {\n      throw new MonitoringError('Failed to start monitoring', error as Error);\n    }\n  }\n\n  /**\n   * Stop monitoring the diamond contract\n   */\n  public stopMonitoring(): void {\n    if (!this.isActive) {\n      return;\n    }\n\n    this.stopHealthChecks();\n    this.eventListeners = [];\n    this.isActive = false;\n    \n    this.logger.info('Diamond monitoring stopped');\n  }\n\n  /**\n   * Check if monitoring is currently active\n   * \n   * @returns True if monitoring is active\n   */\n  public isMonitoring(): boolean {\n    return this.isActive;\n  }\n\n  /**\n   * Perform comprehensive health checks on the diamond contract\n   * \n   * @returns Promise resolving to health check results\n   */\n  public async getHealthStatus(): Promise<HealthCheckResult> {\n    const startTime = Date.now();\n    const checks: HealthCheck[] = [];\n\n    try {\n      // Connectivity check\n      const connectivityCheck = await this.performConnectivityCheck();\n      checks.push(connectivityCheck);\n\n      // Contract existence check\n      const contractCheck = await this.performContractCheck();\n      checks.push(contractCheck);\n\n      // Facet integrity check\n      const facetCheck = await this.performFacetIntegrityCheck();\n      checks.push(facetCheck);\n\n    } catch (error) {\n      checks.push({\n        name: 'health_check_error',\n        status: 'failed',\n        message: `Health check failed: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        duration: 0,\n        details: { error }\n      });\n    }\n\n    const totalTime = Date.now() - startTime;\n    const isHealthy = checks.every(check => check.status === 'passed');\n\n    return {\n      isHealthy,\n      checks,\n      timestamp: new Date(),\n      totalTime\n    };\n  }\n\n  /**\n   * Set up event tracking for diamond contract events\n   * \n   * @param listener - Optional custom event listener\n   * @returns Promise that resolves when event tracking is set up\n   */\n  public async trackEvents(listener?: EventListener): Promise<void> {\n    if (!this.contract) {\n      await this.initializeContract();\n    }\n\n    if (listener) {\n      this.eventListeners.push(listener);\n    }\n\n    if (this.config.enableEventLogging) {\n      this.setupEventLogging();\n    }\n\n    this.logger.info('Event tracking initialized');\n  }\n\n  /**\n   * Start automated health checks\n   */\n  private startHealthChecks(): void {\n    this.healthCheckInterval = setInterval(async () => {\n      try {\n        const health = await this.getHealthStatus();\n        if (!health.isHealthy) {\n          this.logger.warn('Health check failed', { checks: health.checks });\n        }\n      } catch (error) {\n        this.logger.error('Health check error', { error });\n      }\n    }, this.config.pollingInterval);\n  }\n\n  /**\n   * Stop automated health checks\n   */\n  private stopHealthChecks(): void {\n    if (this.healthCheckInterval) {\n      clearInterval(this.healthCheckInterval);\n      this.healthCheckInterval = undefined;\n    }\n  }\n\n  /**\n   * Perform connectivity check\n   */\n  private async performConnectivityCheck(): Promise<HealthCheck> {\n    const startTime = Date.now();\n    \n    try {\n      await this.provider.getNetwork();\n      \n      return {\n        name: 'connectivity',\n        status: 'passed',\n        message: 'Provider connectivity is healthy',\n        duration: Date.now() - startTime\n      };\n    } catch (error) {\n      return {\n        name: 'connectivity',\n        status: 'failed',\n        message: `Provider connectivity failed: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        duration: Date.now() - startTime,\n        details: { error }\n      };\n    }\n  }\n\n  /**\n   * Perform contract existence check\n   */\n  private async performContractCheck(): Promise<HealthCheck> {\n    const startTime = Date.now();\n    \n    try {\n      const diamondAddress = this.getDiamondAddress();\n      const code = await this.provider.getCode(diamondAddress);\n      \n      if (code === '0x') {\n        return {\n          name: 'contract_existence',\n          status: 'failed',\n          message: 'Diamond contract not found at address',\n          duration: Date.now() - startTime,\n          details: { address: diamondAddress }\n        };\n      }\n\n      return {\n        name: 'contract_existence',\n        status: 'passed',\n        message: 'Diamond contract exists and has code',\n        duration: Date.now() - startTime\n      };\n    } catch (error) {\n      return {\n        name: 'contract_existence',\n        status: 'failed',\n        message: `Contract check failed: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        duration: Date.now() - startTime,\n        details: { error }\n      };\n    }\n  }\n\n  /**\n   * Perform facet integrity check\n   */\n  private async performFacetIntegrityCheck(): Promise<HealthCheck> {\n    const startTime = Date.now();\n    \n    try {\n      const info = await this.getDiamondInfo();\n      \n      if (info.facets.length === 0) {\n        return {\n          name: 'facet_integrity',\n          status: 'warning',\n          message: 'No facets found in diamond',\n          duration: Date.now() - startTime\n        };\n      }\n\n      // Check for empty selectors\n      const emptyFacets = info.facets.filter(facet => facet.selectors.length === 0);\n      if (emptyFacets.length > 0) {\n        return {\n          name: 'facet_integrity',\n          status: 'warning',\n          message: `Found ${emptyFacets.length} facets with no selectors`,\n          duration: Date.now() - startTime,\n          details: { emptyFacets }\n        };\n      }\n\n      return {\n        name: 'facet_integrity',\n        status: 'passed',\n        message: `All ${info.facets.length} facets have selectors`,\n        duration: Date.now() - startTime\n      };\n    } catch (error) {\n      return {\n        name: 'facet_integrity',\n        status: 'failed',\n        message: `Facet integrity check failed: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        duration: Date.now() - startTime,\n        details: { error }\n      };\n    }\n  }\n\n  /**\n   * Setup event logging for contract events\n   */\n  private setupEventLogging(): void {\n    if (!this.contract) {\n      return;\n    }\n\n    // Listen for DiamondCut events\n    this.contract.on('DiamondCut', (...args) => {\n      const event = args[args.length - 1] as EventLog;\n      this.logger.info('DiamondCut event detected', { event });\n      \n      // Notify all listeners\n      this.eventListeners.forEach(listener => {\n        try {\n          listener(event);\n        } catch (error) {\n          this.logger.error('Event listener error', { error });\n        }\n      });\n    });\n\n    this.logger.debug('Event logging setup completed');\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b178466ae50de4168f5a394dc8573c9e3a027fc4","contentHash":"747180258af821a680285243eb916c2099456d194c6377bbcfb55109a42ff41e"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/core/FacetManager.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/core/FacetManager.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":83}},"2":{"start":{"line":8,"column":0},"end":{"line":12,"column":69}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":54}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":62}},"5":{"start":{"line":11,"column":4},"end":{"line":11,"column":60}},"6":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"7":{"start":{"line":19,"column":8},"end":{"line":19,"column":27}},"8":{"start":{"line":20,"column":8},"end":{"line":20,"column":40}},"9":{"start":{"line":23,"column":0},"end":{"line":23,"column":46}},"10":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"11":{"start":{"line":42,"column":12},"end":{"line":42,"column":72}},"12":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"13":{"start":{"line":45,"column":12},"end":{"line":45,"column":64}},"14":{"start":{"line":47,"column":8},"end":{"line":47,"column":31}},"15":{"start":{"line":48,"column":8},"end":{"line":48,"column":33}},"16":{"start":{"line":56,"column":8},"end":{"line":74,"column":9}},"17":{"start":{"line":57,"column":33},"end":{"line":57,"column":70}},"18":{"start":{"line":58,"column":27},"end":{"line":58,"column":29}},"19":{"start":{"line":59,"column":12},"end":{"line":69,"column":13}},"20":{"start":{"line":60,"column":16},"end":{"line":68,"column":19}},"21":{"start":{"line":61,"column":20},"end":{"line":67,"column":21}},"22":{"start":{"line":62,"column":24},"end":{"line":66,"column":27}},"23":{"start":{"line":70,"column":12},"end":{"line":70,"column":26}},"24":{"start":{"line":73,"column":12},"end":{"line":73,"column":72}},"25":{"start":{"line":83,"column":8},"end":{"line":92,"column":9}},"26":{"start":{"line":84,"column":27},"end":{"line":84,"column":50}},"27":{"start":{"line":86,"column":26},"end":{"line":87,"column":74}},"28":{"start":{"line":86,"column":43},"end":{"line":87,"column":73}},"29":{"start":{"line":88,"column":12},"end":{"line":88,"column":48}},"30":{"start":{"line":91,"column":12},"end":{"line":91,"column":103}},"31":{"start":{"line":101,"column":8},"end":{"line":154,"column":9}},"32":{"start":{"line":102,"column":27},"end":{"line":102,"column":50}},"33":{"start":{"line":103,"column":30},"end":{"line":103,"column":32}},"34":{"start":{"line":104,"column":29},"end":{"line":104,"column":31}},"35":{"start":{"line":106,"column":38},"end":{"line":106,"column":47}},"36":{"start":{"line":107,"column":12},"end":{"line":125,"column":13}},"37":{"start":{"line":108,"column":16},"end":{"line":124,"column":17}},"38":{"start":{"line":109,"column":20},"end":{"line":123,"column":21}},"39":{"start":{"line":111,"column":41},"end":{"line":111,"column":72}},"40":{"start":{"line":112,"column":24},"end":{"line":116,"column":27}},"41":{"start":{"line":119,"column":24},"end":{"line":122,"column":27}},"42":{"start":{"line":127,"column":12},"end":{"line":138,"column":13}},"43":{"start":{"line":128,"column":16},"end":{"line":137,"column":17}},"44":{"start":{"line":129,"column":20},"end":{"line":136,"column":21}},"45":{"start":{"line":130,"column":41},"end":{"line":130,"column":72}},"46":{"start":{"line":131,"column":24},"end":{"line":135,"column":27}},"47":{"start":{"line":139,"column":28},"end":{"line":139,"column":50}},"48":{"start":{"line":140,"column":12},"end":{"line":145,"column":13}},"49":{"start":{"line":141,"column":16},"end":{"line":141,"column":80}},"50":{"start":{"line":144,"column":16},"end":{"line":144,"column":64}},"51":{"start":{"line":146,"column":12},"end":{"line":150,"column":14}},"52":{"start":{"line":153,"column":12},"end":{"line":153,"column":79}},"53":{"start":{"line":163,"column":8},"end":{"line":219,"column":9}},"54":{"start":{"line":164,"column":36},"end":{"line":164,"column":69}},"55":{"start":{"line":166,"column":32},"end":{"line":166,"column":54}},"56":{"start":{"line":167,"column":33},"end":{"line":167,"column":74}},"57":{"start":{"line":167,"column":62},"end":{"line":167,"column":73}},"58":{"start":{"line":168,"column":36},"end":{"line":168,"column":57}},"59":{"start":{"line":169,"column":35},"end":{"line":169,"column":55}},"60":{"start":{"line":170,"column":45},"end":{"line":170,"column":126}},"61":{"start":{"line":172,"column":32},"end":{"line":172,"column":41}},"62":{"start":{"line":173,"column":30},"end":{"line":173,"column":32}},"63":{"start":{"line":174,"column":12},"end":{"line":188,"column":13}},"64":{"start":{"line":175,"column":16},"end":{"line":187,"column":17}},"65":{"start":{"line":176,"column":20},"end":{"line":186,"column":21}},"66":{"start":{"line":177,"column":46},"end":{"line":177,"column":71}},"67":{"start":{"line":178,"column":24},"end":{"line":182,"column":27}},"68":{"start":{"line":185,"column":24},"end":{"line":185,"column":57}},"69":{"start":{"line":192,"column":32},"end":{"line":192,"column":34}},"70":{"start":{"line":193,"column":12},"end":{"line":204,"column":13}},"71":{"start":{"line":194,"column":38},"end":{"line":194,"column":60}},"72":{"start":{"line":195,"column":16},"end":{"line":197,"column":17}},"73":{"start":{"line":196,"column":20},"end":{"line":196,"column":49}},"74":{"start":{"line":198,"column":16},"end":{"line":200,"column":17}},"75":{"start":{"line":199,"column":20},"end":{"line":199,"column":71}},"76":{"start":{"line":201,"column":16},"end":{"line":203,"column":17}},"77":{"start":{"line":202,"column":20},"end":{"line":202,"column":72}},"78":{"start":{"line":205,"column":12},"end":{"line":215,"column":14}},"79":{"start":{"line":218,"column":12},"end":{"line":218,"column":75}},"80":{"start":{"line":229,"column":8},"end":{"line":233,"column":10}},"81":{"start":{"line":243,"column":8},"end":{"line":247,"column":10}},"82":{"start":{"line":256,"column":8},"end":{"line":260,"column":10}},"83":{"start":{"line":270,"column":8},"end":{"line":346,"column":9}},"84":{"start":{"line":271,"column":27},"end":{"line":271,"column":67}},"85":{"start":{"line":272,"column":27},"end":{"line":272,"column":29}},"86":{"start":{"line":273,"column":29},"end":{"line":273,"column":31}},"87":{"start":{"line":274,"column":33},"end":{"line":274,"column":34}},"88":{"start":{"line":275,"column":36},"end":{"line":275,"column":37}},"89":{"start":{"line":276,"column":35},"end":{"line":276,"column":36}},"90":{"start":{"line":278,"column":32},"end":{"line":278,"column":41}},"91":{"start":{"line":279,"column":12},"end":{"line":283,"column":13}},"92":{"start":{"line":280,"column":16},"end":{"line":282,"column":17}},"93":{"start":{"line":281,"column":20},"end":{"line":281,"column":53}},"94":{"start":{"line":284,"column":12},"end":{"line":332,"column":13}},"95":{"start":{"line":285,"column":68},"end":{"line":285,"column":71}},"96":{"start":{"line":287,"column":16},"end":{"line":289,"column":17}},"97":{"start":{"line":288,"column":20},"end":{"line":288,"column":81}},"98":{"start":{"line":291,"column":16},"end":{"line":295,"column":17}},"99":{"start":{"line":292,"column":20},"end":{"line":294,"column":21}},"100":{"start":{"line":293,"column":24},"end":{"line":293,"column":76}},"101":{"start":{"line":296,"column":16},"end":{"line":331,"column":17}},"102":{"start":{"line":298,"column":24},"end":{"line":298,"column":67}},"103":{"start":{"line":300,"column":24},"end":{"line":305,"column":25}},"104":{"start":{"line":301,"column":28},"end":{"line":304,"column":29}},"105":{"start":{"line":302,"column":54},"end":{"line":302,"column":79}},"106":{"start":{"line":303,"column":32},"end":{"line":303,"column":114}},"107":{"start":{"line":306,"column":24},"end":{"line":306,"column":30}},"108":{"start":{"line":308,"column":24},"end":{"line":308,"column":70}},"109":{"start":{"line":310,"column":24},"end":{"line":314,"column":25}},"110":{"start":{"line":311,"column":28},"end":{"line":313,"column":29}},"111":{"start":{"line":312,"column":32},"end":{"line":312,"column":96}},"112":{"start":{"line":315,"column":24},"end":{"line":315,"column":30}},"113":{"start":{"line":317,"column":24},"end":{"line":317,"column":69}},"114":{"start":{"line":319,"column":24},"end":{"line":323,"column":25}},"115":{"start":{"line":320,"column":28},"end":{"line":322,"column":29}},"116":{"start":{"line":321,"column":32},"end":{"line":321,"column":93}},"117":{"start":{"line":325,"column":24},"end":{"line":327,"column":25}},"118":{"start":{"line":326,"column":28},"end":{"line":326,"column":101}},"119":{"start":{"line":328,"column":24},"end":{"line":328,"column":30}},"120":{"start":{"line":330,"column":24},"end":{"line":330,"column":69}},"121":{"start":{"line":333,"column":12},"end":{"line":342,"column":14}},"122":{"start":{"line":345,"column":12},"end":{"line":345,"column":81}},"123":{"start":{"line":349,"column":0},"end":{"line":349,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":1},"end":{"line":8,"column":2}},"loc":{"start":{"line":8,"column":27},"end":{"line":12,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":32},"end":{"line":21,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":35},"end":{"line":49,"column":5}},"line":40},"3":{"name":"(anonymous_3)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":23},"end":{"line":75,"column":5}},"line":55},"4":{"name":"(anonymous_4)","decl":{"start":{"line":60,"column":68},"end":{"line":60,"column":69}},"loc":{"start":{"line":60,"column":91},"end":{"line":68,"column":17}},"line":60},"5":{"name":"(anonymous_5)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":48},"end":{"line":93,"column":5}},"line":82},"6":{"name":"(anonymous_6)","decl":{"start":{"line":86,"column":38},"end":{"line":86,"column":39}},"loc":{"start":{"line":86,"column":43},"end":{"line":87,"column":73}},"line":86},"7":{"name":"(anonymous_7)","decl":{"start":{"line":100,"column":4},"end":{"line":100,"column":5}},"loc":{"start":{"line":100,"column":42},"end":{"line":155,"column":5}},"line":100},"8":{"name":"(anonymous_8)","decl":{"start":{"line":162,"column":4},"end":{"line":162,"column":5}},"loc":{"start":{"line":162,"column":32},"end":{"line":220,"column":5}},"line":162},"9":{"name":"(anonymous_9)","decl":{"start":{"line":167,"column":57},"end":{"line":167,"column":58}},"loc":{"start":{"line":167,"column":62},"end":{"line":167,"column":73}},"line":167},"10":{"name":"(anonymous_10)","decl":{"start":{"line":228,"column":4},"end":{"line":228,"column":5}},"loc":{"start":{"line":228,"column":47},"end":{"line":234,"column":5}},"line":228},"11":{"name":"(anonymous_11)","decl":{"start":{"line":242,"column":4},"end":{"line":242,"column":5}},"loc":{"start":{"line":242,"column":51},"end":{"line":248,"column":5}},"line":242},"12":{"name":"(anonymous_12)","decl":{"start":{"line":255,"column":4},"end":{"line":255,"column":5}},"loc":{"start":{"line":255,"column":36},"end":{"line":261,"column":5}},"line":255},"13":{"name":"(anonymous_13)","decl":{"start":{"line":269,"column":4},"end":{"line":269,"column":5}},"loc":{"start":{"line":269,"column":50},"end":{"line":347,"column":5}},"line":269}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":3},"end":{"line":12,"column":67}},"type":"binary-expr","locations":[{"start":{"line":12,"column":3},"end":{"line":12,"column":17}},{"start":{"line":12,"column":22},"end":{"line":12,"column":66}}],"line":12},"1":{"loc":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},{"start":{},"end":{}}],"line":41},"2":{"loc":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},{"start":{},"end":{}}],"line":44},"3":{"loc":{"start":{"line":59,"column":12},"end":{"line":69,"column":13}},"type":"if","locations":[{"start":{"line":59,"column":12},"end":{"line":69,"column":13}},{"start":{},"end":{}}],"line":59},"4":{"loc":{"start":{"line":61,"column":20},"end":{"line":67,"column":21}},"type":"if","locations":[{"start":{"line":61,"column":20},"end":{"line":67,"column":21}},{"start":{},"end":{}}],"line":61},"5":{"loc":{"start":{"line":61,"column":24},"end":{"line":61,"column":70}},"type":"binary-expr","locations":[{"start":{"line":61,"column":24},"end":{"line":61,"column":42}},{"start":{"line":61,"column":46},"end":{"line":61,"column":70}}],"line":61},"6":{"loc":{"start":{"line":86,"column":43},"end":{"line":87,"column":73}},"type":"binary-expr","locations":[{"start":{"line":86,"column":43},"end":{"line":86,"column":69}},{"start":{"line":87,"column":16},"end":{"line":87,"column":73}}],"line":86},"7":{"loc":{"start":{"line":88,"column":19},"end":{"line":88,"column":47}},"type":"cond-expr","locations":[{"start":{"line":88,"column":27},"end":{"line":88,"column":42}},{"start":{"line":88,"column":45},"end":{"line":88,"column":47}}],"line":88},"8":{"loc":{"start":{"line":109,"column":20},"end":{"line":123,"column":21}},"type":"if","locations":[{"start":{"line":109,"column":20},"end":{"line":123,"column":21}},{"start":{"line":118,"column":25},"end":{"line":123,"column":21}}],"line":109},"9":{"loc":{"start":{"line":127,"column":12},"end":{"line":138,"column":13}},"type":"if","locations":[{"start":{"line":127,"column":12},"end":{"line":138,"column":13}},{"start":{},"end":{}}],"line":127},"10":{"loc":{"start":{"line":129,"column":20},"end":{"line":136,"column":21}},"type":"if","locations":[{"start":{"line":129,"column":20},"end":{"line":136,"column":21}},{"start":{},"end":{}}],"line":129},"11":{"loc":{"start":{"line":140,"column":12},"end":{"line":145,"column":13}},"type":"if","locations":[{"start":{"line":140,"column":12},"end":{"line":145,"column":13}},{"start":{"line":143,"column":17},"end":{"line":145,"column":13}}],"line":140},"12":{"loc":{"start":{"line":164,"column":36},"end":{"line":164,"column":69}},"type":"binary-expr","locations":[{"start":{"line":164,"column":36},"end":{"line":164,"column":42}},{"start":{"line":164,"column":46},"end":{"line":164,"column":69}}],"line":164},"13":{"loc":{"start":{"line":170,"column":45},"end":{"line":170,"column":126}},"type":"cond-expr","locations":[{"start":{"line":170,"column":63},"end":{"line":170,"column":122}},{"start":{"line":170,"column":125},"end":{"line":170,"column":126}}],"line":170},"14":{"loc":{"start":{"line":176,"column":20},"end":{"line":186,"column":21}},"type":"if","locations":[{"start":{"line":176,"column":20},"end":{"line":186,"column":21}},{"start":{"line":184,"column":25},"end":{"line":186,"column":21}}],"line":176},"15":{"loc":{"start":{"line":195,"column":16},"end":{"line":197,"column":17}},"type":"if","locations":[{"start":{"line":195,"column":16},"end":{"line":197,"column":17}},{"start":{},"end":{}}],"line":195},"16":{"loc":{"start":{"line":198,"column":16},"end":{"line":200,"column":17}},"type":"if","locations":[{"start":{"line":198,"column":16},"end":{"line":200,"column":17}},{"start":{},"end":{}}],"line":198},"17":{"loc":{"start":{"line":198,"column":20},"end":{"line":198,"column":79}},"type":"binary-expr","locations":[{"start":{"line":198,"column":20},"end":{"line":198,"column":33}},{"start":{"line":198,"column":37},"end":{"line":198,"column":79}}],"line":198},"18":{"loc":{"start":{"line":201,"column":16},"end":{"line":203,"column":17}},"type":"if","locations":[{"start":{"line":201,"column":16},"end":{"line":203,"column":17}},{"start":{},"end":{}}],"line":201},"19":{"loc":{"start":{"line":201,"column":20},"end":{"line":201,"column":81}},"type":"binary-expr","locations":[{"start":{"line":201,"column":20},"end":{"line":201,"column":34}},{"start":{"line":201,"column":38},"end":{"line":201,"column":81}}],"line":201},"20":{"loc":{"start":{"line":271,"column":27},"end":{"line":271,"column":67}},"type":"binary-expr","locations":[{"start":{"line":271,"column":27},"end":{"line":271,"column":40}},{"start":{"line":271,"column":44},"end":{"line":271,"column":67}}],"line":271},"21":{"loc":{"start":{"line":287,"column":16},"end":{"line":289,"column":17}},"type":"if","locations":[{"start":{"line":287,"column":16},"end":{"line":289,"column":17}},{"start":{},"end":{}}],"line":287},"22":{"loc":{"start":{"line":287,"column":20},"end":{"line":287,"column":97}},"type":"binary-expr","locations":[{"start":{"line":287,"column":20},"end":{"line":287,"column":52}},{"start":{"line":287,"column":56},"end":{"line":287,"column":97}}],"line":287},"23":{"loc":{"start":{"line":292,"column":20},"end":{"line":294,"column":21}},"type":"if","locations":[{"start":{"line":292,"column":20},"end":{"line":294,"column":21}},{"start":{},"end":{}}],"line":292},"24":{"loc":{"start":{"line":296,"column":16},"end":{"line":331,"column":17}},"type":"switch","locations":[{"start":{"line":297,"column":20},"end":{"line":306,"column":30}},{"start":{"line":307,"column":20},"end":{"line":315,"column":30}},{"start":{"line":316,"column":20},"end":{"line":328,"column":30}},{"start":{"line":329,"column":20},"end":{"line":330,"column":69}}],"line":296},"25":{"loc":{"start":{"line":301,"column":28},"end":{"line":304,"column":29}},"type":"if","locations":[{"start":{"line":301,"column":28},"end":{"line":304,"column":29}},{"start":{},"end":{}}],"line":301},"26":{"loc":{"start":{"line":311,"column":28},"end":{"line":313,"column":29}},"type":"if","locations":[{"start":{"line":311,"column":28},"end":{"line":313,"column":29}},{"start":{},"end":{}}],"line":311},"27":{"loc":{"start":{"line":320,"column":28},"end":{"line":322,"column":29}},"type":"if","locations":[{"start":{"line":320,"column":28},"end":{"line":322,"column":29}},{"start":{},"end":{}}],"line":320},"28":{"loc":{"start":{"line":325,"column":24},"end":{"line":327,"column":25}},"type":"if","locations":[{"start":{"line":325,"column":24},"end":{"line":327,"column":25}},{"start":{},"end":{}}],"line":325}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":4,"7":4,"8":4,"9":1,"10":28,"11":2,"12":26,"13":2,"14":24,"15":24,"16":16,"17":16,"18":16,"19":16,"20":16,"21":39,"22":39,"23":16,"24":0,"25":5,"26":5,"27":5,"28":10,"29":5,"30":0,"31":4,"32":4,"33":4,"34":4,"35":4,"36":4,"37":10,"38":22,"39":0,"40":0,"41":22,"42":4,"43":2,"44":2,"45":2,"46":2,"47":4,"48":4,"49":2,"50":2,"51":4,"52":0,"53":3,"54":3,"55":3,"56":3,"57":7,"58":3,"59":3,"60":3,"61":3,"62":3,"63":3,"64":7,"65":15,"66":1,"67":1,"68":14,"69":3,"70":3,"71":7,"72":7,"73":0,"74":7,"75":4,"76":7,"77":3,"78":3,"79":0,"80":6,"81":2,"82":2,"83":5,"84":5,"85":5,"86":5,"87":5,"88":5,"89":5,"90":5,"91":5,"92":13,"93":29,"94":5,"95":7,"96":7,"97":0,"98":7,"99":10,"100":0,"101":7,"102":5,"103":5,"104":8,"105":2,"106":2,"107":5,"108":1,"109":1,"110":1,"111":0,"112":1,"113":1,"114":1,"115":1,"116":0,"117":1,"118":0,"119":1,"120":0,"121":5,"122":0,"123":1},"f":{"0":1,"1":4,"2":28,"3":16,"4":39,"5":5,"6":10,"7":4,"8":3,"9":7,"10":6,"11":2,"12":2,"13":5},"b":{"0":[1,1],"1":[2,26],"2":[2,24],"3":[16,0],"4":[39,0],"5":[39,39],"6":[10,9],"7":[2,3],"8":[0,22],"9":[2,2],"10":[2,0],"11":[2,2],"12":[3,0],"13":[3,0],"14":[1,14],"15":[0,7],"16":[4,3],"17":[7,4],"18":[3,4],"19":[7,4],"20":[5,0],"21":[0,7],"22":[7,6],"23":[0,10],"24":[5,1,1,0],"25":[2,6],"26":[0,1],"27":[0,1],"28":[0,1]},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/core/FacetManager.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/core/FacetManager.ts"],"names":[],"mappings":"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","sourcesContent":["import { Provider } from 'ethers';\nimport { Diamond } from 'diamonds';\n\n/**\n * Facet information structure\n */\nexport interface FacetInfo {\n  /** Facet name */\n  name: string;\n  /** Facet contract address */\n  address: string;\n  /** Function selectors handled by this facet */\n  selectors: string[];\n}\n\n/**\n * Selector conflict information\n */\nexport interface SelectorConflict {\n  /** The conflicting selector */\n  selector: string;\n  /** Name of the existing facet that has this selector */\n  existingFacet: string;\n  /** Address of the existing facet */\n  existingFacetAddress: string;\n}\n\n/**\n * Selector validation result\n */\nexport interface SelectorValidationResult {\n  /** Whether the selectors are valid (no conflicts) */\n  isValid: boolean;\n  /** Array of conflicts found */\n  conflicts: SelectorConflict[];\n  /** Additional validation messages */\n  messages: string[];\n}\n\n/**\n * Facet analysis result\n */\nexport interface FacetAnalysisResult {\n  /** Total number of facets */\n  totalFacets: number;\n  /** Total number of unique selectors */\n  totalSelectors: number;\n  /** Average selectors per facet */\n  averageSelectorsPerFacet: number;\n  /** Conflicts found during analysis */\n  conflicts: SelectorConflict[];\n  /** Additional analysis details */\n  details: {\n    /** Largest facet by selector count */\n    largestFacet?: {\n      name: string;\n      selectorCount: number;\n    };\n    /** Smallest facet by selector count */\n    smallestFacet?: {\n      name: string;\n      selectorCount: number;\n    };\n    /** Facets with no selectors */\n    emptyFacets: string[];\n  };\n}\n\n/**\n * Diamond cut action types\n */\nexport enum FacetCutAction {\n  Add = 0,\n  Replace = 1,\n  Remove = 2\n}\n\n/**\n * Diamond cut structure\n */\nexport interface DiamondCut {\n  /** Target facet address */\n  facetAddress: string;\n  /** Action to perform */\n  action: FacetCutAction;\n  /** Function selectors to operate on */\n  functionSelectors: string[];\n}\n\n/**\n * Diamond cut validation result\n */\nexport interface DiamondCutValidationResult {\n  /** Whether the cut is valid */\n  isValid: boolean;\n  /** Validation errors */\n  errors: string[];\n  /** Validation warnings */\n  warnings: string[];\n  /** Summary of changes */\n  summary: {\n    /** Number of selectors being added */\n    addedSelectors: number;\n    /** Number of selectors being replaced */\n    replacedSelectors: number;\n    /** Number of selectors being removed */\n    removedSelectors: number;\n  };\n}\n\n/**\n * FacetManager errors\n */\nexport class FacetManagerError extends Error {\n  constructor(message: string, public readonly cause?: Error) {\n    super(message);\n    this.name = 'FacetManagerError';\n  }\n}\n\n/**\n * FacetManager class for managing diamond facets\n * \n * This class provides comprehensive facet management capabilities including:\n * - Listing and analyzing facets\n * - Validating function selectors\n * - Creating diamond cuts\n * - Validating diamond cuts before execution\n */\nexport class FacetManager {\n  private readonly diamond: Diamond;\n  private readonly provider: Provider;\n\n  /**\n   * Creates a new FacetManager instance\n   * \n   * @param diamond - Diamond instance from the diamonds module\n   * @param provider - Ethereum provider (ethers.js)\n   */\n  constructor(diamond: Diamond, provider: Provider) {\n    if (!diamond) {\n      throw new FacetManagerError('Diamond instance is required');\n    }\n    if (!provider) {\n      throw new FacetManagerError('Provider is required');\n    }\n\n    this.diamond = diamond;\n    this.provider = provider;\n  }\n\n  /**\n   * List all facets in the diamond\n   * \n   * @returns Promise resolving to array of facet information\n   */\n  public async listFacets(): Promise<FacetInfo[]> {\n    try {\n      const deployedData = this.diamond.getDeployedDiamondData();\n      const facets: FacetInfo[] = [];\n\n      if (deployedData?.DeployedFacets) {\n        Object.entries(deployedData.DeployedFacets).forEach(([name, facetData]) => {\n          if (facetData?.address && facetData?.funcSelectors) {\n            facets.push({\n              name,\n              address: facetData.address,\n              selectors: facetData.funcSelectors\n            });\n          }\n        });\n      }\n\n      return facets;\n    } catch (error) {\n      throw new FacetManagerError('Failed to list facets', error as Error);\n    }\n  }\n\n  /**\n   * Get function selectors for a specific facet\n   * \n   * @param facetIdentifier - Facet name or address\n   * @returns Promise resolving to array of function selectors\n   */\n  public async getSelectorsForFacet(facetIdentifier: string): Promise<string[]> {\n    try {\n      const facets = await this.listFacets();\n      \n      // Search by name first, then by address\n      const facet = facets.find(f => \n        f.name === facetIdentifier || \n        f.address.toLowerCase() === facetIdentifier.toLowerCase()\n      );\n\n      return facet ? facet.selectors : [];\n    } catch (error) {\n      throw new FacetManagerError(`Failed to get selectors for facet ${facetIdentifier}`, error as Error);\n    }\n  }\n\n  /**\n   * Validate function selectors for conflicts\n   * \n   * @param newSelectors - Optional array of new selectors to validate against existing ones\n   * @returns Promise resolving to validation result\n   */\n  public async validateSelectors(newSelectors?: string[]): Promise<SelectorValidationResult> {\n    try {\n      const facets = await this.listFacets();\n      const conflicts: SelectorConflict[] = [];\n      const messages: string[] = [];\n\n      // Build map of existing selectors\n      const existingSelectors = new Map<string, { facet: string; address: string }>();\n      \n      for (const facet of facets) {\n        for (const selector of facet.selectors) {\n          if (existingSelectors.has(selector)) {\n            // Conflict within existing facets\n            const existing = existingSelectors.get(selector)!;\n            conflicts.push({\n              selector,\n              existingFacet: existing.facet,\n              existingFacetAddress: existing.address\n            });\n          } else {\n            existingSelectors.set(selector, {\n              facet: facet.name,\n              address: facet.address\n            });\n          }\n        }\n      }\n\n      // Check new selectors against existing ones if provided\n      if (newSelectors) {\n        for (const selector of newSelectors) {\n          if (existingSelectors.has(selector)) {\n            const existing = existingSelectors.get(selector)!;\n            conflicts.push({\n              selector,\n              existingFacet: existing.facet,\n              existingFacetAddress: existing.address\n            });\n          }\n        }\n      }\n\n      const isValid = conflicts.length === 0;\n      \n      if (!isValid) {\n        messages.push(`Found ${conflicts.length} selector conflict(s)`);\n      } else {\n        messages.push('No selector conflicts detected');\n      }\n\n      return {\n        isValid,\n        conflicts,\n        messages\n      };\n    } catch (error) {\n      throw new FacetManagerError('Failed to validate selectors', error as Error);\n    }\n  }\n\n  /**\n   * Analyze facets for insights and potential issues\n   * \n   * @param facets - Array of facets to analyze (defaults to current facets)\n   * @returns Promise resolving to analysis result\n   */\n  public async analyzeFacets(facets?: FacetInfo[]): Promise<FacetAnalysisResult> {\n    try {\n      const facetsToAnalyze = facets || await this.listFacets();\n      \n      // Calculate basic statistics\n      const totalFacets = facetsToAnalyze.length;\n      const allSelectors = facetsToAnalyze.flatMap(f => f.selectors);\n      const uniqueSelectors = new Set(allSelectors);\n      const totalSelectors = uniqueSelectors.size;\n      const averageSelectorsPerFacet = totalFacets > 0 ? Math.round((allSelectors.length / totalFacets) * 100) / 100 : 0;\n\n      // Find conflicts\n      const selectorMap = new Map<string, FacetInfo>();\n      const conflicts: SelectorConflict[] = [];\n\n      for (const facet of facetsToAnalyze) {\n        for (const selector of facet.selectors) {\n          if (selectorMap.has(selector)) {\n            const existingFacet = selectorMap.get(selector)!;\n            conflicts.push({\n              selector,\n              existingFacet: existingFacet.name,\n              existingFacetAddress: existingFacet.address\n            });\n          } else {\n            selectorMap.set(selector, facet);\n          }\n        }\n      }\n\n      // Find largest and smallest facets\n      let largestFacet: { name: string; selectorCount: number } | undefined;\n      let smallestFacet: { name: string; selectorCount: number } | undefined;\n      const emptyFacets: string[] = [];\n\n      for (const facet of facetsToAnalyze) {\n        const selectorCount = facet.selectors.length;\n        \n        if (selectorCount === 0) {\n          emptyFacets.push(facet.name);\n        }\n\n        if (!largestFacet || selectorCount > largestFacet.selectorCount) {\n          largestFacet = { name: facet.name, selectorCount };\n        }\n\n        if (!smallestFacet || selectorCount < smallestFacet.selectorCount) {\n          smallestFacet = { name: facet.name, selectorCount };\n        }\n      }\n\n      return {\n        totalFacets,\n        totalSelectors,\n        averageSelectorsPerFacet,\n        conflicts,\n        details: {\n          largestFacet,\n          smallestFacet,\n          emptyFacets\n        }\n      };\n    } catch (error) {\n      throw new FacetManagerError('Failed to analyze facets', error as Error);\n    }\n  }\n\n  /**\n   * Create a diamond cut for adding a facet\n   * \n   * @param facetAddress - Address of the facet to add\n   * @param selectors - Function selectors to add\n   * @returns Diamond cut structure\n   */\n  public createAddFacetCut(facetAddress: string, selectors: string[]): DiamondCut {\n    return {\n      facetAddress,\n      action: FacetCutAction.Add,\n      functionSelectors: [...selectors]\n    };\n  }\n\n  /**\n   * Create a diamond cut for replacing facet selectors\n   * \n   * @param facetAddress - Address of the new facet\n   * @param selectors - Function selectors to replace\n   * @returns Diamond cut structure\n   */\n  public createReplaceFacetCut(facetAddress: string, selectors: string[]): DiamondCut {\n    return {\n      facetAddress,\n      action: FacetCutAction.Replace,\n      functionSelectors: [...selectors]\n    };\n  }\n\n  /**\n   * Create a diamond cut for removing selectors\n   * \n   * @param selectors - Function selectors to remove\n   * @returns Diamond cut structure\n   */\n  public createRemoveFacetCut(selectors: string[]): DiamondCut {\n    return {\n      facetAddress: '0x0000000000000000000000000000000000000000',\n      action: FacetCutAction.Remove,\n      functionSelectors: [...selectors]\n    };\n  }\n\n  /**\n   * Validate a diamond cut before execution\n   * \n   * @param cuts - Array of diamond cuts to validate\n   * @param currentFacets - Current facets (defaults to current deployment)\n   * @returns Promise resolving to validation result\n   */\n  public async validateDiamondCut(\n    cuts: DiamondCut[], \n    currentFacets?: FacetInfo[]\n  ): Promise<DiamondCutValidationResult> {\n    try {\n      const facets = currentFacets || await this.listFacets();\n      const errors: string[] = [];\n      const warnings: string[] = [];\n      let addedSelectors = 0;\n      let replacedSelectors = 0;\n      let removedSelectors = 0;\n\n      // Build current selector map\n      const selectorMap = new Map<string, FacetInfo>();\n      for (const facet of facets) {\n        for (const selector of facet.selectors) {\n          selectorMap.set(selector, facet);\n        }\n      }\n\n      for (const cut of cuts) {\n        const { facetAddress, action, functionSelectors } = cut;\n\n        // Validate facet address format\n        if (action !== FacetCutAction.Remove && !/^0x[a-fA-F0-9]{40}$/.test(facetAddress)) {\n          errors.push(`Invalid facet address format: ${facetAddress}`);\n        }\n\n        // Validate selector format\n        for (const selector of functionSelectors) {\n          if (!/^0x[a-fA-F0-9]{8}$/.test(selector)) {\n            errors.push(`Invalid selector format: ${selector}`);\n          }\n        }\n\n        switch (action) {\n          case FacetCutAction.Add:\n            addedSelectors += functionSelectors.length;\n            \n            // Check for conflicts with existing selectors\n            for (const selector of functionSelectors) {\n              if (selectorMap.has(selector)) {\n                const existingFacet = selectorMap.get(selector)!;\n                errors.push(`Selector ${selector} already exists in facet ${existingFacet.name}`);\n              }\n            }\n            break;\n\n          case FacetCutAction.Replace:\n            replacedSelectors += functionSelectors.length;\n            \n            // Check that selectors exist to replace\n            for (const selector of functionSelectors) {\n              if (!selectorMap.has(selector)) {\n                warnings.push(`Selector ${selector} does not exist to replace`);\n              }\n            }\n            break;\n\n          case FacetCutAction.Remove:\n            removedSelectors += functionSelectors.length;\n            \n            // Check that selectors exist to remove\n            for (const selector of functionSelectors) {\n              if (!selectorMap.has(selector)) {\n                errors.push(`Selector ${selector} does not exist to remove`);\n              }\n            }\n            \n            // Validate zero address for remove action\n            if (facetAddress !== '0x0000000000000000000000000000000000000000') {\n              errors.push(`Remove action must use zero address, got: ${facetAddress}`);\n            }\n            break;\n\n          default:\n            errors.push(`Invalid cut action: ${action}`);\n        }\n      }\n\n      return {\n        isValid: errors.length === 0,\n        errors,\n        warnings,\n        summary: {\n          addedSelectors,\n          replacedSelectors,\n          removedSelectors\n        }\n      };\n    } catch (error) {\n      throw new FacetManagerError('Failed to validate diamond cut', error as Error);\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2992424c898f29aee6b6437fe02733b918187130","contentHash":"7d6e47fe742a061edaebb27475e42f19961a6e929486778b3b9f0ee477f33cd8"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/standalone.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/standalone.ts","statementMap":{"0":{"start":{"line":9,"column":0},"end":{"line":9,"column":62}},"1":{"start":{"line":10,"column":0},"end":{"line":10,"column":55}},"2":{"start":{"line":11,"column":16},"end":{"line":11,"column":32}},"3":{"start":{"line":13,"column":23},"end":{"line":13,"column":55}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":133}},"5":{"start":{"line":14,"column":88},"end":{"line":14,"column":127}},"6":{"start":{"line":15,"column":21},"end":{"line":15,"column":51}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":127}},"8":{"start":{"line":16,"column":86},"end":{"line":16,"column":121}},"9":{"start":{"line":18,"column":0},"end":{"line":18,"column":63}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":74},"end":{"line":14,"column":75}},"loc":{"start":{"line":14,"column":86},"end":{"line":14,"column":129}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":72},"end":{"line":16,"column":73}},"loc":{"start":{"line":16,"column":84},"end":{"line":16,"column":123}},"line":16}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":10,"6":1,"7":1,"8":10,"9":1},"f":{"0":10,"1":10},"b":{},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/standalone.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/standalone.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;AAEH,oCAAoC;AACpC,wDAAuD;AAA9C,gHAAA,cAAc,OAAA;AACvB,oDAAmD;AAA1C,4GAAA,YAAY,OAAA;AAErB,oBAAoB;AACpB,+DAAqC","sourcesContent":["/**\n * Standalone Diamonds Monitor API\n * \n * This module provides standalone access to diamond monitoring capabilities\n * without requiring Hardhat integration. Use this for direct integration\n * with Diamond instances from the diamonds module.\n */\n\n// Core classes for standalone usage\nexport { DiamondMonitor } from './core/DiamondMonitor';\nexport { FacetManager } from './core/FacetManager';\n\n// Utility functions\nexport * from './utils/DiamondUtils';\n\n// Type definitions from DiamondMonitor\nexport type {\n  DiamondMonitorConfig,\n  DiamondInfo,\n  FacetInfo as MonitorFacetInfo,\n  HealthCheckResult,\n  HealthCheck,\n  EventListener,\n  MonitoringError\n} from './core/DiamondMonitor';\n\n// Type definitions from FacetManager  \nexport type {\n  FacetInfo,\n  SelectorConflict,\n  SelectorValidationResult,\n  FacetAnalysisResult,\n  FacetCutAction,\n  DiamondCut,\n  DiamondCutValidationResult,\n  FacetManagerError\n} from './core/FacetManager';\n\n// Re-export utility types\nexport type { ComparisonResult } from './utils/DiamondUtils';\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"18f6f661c6d882f296f868942ec0e8ac916944e2","contentHash":"178e5cd103cbfed0caecdfc574a3b25ed7c6d47167a2ed563fe0b854864ed707"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/utils/DiamondUtils.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/utils/DiamondUtils.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":44}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":34}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":22}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":22}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":42}},"11":{"start":{"line":16,"column":0},"end":{"line":16,"column":32}},"12":{"start":{"line":17,"column":0},"end":{"line":17,"column":30}},"13":{"start":{"line":18,"column":0},"end":{"line":18,"column":32}},"14":{"start":{"line":19,"column":0},"end":{"line":19,"column":40}},"15":{"start":{"line":27,"column":39},"end":{"line":27,"column":56}},"16":{"start":{"line":28,"column":17},"end":{"line":28,"column":50}},"17":{"start":{"line":29,"column":4},"end":{"line":29,"column":29}},"18":{"start":{"line":38,"column":4},"end":{"line":38,"column":39}},"19":{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},"20":{"start":{"line":49,"column":8},"end":{"line":49,"column":23}},"21":{"start":{"line":51,"column":4},"end":{"line":55,"column":5}},"22":{"start":{"line":52,"column":29},"end":{"line":52,"column":57}},"23":{"start":{"line":53,"column":29},"end":{"line":53,"column":54}},"24":{"start":{"line":54,"column":8},"end":{"line":54,"column":89}},"25":{"start":{"line":56,"column":4},"end":{"line":56,"column":33}},"26":{"start":{"line":65,"column":4},"end":{"line":65,"column":47}},"27":{"start":{"line":75,"column":19},"end":{"line":75,"column":40}},"28":{"start":{"line":76,"column":19},"end":{"line":76,"column":40}},"29":{"start":{"line":77,"column":18},"end":{"line":77,"column":72}},"30":{"start":{"line":77,"column":50},"end":{"line":77,"column":71}},"31":{"start":{"line":78,"column":20},"end":{"line":78,"column":74}},"32":{"start":{"line":78,"column":52},"end":{"line":78,"column":73}},"33":{"start":{"line":79,"column":19},"end":{"line":79,"column":72}},"34":{"start":{"line":79,"column":51},"end":{"line":79,"column":71}},"35":{"start":{"line":80,"column":4},"end":{"line":85,"column":6}},"36":{"start":{"line":94,"column":4},"end":{"line":95,"column":25}},"37":{"start":{"line":95,"column":8},"end":{"line":95,"column":25}},"38":{"start":{"line":96,"column":14},"end":{"line":96,"column":18}},"39":{"start":{"line":97,"column":21},"end":{"line":97,"column":22}},"40":{"start":{"line":98,"column":18},"end":{"line":98,"column":45}},"41":{"start":{"line":99,"column":14},"end":{"line":99,"column":55}},"42":{"start":{"line":100,"column":4},"end":{"line":100,"column":83}},"43":{"start":{"line":110,"column":47},"end":{"line":110,"column":64}},"44":{"start":{"line":111,"column":18},"end":{"line":111,"column":51}},"45":{"start":{"line":112,"column":16},"end":{"line":112,"column":33}},"46":{"start":{"line":113,"column":4},"end":{"line":113,"column":55}},"47":{"start":{"line":122,"column":4},"end":{"line":122,"column":59}},"48":{"start":{"line":122,"column":34},"end":{"line":122,"column":57}},"49":{"start":{"line":134,"column":4},"end":{"line":145,"column":5}},"50":{"start":{"line":134,"column":23},"end":{"line":134,"column":24}},"51":{"start":{"line":135,"column":8},"end":{"line":144,"column":9}},"52":{"start":{"line":136,"column":12},"end":{"line":136,"column":30}},"53":{"start":{"line":139,"column":12},"end":{"line":139,"column":30}},"54":{"start":{"line":140,"column":12},"end":{"line":142,"column":13}},"55":{"start":{"line":141,"column":16},"end":{"line":141,"column":22}},"56":{"start":{"line":143,"column":12},"end":{"line":143,"column":31}},"57":{"start":{"line":146,"column":4},"end":{"line":146,"column":20}},"58":{"start":{"line":155,"column":4},"end":{"line":155,"column":47}},"59":{"start":{"line":164,"column":15},"end":{"line":164,"column":16}},"60":{"start":{"line":165,"column":4},"end":{"line":169,"column":5}},"61":{"start":{"line":165,"column":17},"end":{"line":165,"column":18}},"62":{"start":{"line":166,"column":21},"end":{"line":166,"column":40}},"63":{"start":{"line":167,"column":8},"end":{"line":167,"column":43}},"64":{"start":{"line":168,"column":8},"end":{"line":168,"column":27}},"65":{"start":{"line":170,"column":4},"end":{"line":170,"column":39}},"66":{"start":{"line":179,"column":4},"end":{"line":181,"column":5}},"67":{"start":{"line":180,"column":8},"end":{"line":180,"column":19}},"68":{"start":{"line":182,"column":4},"end":{"line":184,"column":5}},"69":{"start":{"line":183,"column":8},"end":{"line":183,"column":39}},"70":{"start":{"line":185,"column":4},"end":{"line":187,"column":5}},"71":{"start":{"line":186,"column":8},"end":{"line":186,"column":48}},"72":{"start":{"line":186,"column":31},"end":{"line":186,"column":46}},"73":{"start":{"line":188,"column":19},"end":{"line":188,"column":21}},"74":{"start":{"line":189,"column":4},"end":{"line":193,"column":5}},"75":{"start":{"line":190,"column":8},"end":{"line":192,"column":9}},"76":{"start":{"line":191,"column":12},"end":{"line":191,"column":46}},"77":{"start":{"line":194,"column":4},"end":{"line":194,"column":18}},"78":{"start":{"line":203,"column":4},"end":{"line":209,"column":5}},"79":{"start":{"line":204,"column":8},"end":{"line":204,"column":21}},"80":{"start":{"line":205,"column":8},"end":{"line":205,"column":20}},"81":{"start":{"line":208,"column":8},"end":{"line":208,"column":21}},"82":{"start":{"line":219,"column":4},"end":{"line":221,"column":5}},"83":{"start":{"line":220,"column":8},"end":{"line":220,"column":19}},"84":{"start":{"line":222,"column":4},"end":{"line":222,"column":47}}},"fnMap":{"0":{"name":"getSelector","decl":{"start":{"line":26,"column":9},"end":{"line":26,"column":20}},"loc":{"start":{"line":26,"column":32},"end":{"line":30,"column":1}},"line":26},"1":{"name":"getSelectors","decl":{"start":{"line":37,"column":9},"end":{"line":37,"column":21}},"loc":{"start":{"line":37,"column":34},"end":{"line":39,"column":1}},"line":37},"2":{"name":"formatAddress","decl":{"start":{"line":47,"column":9},"end":{"line":47,"column":22}},"loc":{"start":{"line":47,"column":40},"end":{"line":57,"column":1}},"line":47},"3":{"name":"isValidAddress","decl":{"start":{"line":64,"column":9},"end":{"line":64,"column":23}},"loc":{"start":{"line":64,"column":33},"end":{"line":66,"column":1}},"line":64},"4":{"name":"compareSelectors","decl":{"start":{"line":74,"column":9},"end":{"line":74,"column":25}},"loc":{"start":{"line":74,"column":54},"end":{"line":86,"column":1}},"line":74},"5":{"name":"(anonymous_5)","decl":{"start":{"line":77,"column":38},"end":{"line":77,"column":39}},"loc":{"start":{"line":77,"column":50},"end":{"line":77,"column":71}},"line":77},"6":{"name":"(anonymous_6)","decl":{"start":{"line":78,"column":40},"end":{"line":78,"column":41}},"loc":{"start":{"line":78,"column":52},"end":{"line":78,"column":73}},"line":78},"7":{"name":"(anonymous_7)","decl":{"start":{"line":79,"column":39},"end":{"line":79,"column":40}},"loc":{"start":{"line":79,"column":51},"end":{"line":79,"column":71}},"line":79},"8":{"name":"formatBytes","decl":{"start":{"line":93,"column":9},"end":{"line":93,"column":20}},"loc":{"start":{"line":93,"column":28},"end":{"line":101,"column":1}},"line":93},"9":{"name":"formatEther","decl":{"start":{"line":109,"column":9},"end":{"line":109,"column":20}},"loc":{"start":{"line":109,"column":40},"end":{"line":114,"column":1}},"line":109},"10":{"name":"sleep","decl":{"start":{"line":121,"column":9},"end":{"line":121,"column":14}},"loc":{"start":{"line":121,"column":19},"end":{"line":123,"column":1}},"line":121},"11":{"name":"(anonymous_11)","decl":{"start":{"line":122,"column":23},"end":{"line":122,"column":24}},"loc":{"start":{"line":122,"column":34},"end":{"line":122,"column":57}},"line":122},"12":{"name":"retry","decl":{"start":{"line":132,"column":15},"end":{"line":132,"column":20}},"loc":{"start":{"line":132,"column":56},"end":{"line":147,"column":1}},"line":132},"13":{"name":"isValidSelector","decl":{"start":{"line":154,"column":9},"end":{"line":154,"column":24}},"loc":{"start":{"line":154,"column":35},"end":{"line":156,"column":1}},"line":154},"14":{"name":"simpleHash","decl":{"start":{"line":163,"column":9},"end":{"line":163,"column":19}},"loc":{"start":{"line":163,"column":27},"end":{"line":171,"column":1}},"line":163},"15":{"name":"deepClone","decl":{"start":{"line":178,"column":9},"end":{"line":178,"column":18}},"loc":{"start":{"line":178,"column":24},"end":{"line":195,"column":1}},"line":178},"16":{"name":"(anonymous_16)","decl":{"start":{"line":186,"column":23},"end":{"line":186,"column":24}},"loc":{"start":{"line":186,"column":31},"end":{"line":186,"column":46}},"line":186},"17":{"name":"isValidUrl","decl":{"start":{"line":202,"column":9},"end":{"line":202,"column":19}},"loc":{"start":{"line":202,"column":25},"end":{"line":210,"column":1}},"line":202},"18":{"name":"truncateString","decl":{"start":{"line":218,"column":9},"end":{"line":218,"column":23}},"loc":{"start":{"line":218,"column":40},"end":{"line":223,"column":1}},"line":218}},"branchMap":{"0":{"loc":{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},{"start":{},"end":{}}],"line":48},"1":{"loc":{"start":{"line":51,"column":4},"end":{"line":55,"column":5}},"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":55,"column":5}},{"start":{},"end":{}}],"line":51},"2":{"loc":{"start":{"line":51,"column":8},"end":{"line":51,"column":41}},"type":"binary-expr","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":14}},{"start":{"line":51,"column":18},"end":{"line":51,"column":41}}],"line":51},"3":{"loc":{"start":{"line":84,"column":20},"end":{"line":84,"column":58}},"type":"binary-expr","locations":[{"start":{"line":84,"column":20},"end":{"line":84,"column":36}},{"start":{"line":84,"column":40},"end":{"line":84,"column":58}}],"line":84},"4":{"loc":{"start":{"line":94,"column":4},"end":{"line":95,"column":25}},"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":95,"column":25}},{"start":{},"end":{}}],"line":94},"5":{"loc":{"start":{"line":109,"column":26},"end":{"line":109,"column":38}},"type":"default-arg","locations":[{"start":{"line":109,"column":37},"end":{"line":109,"column":38}}],"line":109},"6":{"loc":{"start":{"line":132,"column":25},"end":{"line":132,"column":40}},"type":"default-arg","locations":[{"start":{"line":132,"column":39},"end":{"line":132,"column":40}}],"line":132},"7":{"loc":{"start":{"line":132,"column":42},"end":{"line":132,"column":54}},"type":"default-arg","locations":[{"start":{"line":132,"column":50},"end":{"line":132,"column":54}}],"line":132},"8":{"loc":{"start":{"line":140,"column":12},"end":{"line":142,"column":13}},"type":"if","locations":[{"start":{"line":140,"column":12},"end":{"line":142,"column":13}},{"start":{},"end":{}}],"line":140},"9":{"loc":{"start":{"line":179,"column":4},"end":{"line":181,"column":5}},"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":181,"column":5}},{"start":{},"end":{}}],"line":179},"10":{"loc":{"start":{"line":179,"column":8},"end":{"line":179,"column":47}},"type":"binary-expr","locations":[{"start":{"line":179,"column":8},"end":{"line":179,"column":20}},{"start":{"line":179,"column":24},"end":{"line":179,"column":47}}],"line":179},"11":{"loc":{"start":{"line":182,"column":4},"end":{"line":184,"column":5}},"type":"if","locations":[{"start":{"line":182,"column":4},"end":{"line":184,"column":5}},{"start":{},"end":{}}],"line":182},"12":{"loc":{"start":{"line":185,"column":4},"end":{"line":187,"column":5}},"type":"if","locations":[{"start":{"line":185,"column":4},"end":{"line":187,"column":5}},{"start":{},"end":{}}],"line":185},"13":{"loc":{"start":{"line":190,"column":8},"end":{"line":192,"column":9}},"type":"if","locations":[{"start":{"line":190,"column":8},"end":{"line":192,"column":9}},{"start":{},"end":{}}],"line":190},"14":{"loc":{"start":{"line":219,"column":4},"end":{"line":221,"column":5}},"type":"if","locations":[{"start":{"line":219,"column":4},"end":{"line":221,"column":5}},{"start":{},"end":{}}],"line":219}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0],"6":[0],"7":[0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/utils/DiamondUtils.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/utils/DiamondUtils.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Utility functions for diamond development and monitoring\n */\n\n/**\n * Convert function signature to selector\n * \n * @param signature - Function signature (e.g., \"transfer(address,uint256)\")\n * @returns Function selector (4-byte hex string)\n */\nexport function getSelector(signature: string): string {\n  const { keccak256, toUtf8Bytes } = require('ethers');\n  const hash = keccak256(toUtf8Bytes(signature));\n  return hash.slice(0, 10); // First 4 bytes (8 hex characters + 0x)\n}\n\n/**\n * Convert multiple function signatures to selectors\n * \n * @param signatures - Array of function signatures\n * @returns Array of function selectors\n */\nexport function getSelectors(signatures: string[]): string[] {\n  return signatures.map(getSelector);\n}\n\n/**\n * Format Ethereum address for display\n * \n * @param address - Ethereum address\n * @param length - Optional length to truncate to (default: full address)\n * @returns Formatted address\n */\nexport function formatAddress(address: string, length?: number): string {\n  if (!isValidAddress(address)) {\n    return address;\n  }\n\n  if (length && length < address.length) {\n    const prefixLength = Math.floor((length - 3) / 2);\n    const suffixLength = length - prefixLength - 3;\n    return `${address.slice(0, 2 + prefixLength)}...${address.slice(-suffixLength)}`;\n  }\n\n  return address.toLowerCase();\n}\n\n/**\n * Validate Ethereum address format\n * \n * @param address - Address to validate\n * @returns True if valid Ethereum address\n */\nexport function isValidAddress(address: string): boolean {\n  return /^0x[a-fA-F0-9]{40}$/.test(address);\n}\n\n/**\n * Compare two arrays of selectors and return differences\n * \n * @param oldSelectors - Original selector array\n * @param newSelectors - New selector array\n * @returns Comparison result with added, removed, and common selectors\n */\nexport function compareSelectors(\n  oldSelectors: string[], \n  newSelectors: string[]\n): ComparisonResult {\n  const oldSet = new Set(oldSelectors);\n  const newSet = new Set(newSelectors);\n  \n  const added = newSelectors.filter(selector => !oldSet.has(selector));\n  const removed = oldSelectors.filter(selector => !newSet.has(selector));\n  const common = oldSelectors.filter(selector => newSet.has(selector));\n\n  return {\n    added,\n    removed,\n    common,\n    hasChanges: added.length > 0 || removed.length > 0\n  };\n}\n\n/**\n * Comparison result interface\n */\nexport interface ComparisonResult {\n  /** Selectors added in new array */\n  added: string[];\n  /** Selectors removed from old array */\n  removed: string[];\n  /** Selectors present in both arrays */\n  common: string[];\n  /** Whether there are any changes */\n  hasChanges: boolean;\n}\n\n/**\n * Convert bytes to human-readable size string\n * \n * @param bytes - Number of bytes\n * @returns Human-readable size (e.g., \"1.5 KB\", \"2.3 MB\")\n */\nexport function formatBytes(bytes: number): string {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const decimals = 2;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  \n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(decimals))} ${sizes[i]}`;\n}\n\n/**\n * Convert wei to ether with formatting\n * \n * @param wei - Wei amount as string or number\n * @param decimals - Number of decimal places (default: 4)\n * @returns Formatted ether amount\n */\nexport function formatEther(wei: string | number, decimals = 4): string {\n  const { formatEther: ethersFormatEther } = require('ethers');\n  const ether = ethersFormatEther(wei.toString());\n  const num = parseFloat(ether);\n  return num.toFixed(decimals).replace(/\\.?0+$/, '');\n}\n\n/**\n * Sleep utility for delays\n * \n * @param ms - Milliseconds to sleep\n * @returns Promise that resolves after the delay\n */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * Retry utility for async operations\n * \n * @param fn - Function to retry\n * @param maxAttempts - Maximum number of attempts (default: 3)\n * @param delay - Delay between attempts in ms (default: 1000)\n * @returns Promise resolving to function result\n */\nexport async function retry<T>(\n  fn: () => Promise<T>,\n  maxAttempts = 3,\n  delay = 1000\n): Promise<T> {\n  let lastError: Error;\n  \n  for (let attempt = 1; attempt <= maxAttempts; attempt++) {\n    try {\n      return await fn();\n    } catch (error) {\n      lastError = error as Error;\n      \n      if (attempt === maxAttempts) {\n        break;\n      }\n      \n      await sleep(delay);\n    }\n  }\n  \n  throw lastError!;\n}\n\n/**\n * Validate function selector format\n * \n * @param selector - Selector to validate\n * @returns True if valid 4-byte selector\n */\nexport function isValidSelector(selector: string): boolean {\n  return /^0x[a-fA-F0-9]{8}$/.test(selector);\n}\n\n/**\n * Create a simple hash of a string for tracking purposes\n * \n * @param input - String to hash\n * @returns Simple hash string\n */\nexport function simpleHash(input: string): string {\n  let hash = 0;\n  for (let i = 0; i < input.length; i++) {\n    const char = input.charCodeAt(i);\n    hash = ((hash << 5) - hash) + char;\n    hash = hash & hash; // Convert to 32-bit integer\n  }\n  return Math.abs(hash).toString(16);\n}\n\n/**\n * Deep clone an object (simple implementation)\n * \n * @param obj - Object to clone\n * @returns Cloned object\n */\nexport function deepClone<T>(obj: T): T {\n  if (obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n  \n  if (obj instanceof Date) {\n    return new Date(obj.getTime()) as unknown as T;\n  }\n  \n  if (Array.isArray(obj)) {\n    return obj.map(item => deepClone(item)) as unknown as T;\n  }\n  \n  const cloned = {} as T;\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      cloned[key] = deepClone(obj[key]);\n    }\n  }\n  \n  return cloned;\n}\n\n/**\n * Check if a string is a valid URL\n * \n * @param str - String to check\n * @returns True if valid URL\n */\nexport function isValidUrl(str: string): boolean {\n  try {\n    new URL(str);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Truncate string with ellipsis\n * \n * @param str - String to truncate\n * @param maxLength - Maximum length\n * @returns Truncated string\n */\nexport function truncateString(str: string, maxLength: number): string {\n  if (str.length <= maxLength) {\n    return str;\n  }\n  \n  return str.slice(0, maxLength - 3) + '...';\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9db7f808c40b839b565608e53b7468daeec37dbe","contentHash":"e22c6985bee68b128d89024b1f2c61602df904e9589d96d645afa0839d7e3626"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/hardhat.config.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/hardhat.config.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":23}},"2":{"start":{"line":5,"column":15},"end":{"line":25,"column":1}},"3":{"start":{"line":26,"column":0},"end":{"line":26,"column":25}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/hardhat.config.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/hardhat.config.ts"],"names":[],"mappings":";;AAEA,gCAAgC;AAChC,uBAAqB;AAErB,MAAM,MAAM,GAAsB;IAChC,QAAQ,EAAE,QAAQ;IAElB,mCAAmC;IACnC,cAAc,EAAE;QACd,cAAc,EAAE,CAAC,kBAAkB,EAAE,kBAAkB,CAAC;QACxD,UAAU,EAAE,gBAAgB;QAC5B,YAAY,EAAE;YACZ,gBAAgB,EAAE;gBAChB,UAAU,EAAE,KAAK;aAClB;YACD,gBAAgB,EAAE;gBAChB,qBAAqB,EAAE,IAAI;aAC5B;SACF;KACF;IAED,QAAQ,EAAE;QACR,OAAO,EAAE;YACP,OAAO,EAAE,IAAI;SACd;KACF;CACF,CAAC;AAEF,kBAAe,MAAM,CAAC","sourcesContent":["import { HardhatUserConfig } from 'hardhat/config';\n\n// Import our plugin for testing\nimport './src/index';\n\nconst config: HardhatUserConfig = {\n  solidity: '0.8.19',\n\n  // Diamond monitoring configuration\n  diamondMonitor: {\n    defaultModules: ['FunctionSelector', 'DiamondStructure'],\n    outputPath: './test-reports',\n    moduleConfig: {\n      FunctionSelector: {\n        strictMode: false,\n      },\n      DiamondStructure: {\n        requireStandardFacets: true,\n      },\n    },\n  },\n\n  networks: {\n    hardhat: {\n      chainId: 1337,\n    },\n  },\n};\n\nexport default config;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f7c1ba01c62cb3d2379ade9dd5afb8928aa26c08","contentHash":"d63c47c573db62e6a9123e2bc50e6201cb8f5b7cf4b797608644a4543be769a2"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/index.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/index.ts","statementMap":{"0":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":50}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":38}},"3":{"start":{"line":18,"column":16},"end":{"line":18,"column":32}},"4":{"start":{"line":19,"column":17},"end":{"line":19,"column":42}},"5":{"start":{"line":21,"column":0},"end":{"line":21,"column":35}},"6":{"start":{"line":22,"column":0},"end":{"line":22,"column":32}},"7":{"start":{"line":23,"column":0},"end":{"line":23,"column":38}},"8":{"start":{"line":24,"column":0},"end":{"line":24,"column":29}},"9":{"start":{"line":25,"column":34},"end":{"line":25,"column":75}},"10":{"start":{"line":26,"column":18},"end":{"line":26,"column":38}},"11":{"start":{"line":31,"column":4},"end":{"line":38,"column":6}},"12":{"start":{"line":41,"column":4},"end":{"line":53,"column":6}},"13":{"start":{"line":56,"column":0},"end":{"line":74,"column":3}},"14":{"start":{"line":58,"column":26},"end":{"line":69,"column":5}},"15":{"start":{"line":70,"column":4},"end":{"line":73,"column":6}},"16":{"start":{"line":76,"column":0},"end":{"line":149,"column":3}},"17":{"start":{"line":78,"column":4},"end":{"line":148,"column":6}},"18":{"start":{"line":83,"column":48},"end":{"line":83,"column":147}},"19":{"start":{"line":83,"column":83},"end":{"line":83,"column":146}},"20":{"start":{"line":84,"column":27},"end":{"line":84,"column":59}},"21":{"start":{"line":85,"column":31},"end":{"line":89,"column":14}},"22":{"start":{"line":90,"column":12},"end":{"line":90,"column":45}},"23":{"start":{"line":96,"column":27},"end":{"line":96,"column":82}},"24":{"start":{"line":98,"column":12},"end":{"line":98,"column":74}},"25":{"start":{"line":99,"column":12},"end":{"line":99,"column":74}},"26":{"start":{"line":100,"column":12},"end":{"line":100,"column":71}},"27":{"start":{"line":101,"column":12},"end":{"line":101,"column":69}},"28":{"start":{"line":102,"column":12},"end":{"line":102,"column":74}},"29":{"start":{"line":104,"column":12},"end":{"line":134,"column":14}},"30":{"start":{"line":105,"column":44},"end":{"line":105,"column":73}},"31":{"start":{"line":106,"column":48},"end":{"line":106,"column":81}},"32":{"start":{"line":107,"column":44},"end":{"line":107,"column":64}},"33":{"start":{"line":108,"column":35},"end":{"line":108,"column":55}},"34":{"start":{"line":111,"column":37},"end":{"line":111,"column":57}},"35":{"start":{"line":112,"column":20},"end":{"line":114,"column":21}},"36":{"start":{"line":113,"column":24},"end":{"line":113,"column":73}},"37":{"start":{"line":115,"column":35},"end":{"line":130,"column":21}},"38":{"start":{"line":131,"column":39},"end":{"line":131,"column":96}},"39":{"start":{"line":132,"column":20},"end":{"line":132,"column":53}},"40":{"start":{"line":140,"column":27},"end":{"line":140,"column":82}},"41":{"start":{"line":141,"column":12},"end":{"line":141,"column":74}},"42":{"start":{"line":142,"column":12},"end":{"line":142,"column":74}},"43":{"start":{"line":143,"column":12},"end":{"line":143,"column":71}},"44":{"start":{"line":144,"column":12},"end":{"line":144,"column":69}},"45":{"start":{"line":145,"column":12},"end":{"line":145,"column":74}},"46":{"start":{"line":146,"column":12},"end":{"line":146,"column":40}},"47":{"start":{"line":151,"column":0},"end":{"line":151,"column":55}}},"fnMap":{"0":{"name":"convertModuleResult","decl":{"start":{"line":30,"column":9},"end":{"line":30,"column":28}},"loc":{"start":{"line":30,"column":41},"end":{"line":39,"column":1}},"line":30},"1":{"name":"convertReport","decl":{"start":{"line":40,"column":9},"end":{"line":40,"column":22}},"loc":{"start":{"line":40,"column":35},"end":{"line":54,"column":1}},"line":40},"2":{"name":"(anonymous_2)","decl":{"start":{"line":56,"column":27},"end":{"line":56,"column":28}},"loc":{"start":{"line":56,"column":51},"end":{"line":74,"column":1}},"line":56},"3":{"name":"(anonymous_3)","decl":{"start":{"line":76,"column":32},"end":{"line":76,"column":33}},"loc":{"start":{"line":76,"column":39},"end":{"line":149,"column":1}},"line":76},"4":{"name":"(anonymous_4)","decl":{"start":{"line":82,"column":24},"end":{"line":82,"column":25}},"loc":{"start":{"line":82,"column":70},"end":{"line":91,"column":9}},"line":82},"5":{"name":"(anonymous_5)","decl":{"start":{"line":83,"column":77},"end":{"line":83,"column":78}},"loc":{"start":{"line":83,"column":83},"end":{"line":83,"column":146}},"line":83},"6":{"name":"(anonymous_6)","decl":{"start":{"line":95,"column":32},"end":{"line":95,"column":33}},"loc":{"start":{"line":95,"column":38},"end":{"line":135,"column":9}},"line":95},"7":{"name":"(anonymous_7)","decl":{"start":{"line":105,"column":32},"end":{"line":105,"column":33}},"loc":{"start":{"line":105,"column":44},"end":{"line":105,"column":73}},"line":105},"8":{"name":"(anonymous_8)","decl":{"start":{"line":106,"column":34},"end":{"line":106,"column":35}},"loc":{"start":{"line":106,"column":48},"end":{"line":106,"column":81}},"line":106},"9":{"name":"(anonymous_9)","decl":{"start":{"line":107,"column":38},"end":{"line":107,"column":39}},"loc":{"start":{"line":107,"column":44},"end":{"line":107,"column":64}},"line":107},"10":{"name":"(anonymous_10)","decl":{"start":{"line":108,"column":29},"end":{"line":108,"column":30}},"loc":{"start":{"line":108,"column":35},"end":{"line":108,"column":55}},"line":108},"11":{"name":"(anonymous_11)","decl":{"start":{"line":109,"column":31},"end":{"line":109,"column":32}},"loc":{"start":{"line":109,"column":63},"end":{"line":133,"column":17}},"line":109},"12":{"name":"(anonymous_12)","decl":{"start":{"line":139,"column":21},"end":{"line":139,"column":22}},"loc":{"start":{"line":139,"column":27},"end":{"line":147,"column":9}},"line":139}},"branchMap":{"0":{"loc":{"start":{"line":82,"column":53},"end":{"line":82,"column":65}},"type":"default-arg","locations":[{"start":{"line":82,"column":63},"end":{"line":82,"column":65}}],"line":82},"1":{"loc":{"start":{"line":112,"column":20},"end":{"line":114,"column":21}},"type":"if","locations":[{"start":{"line":112,"column":20},"end":{"line":114,"column":21}},{"start":{},"end":{}}],"line":112},"2":{"loc":{"start":{"line":124,"column":33},"end":{"line":128,"column":25}},"type":"binary-expr","locations":[{"start":{"line":124,"column":33},"end":{"line":124,"column":52}},{"start":{"line":124,"column":56},"end":{"line":128,"column":25}}],"line":124},"3":{"loc":{"start":{"line":126,"column":37},"end":{"line":126,"column":68}},"type":"binary-expr","locations":[{"start":{"line":126,"column":37},"end":{"line":126,"column":63}},{"start":{"line":126,"column":67},"end":{"line":126,"column":68}}],"line":126}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":1,"14":1,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":2,"41":2,"42":2,"43":2,"44":2,"45":2,"46":2,"47":1},"f":{"0":0,"1":0,"2":1,"3":1,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":2},"b":{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0]},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/index.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Hardhat Diamond Monitor Plugin\n * \n * Provides comprehensive ERC-2535 Diamond contract monitoring capabilities\n * through Hardhat's diamondMonitor API and standalone classes for direct Diamond integration.\n * \n * Usage as Hardhat plugin:\n *   hre.diamondMonitor.monitorDiamond(config)\n * \n * Usage as standalone:\n *   import { DiamondMonitor, FacetManager } from 'diamonds-monitor'\n *   const monitor = new DiamondMonitor(diamond, provider)\n */\n\nimport { extendConfig, extendEnvironment } from 'hardhat/config';\nimport { HardhatConfig, HardhatUserConfig } from 'hardhat/types';\n\n// Hardhat plugin functionality\nimport './tasks/monitor-diamond';\nimport './tasks/list-modules';\nimport './tasks/monitor-continuous';\nimport './type-extensions';\n\nimport { DiamondMonitoringSystem } from './core/DiamondMonitoringSystem';\nimport {\n  FunctionSelectorModule,\n  DiamondStructureModule,\n  AccessControlModule,\n  TokenSupplyModule,\n  ERC165ComplianceModule,\n} from './modules';\nimport type {\n  MonitoringReport as CoreMonitoringReport,\n  ModuleResult as CoreModuleResult,\n  MonitoringStatus,\n  SeverityLevel,\n} from './core/types';\n\n/**\n * Type conversion functions to bridge core types and Hardhat plugin API types\n */\nexport function convertModuleResult(coreResult: CoreModuleResult): any {\n  return {\n    moduleId: coreResult.moduleId,\n    moduleName: coreResult.moduleName,\n    status: coreResult.status,\n    issues: coreResult.result.issues,\n    executionTime: coreResult.result.executionTime,\n    metadata: coreResult.result.metadata,\n  };\n}\n\nexport function convertReport(coreReport: CoreMonitoringReport): any {\n  return {\n    summary: {\n      totalChecks: coreReport.summary.totalChecks,\n      passed: coreReport.summary.passed,\n      failed: coreReport.summary.failed,\n      warnings: coreReport.summary.warnings,\n    },\n    modules: coreReport.modules.map(convertModuleResult),\n    diamond: coreReport.diamond,\n    network: coreReport.network,\n    timestamp: coreReport.timestamp,\n    duration: coreReport.duration,\n  };\n}\n\n// Extend Hardhat configuration\nextendConfig((config: HardhatConfig, userConfig: Readonly<HardhatUserConfig>) => {\n  // Set default configuration for diamond monitoring\n  const defaultConfig = {\n    defaultModules: [\n      'function-selectors',\n      'diamond-structure',\n      'access-control',\n      'token-supply',\n      'erc165-compliance',\n    ],\n    outputPath: './monitoring-reports',\n    enabledNetworks: [],\n    moduleConfig: {},\n  };\n\n  config.diamondMonitor = {\n    ...defaultConfig,\n    ...userConfig.diamondMonitor,\n  };\n});\n\n// Extend Hardhat Runtime Environment\nextendEnvironment(hre => {\n  // Add diamond monitoring API to HRE\n  hre.diamondMonitor = {\n    /**\n     * Main monitoring entry point\n     */\n    monitorDiamond: async (diamondName: string, network: string, options: any = {}) => {\n      const { DiamondMonitoringRunner } = await import('./core/DiamondMonitoringRunner');\n      const runner = new DiamondMonitoringRunner(hre);\n      const coreReport = await runner.run({\n        diamondName,\n        network,\n        ...options,\n      });\n      return convertReport(coreReport);\n    },\n\n    /**\n     * Create a new monitoring system instance with adapter\n     */\n    createMonitoringSystem: () => {\n      const system = new DiamondMonitoringSystem();\n\n      // Register all available modules\n      system.registerModule(new FunctionSelectorModule());\n      system.registerModule(new DiamondStructureModule());\n      system.registerModule(new AccessControlModule());\n      system.registerModule(new TokenSupplyModule());\n      system.registerModule(new ERC165ComplianceModule());\n\n      // Create adapter that matches the expected interface\n      return {\n        registerModule: (module: any) => system.registerModule(module),\n        unregisterModule: (moduleId: string) => system.unregisterModule(moduleId),\n        getRegisteredModules: () => system.listModules(),\n        listModules: () => system.listModules(),\n        runMonitoring: async (diamondInfo: any, options?: any) => {\n          // Create a simplified adapter - in a real implementation you'd need proper provider and config setup\n          const provider = (hre as any).ethers?.provider;\n          if (!provider) {\n            throw new Error('Ethers provider not available');\n          }\n\n          const config = {\n            reporting: { verbose: true, format: 'console' as any, includeMetadata: true },\n            execution: {\n              parallelExecution: false,\n              maxConcurrency: 1,\n              timeoutMs: 30000,\n              failFast: false,\n            },\n            modules: {},\n            network: diamondInfo.network || {\n              name: hre.network.name,\n              chainId: hre.network.config.chainId || 0,\n              rpcUrl: 'unknown',\n            },\n            diamond: diamondInfo,\n          };\n\n          const coreReport = await system.runMonitoring(diamondInfo, provider, config);\n          return convertReport(coreReport);\n        },\n      };\n    },\n\n    /**\n     * List all available monitoring modules\n     */\n    listModules: () => {\n      const system = new DiamondMonitoringSystem();\n      system.registerModule(new FunctionSelectorModule());\n      system.registerModule(new DiamondStructureModule());\n      system.registerModule(new AccessControlModule());\n      system.registerModule(new TokenSupplyModule());\n      system.registerModule(new ERC165ComplianceModule());\n\n      return system.listModules();\n    },\n  };\n});\n\n// Export standalone API for direct Diamond integration\nexport * from './standalone';\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fb8f9adef392243733b683e9e86a927a5da2ba15","contentHash":"8db3af80131170bf51467e2876ca887c20272998d3bd717aeefa5aaa50c4f685"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/tasks/monitor-diamond.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/tasks/monitor-diamond.ts","statementMap":{"0":{"start":{"line":7,"column":0},"end":{"line":7,"column":62}},"1":{"start":{"line":8,"column":16},"end":{"line":8,"column":32}},"2":{"start":{"line":9,"column":17},"end":{"line":9,"column":42}},"3":{"start":{"line":10,"column":11},"end":{"line":10,"column":46}},"4":{"start":{"line":11,"column":13},"end":{"line":11,"column":50}},"5":{"start":{"line":12,"column":16},"end":{"line":12,"column":57}},"6":{"start":{"line":13,"column":16},"end":{"line":13,"column":40}},"7":{"start":{"line":14,"column":34},"end":{"line":14,"column":76}},"8":{"start":{"line":15,"column":26},"end":{"line":15,"column":63}},"9":{"start":{"line":16,"column":0},"end":{"line":72,"column":3}},"10":{"start":{"line":31,"column":22},"end":{"line":31,"column":32}},"11":{"start":{"line":32,"column":4},"end":{"line":71,"column":5}},"12":{"start":{"line":34,"column":8},"end":{"line":34,"column":81}},"13":{"start":{"line":35,"column":8},"end":{"line":35,"column":78}},"14":{"start":{"line":37,"column":8},"end":{"line":37,"column":51}},"15":{"start":{"line":39,"column":23},"end":{"line":39,"column":71}},"16":{"start":{"line":41,"column":24},"end":{"line":41,"column":60}},"17":{"start":{"line":43,"column":33},"end":{"line":43,"column":88}},"18":{"start":{"line":45,"column":8},"end":{"line":45,"column":63}},"19":{"start":{"line":47,"column":8},"end":{"line":47,"column":64}},"20":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"21":{"start":{"line":49,"column":12},"end":{"line":49,"column":84}},"22":{"start":{"line":51,"column":8},"end":{"line":56,"column":9}},"23":{"start":{"line":52,"column":12},"end":{"line":52,"column":99}},"24":{"start":{"line":55,"column":12},"end":{"line":55,"column":95}},"25":{"start":{"line":59,"column":24},"end":{"line":59,"column":34}},"26":{"start":{"line":60,"column":25},"end":{"line":60,"column":44}},"27":{"start":{"line":61,"column":8},"end":{"line":61,"column":102}},"28":{"start":{"line":62,"column":8},"end":{"line":62,"column":68}},"29":{"start":{"line":63,"column":8},"end":{"line":66,"column":9}},"30":{"start":{"line":64,"column":12},"end":{"line":64,"column":64}},"31":{"start":{"line":65,"column":12},"end":{"line":65,"column":61}},"32":{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},"33":{"start":{"line":68,"column":12},"end":{"line":68,"column":28}},"34":{"start":{"line":70,"column":8},"end":{"line":70,"column":20}},"35":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"36":{"start":{"line":81,"column":8},"end":{"line":81,"column":88}},"37":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"38":{"start":{"line":85,"column":8},"end":{"line":85,"column":52}},"39":{"start":{"line":88,"column":25},"end":{"line":88,"column":71}},"40":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"41":{"start":{"line":90,"column":8},"end":{"line":90,"column":119}},"42":{"start":{"line":93,"column":4},"end":{"line":98,"column":5}},"43":{"start":{"line":94,"column":20},"end":{"line":94,"column":67}},"44":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"45":{"start":{"line":96,"column":12},"end":{"line":96,"column":71}},"46":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"47":{"start":{"line":101,"column":8},"end":{"line":101,"column":80}},"48":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"49":{"start":{"line":105,"column":8},"end":{"line":105,"column":81}},"50":{"start":{"line":108,"column":4},"end":{"line":113,"column":5}},"51":{"start":{"line":109,"column":25},"end":{"line":109,"column":52}},"52":{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},"53":{"start":{"line":111,"column":12},"end":{"line":111,"column":77}},"54":{"start":{"line":115,"column":4},"end":{"line":117,"column":5}},"55":{"start":{"line":116,"column":8},"end":{"line":116,"column":96}},"56":{"start":{"line":118,"column":4},"end":{"line":120,"column":5}},"57":{"start":{"line":119,"column":8},"end":{"line":119,"column":85}},"58":{"start":{"line":126,"column":4},"end":{"line":128,"column":5}},"59":{"start":{"line":127,"column":8},"end":{"line":127,"column":85}},"60":{"start":{"line":129,"column":17},"end":{"line":129,"column":19}},"61":{"start":{"line":131,"column":4},"end":{"line":142,"column":5}},"62":{"start":{"line":132,"column":8},"end":{"line":141,"column":9}},"63":{"start":{"line":133,"column":34},"end":{"line":133,"column":78}},"64":{"start":{"line":134,"column":12},"end":{"line":134,"column":47}},"65":{"start":{"line":135,"column":12},"end":{"line":137,"column":13}},"66":{"start":{"line":136,"column":16},"end":{"line":136,"column":105}},"67":{"start":{"line":140,"column":12},"end":{"line":140,"column":106}},"68":{"start":{"line":144,"column":24},"end":{"line":149,"column":12}},"69":{"start":{"line":147,"column":22},"end":{"line":147,"column":30}},"70":{"start":{"line":148,"column":25},"end":{"line":148,"column":26}},"71":{"start":{"line":151,"column":27},"end":{"line":157,"column":5}},"72":{"start":{"line":158,"column":29},"end":{"line":158,"column":76}},"73":{"start":{"line":160,"column":29},"end":{"line":180,"column":5}},"74":{"start":{"line":182,"column":4},"end":{"line":199,"column":5}},"75":{"start":{"line":184,"column":8},"end":{"line":189,"column":11}},"76":{"start":{"line":185,"column":12},"end":{"line":188,"column":14}},"77":{"start":{"line":191,"column":9},"end":{"line":199,"column":5}},"78":{"start":{"line":193,"column":8},"end":{"line":198,"column":11}},"79":{"start":{"line":194,"column":12},"end":{"line":197,"column":14}},"80":{"start":{"line":200,"column":4},"end":{"line":202,"column":5}},"81":{"start":{"line":201,"column":8},"end":{"line":201,"column":80}},"82":{"start":{"line":203,"column":4},"end":{"line":203,"column":28}},"83":{"start":{"line":209,"column":4},"end":{"line":211,"column":5}},"84":{"start":{"line":210,"column":8},"end":{"line":210,"column":79}},"85":{"start":{"line":212,"column":24},"end":{"line":212,"column":66}},"86":{"start":{"line":213,"column":27},"end":{"line":213,"column":114}},"87":{"start":{"line":215,"column":26},"end":{"line":224,"column":5}},"88":{"start":{"line":225,"column":28},"end":{"line":225,"column":32}},"89":{"start":{"line":226,"column":29},"end":{"line":226,"column":31}},"90":{"start":{"line":227,"column":4},"end":{"line":240,"column":5}},"91":{"start":{"line":228,"column":8},"end":{"line":239,"column":9}},"92":{"start":{"line":229,"column":12},"end":{"line":238,"column":13}},"93":{"start":{"line":230,"column":16},"end":{"line":230,"column":82}},"94":{"start":{"line":231,"column":16},"end":{"line":231,"column":46}},"95":{"start":{"line":232,"column":16},"end":{"line":232,"column":22}},"96":{"start":{"line":235,"column":16},"end":{"line":237,"column":17}},"97":{"start":{"line":236,"column":20},"end":{"line":236,"column":109}},"98":{"start":{"line":241,"column":4},"end":{"line":243,"column":5}},"99":{"start":{"line":242,"column":8},"end":{"line":242,"column":160}},"100":{"start":{"line":245,"column":26},"end":{"line":245,"column":58}},"101":{"start":{"line":246,"column":17},"end":{"line":246,"column":19}},"102":{"start":{"line":247,"column":18},"end":{"line":247,"column":19}},"103":{"start":{"line":248,"column":4},"end":{"line":250,"column":5}},"104":{"start":{"line":249,"column":8},"end":{"line":249,"column":41}},"105":{"start":{"line":251,"column":4},"end":{"line":265,"column":5}},"106":{"start":{"line":253,"column":23},"end":{"line":253,"column":33}},"107":{"start":{"line":254,"column":8},"end":{"line":256,"column":9}},"108":{"start":{"line":255,"column":12},"end":{"line":255,"column":118}},"109":{"start":{"line":257,"column":25},"end":{"line":257,"column":40}},"110":{"start":{"line":258,"column":24},"end":{"line":258,"column":51}},"111":{"start":{"line":259,"column":8},"end":{"line":259,"column":42}},"112":{"start":{"line":262,"column":8},"end":{"line":264,"column":9}},"113":{"start":{"line":263,"column":12},"end":{"line":263,"column":96}},"114":{"start":{"line":266,"column":20},"end":{"line":278,"column":5}},"115":{"start":{"line":279,"column":4},"end":{"line":281,"column":5}},"116":{"start":{"line":280,"column":8},"end":{"line":280,"column":95}},"117":{"start":{"line":282,"column":4},"end":{"line":285,"column":5}},"118":{"start":{"line":283,"column":8},"end":{"line":283,"column":102}},"119":{"start":{"line":284,"column":8},"end":{"line":284,"column":120}},"120":{"start":{"line":286,"column":4},"end":{"line":286,"column":19}},"121":{"start":{"line":292,"column":4},"end":{"line":292,"column":78}},"122":{"start":{"line":294,"column":128},"end":{"line":294,"column":207}},"123":{"start":{"line":294,"column":163},"end":{"line":294,"column":206}},"124":{"start":{"line":295,"column":20},"end":{"line":301,"column":5}},"125":{"start":{"line":303,"column":4},"end":{"line":305,"column":7}},"126":{"start":{"line":304,"column":8},"end":{"line":304,"column":38}},"127":{"start":{"line":306,"column":4},"end":{"line":306,"column":74}},"128":{"start":{"line":312,"column":4},"end":{"line":313,"column":15}},"129":{"start":{"line":313,"column":8},"end":{"line":313,"column":15}},"130":{"start":{"line":314,"column":4},"end":{"line":314,"column":76}},"131":{"start":{"line":315,"column":22},"end":{"line":315,"column":23}},"132":{"start":{"line":316,"column":27},"end":{"line":316,"column":28}},"133":{"start":{"line":317,"column":4},"end":{"line":344,"column":7}},"134":{"start":{"line":318,"column":8},"end":{"line":343,"column":9}},"135":{"start":{"line":320,"column":16},"end":{"line":320,"column":87}},"136":{"start":{"line":321,"column":16},"end":{"line":321,"column":22}},"137":{"start":{"line":323,"column":16},"end":{"line":323,"column":30}},"138":{"start":{"line":324,"column":16},"end":{"line":324,"column":129}},"139":{"start":{"line":325,"column":16},"end":{"line":325,"column":22}},"140":{"start":{"line":327,"column":16},"end":{"line":327,"column":35}},"141":{"start":{"line":328,"column":16},"end":{"line":328,"column":122}},"142":{"start":{"line":329,"column":16},"end":{"line":329,"column":22}},"143":{"start":{"line":331,"column":16},"end":{"line":331,"column":35}},"144":{"start":{"line":332,"column":16},"end":{"line":332,"column":117}},"145":{"start":{"line":333,"column":16},"end":{"line":333,"column":82}},"146":{"start":{"line":334,"column":16},"end":{"line":334,"column":22}},"147":{"start":{"line":336,"column":30},"end":{"line":336,"column":46}},"148":{"start":{"line":337,"column":38},"end":{"line":337,"column":70}},"149":{"start":{"line":338,"column":16},"end":{"line":338,"column":100}},"150":{"start":{"line":339,"column":16},"end":{"line":339,"column":22}},"151":{"start":{"line":341,"column":16},"end":{"line":341,"column":86}},"152":{"start":{"line":342,"column":16},"end":{"line":342,"column":22}},"153":{"start":{"line":350,"column":4},"end":{"line":361,"column":5}},"154":{"start":{"line":352,"column":12},"end":{"line":352,"column":44}},"155":{"start":{"line":354,"column":12},"end":{"line":354,"column":39}},"156":{"start":{"line":356,"column":12},"end":{"line":356,"column":42}},"157":{"start":{"line":358,"column":12},"end":{"line":358,"column":40}},"158":{"start":{"line":360,"column":12},"end":{"line":360,"column":40}},"159":{"start":{"line":367,"column":4},"end":{"line":367,"column":83}},"160":{"start":{"line":368,"column":4},"end":{"line":368,"column":64}},"161":{"start":{"line":369,"column":4},"end":{"line":369,"column":90}},"162":{"start":{"line":370,"column":4},"end":{"line":370,"column":106}},"163":{"start":{"line":371,"column":4},"end":{"line":371,"column":114}},"164":{"start":{"line":372,"column":4},"end":{"line":372,"column":153}},"165":{"start":{"line":373,"column":20},"end":{"line":373,"column":40}},"166":{"start":{"line":374,"column":4},"end":{"line":374,"column":85}},"167":{"start":{"line":375,"column":4},"end":{"line":377,"column":7}},"168":{"start":{"line":376,"column":8},"end":{"line":376,"column":92}},"169":{"start":{"line":378,"column":4},"end":{"line":378,"column":98}},"170":{"start":{"line":379,"column":4},"end":{"line":384,"column":6}},"171":{"start":{"line":390,"column":4},"end":{"line":390,"column":86}},"172":{"start":{"line":391,"column":21},"end":{"line":391,"column":40}},"173":{"start":{"line":392,"column":22},"end":{"line":392,"column":102}},"174":{"start":{"line":394,"column":19},"end":{"line":394,"column":83}},"175":{"start":{"line":396,"column":4},"end":{"line":398,"column":5}},"176":{"start":{"line":397,"column":8},"end":{"line":397,"column":54}},"177":{"start":{"line":400,"column":4},"end":{"line":400,"column":47}},"178":{"start":{"line":402,"column":4},"end":{"line":405,"column":5}},"179":{"start":{"line":403,"column":8},"end":{"line":403,"column":115}},"180":{"start":{"line":404,"column":8},"end":{"line":404,"column":24}},"181":{"start":{"line":406,"column":4},"end":{"line":406,"column":18}},"182":{"start":{"line":412,"column":21},"end":{"line":412,"column":64}},"183":{"start":{"line":413,"column":4},"end":{"line":413,"column":82}},"184":{"start":{"line":414,"column":4},"end":{"line":414,"column":83}},"185":{"start":{"line":415,"column":4},"end":{"line":415,"column":69}},"186":{"start":{"line":416,"column":19},"end":{"line":416,"column":20}},"187":{"start":{"line":417,"column":26},"end":{"line":427,"column":5}},"188":{"start":{"line":418,"column":8},"end":{"line":418,"column":19}},"189":{"start":{"line":419,"column":8},"end":{"line":419,"column":105}},"190":{"start":{"line":420,"column":8},"end":{"line":420,"column":58}},"191":{"start":{"line":421,"column":8},"end":{"line":426,"column":9}},"192":{"start":{"line":422,"column":12},"end":{"line":422,"column":78}},"193":{"start":{"line":425,"column":12},"end":{"line":425,"column":105}},"194":{"start":{"line":429,"column":4},"end":{"line":432,"column":7}},"195":{"start":{"line":430,"column":8},"end":{"line":430,"column":88}},"196":{"start":{"line":431,"column":8},"end":{"line":431,"column":24}},"197":{"start":{"line":433,"column":4},"end":{"line":436,"column":7}},"198":{"start":{"line":434,"column":8},"end":{"line":434,"column":88}},"199":{"start":{"line":435,"column":8},"end":{"line":435,"column":24}},"200":{"start":{"line":438,"column":4},"end":{"line":438,"column":26}},"201":{"start":{"line":440,"column":4},"end":{"line":440,"column":41}},"202":{"start":{"line":442,"column":4},"end":{"line":442,"column":34}},"203":{"start":{"line":448,"column":4},"end":{"line":450,"column":5}},"204":{"start":{"line":449,"column":8},"end":{"line":449,"column":15}},"205":{"start":{"line":451,"column":4},"end":{"line":467,"column":5}},"206":{"start":{"line":452,"column":23},"end":{"line":452,"column":44}},"207":{"start":{"line":453,"column":27},"end":{"line":453,"column":46}},"208":{"start":{"line":454,"column":24},"end":{"line":459,"column":9}},"209":{"start":{"line":460,"column":8},"end":{"line":460,"column":100}},"210":{"start":{"line":461,"column":8},"end":{"line":463,"column":9}},"211":{"start":{"line":462,"column":12},"end":{"line":462,"column":81}},"212":{"start":{"line":466,"column":8},"end":{"line":466,"column":92}},"213":{"start":{"line":473,"column":4},"end":{"line":473,"column":66}},"214":{"start":{"line":474,"column":4},"end":{"line":474,"column":54}},"215":{"start":{"line":475,"column":24},"end":{"line":475,"column":30}},"216":{"start":{"line":477,"column":21},"end":{"line":477,"column":24}},"217":{"start":{"line":478,"column":22},"end":{"line":478,"column":43}},"218":{"start":{"line":479,"column":4},"end":{"line":486,"column":5}},"219":{"start":{"line":480,"column":8},"end":{"line":480,"column":25}},"220":{"start":{"line":481,"column":8},"end":{"line":481,"column":42}},"221":{"start":{"line":483,"column":9},"end":{"line":486,"column":5}},"222":{"start":{"line":484,"column":8},"end":{"line":484,"column":26}},"223":{"start":{"line":485,"column":8},"end":{"line":485,"column":45}},"224":{"start":{"line":487,"column":4},"end":{"line":487,"column":80}},"225":{"start":{"line":488,"column":4},"end":{"line":488,"column":81}},"226":{"start":{"line":489,"column":4},"end":{"line":489,"column":70}},"227":{"start":{"line":490,"column":4},"end":{"line":492,"column":5}},"228":{"start":{"line":491,"column":8},"end":{"line":491,"column":72}},"229":{"start":{"line":493,"column":4},"end":{"line":495,"column":5}},"230":{"start":{"line":494,"column":8},"end":{"line":494,"column":81}},"231":{"start":{"line":496,"column":4},"end":{"line":498,"column":5}},"232":{"start":{"line":497,"column":8},"end":{"line":497,"column":77}},"233":{"start":{"line":499,"column":4},"end":{"line":499,"column":76}},"234":{"start":{"line":501,"column":4},"end":{"line":514,"column":5}},"235":{"start":{"line":502,"column":8},"end":{"line":502,"column":66}},"236":{"start":{"line":503,"column":8},"end":{"line":513,"column":11}},"237":{"start":{"line":504,"column":31},"end":{"line":504,"column":65}},"238":{"start":{"line":505,"column":32},"end":{"line":505,"column":67}},"239":{"start":{"line":506,"column":12},"end":{"line":506,"column":101}},"240":{"start":{"line":507,"column":12},"end":{"line":512,"column":13}},"241":{"start":{"line":508,"column":16},"end":{"line":511,"column":19}},"242":{"start":{"line":509,"column":42},"end":{"line":509,"column":74}},"243":{"start":{"line":510,"column":20},"end":{"line":510,"column":93}},"244":{"start":{"line":520,"column":4},"end":{"line":531,"column":5}},"245":{"start":{"line":522,"column":12},"end":{"line":522,"column":23}},"246":{"start":{"line":524,"column":12},"end":{"line":524,"column":23}},"247":{"start":{"line":526,"column":12},"end":{"line":526,"column":24}},"248":{"start":{"line":528,"column":12},"end":{"line":528,"column":24}},"249":{"start":{"line":530,"column":12},"end":{"line":530,"column":23}},"250":{"start":{"line":537,"column":4},"end":{"line":548,"column":5}},"251":{"start":{"line":539,"column":12},"end":{"line":539,"column":41}},"252":{"start":{"line":541,"column":12},"end":{"line":541,"column":39}},"253":{"start":{"line":543,"column":12},"end":{"line":543,"column":42}},"254":{"start":{"line":545,"column":12},"end":{"line":545,"column":40}},"255":{"start":{"line":547,"column":12},"end":{"line":547,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":30,"column":15},"end":{"line":30,"column":16}},"loc":{"start":{"line":30,"column":40},"end":{"line":72,"column":1}},"line":30},"1":{"name":"validateTaskArguments","decl":{"start":{"line":79,"column":15},"end":{"line":79,"column":36}},"loc":{"start":{"line":79,"column":52},"end":{"line":121,"column":1}},"line":79},"2":{"name":"loadMonitoringConfiguration","decl":{"start":{"line":125,"column":15},"end":{"line":125,"column":42}},"loc":{"start":{"line":125,"column":58},"end":{"line":204,"column":1}},"line":125},"3":{"name":"(anonymous_3)","decl":{"start":{"line":147,"column":17},"end":{"line":147,"column":18}},"loc":{"start":{"line":147,"column":22},"end":{"line":147,"column":30}},"line":147},"4":{"name":"(anonymous_4)","decl":{"start":{"line":148,"column":20},"end":{"line":148,"column":21}},"loc":{"start":{"line":148,"column":25},"end":{"line":148,"column":26}},"line":148},"5":{"name":"(anonymous_5)","decl":{"start":{"line":184,"column":31},"end":{"line":184,"column":32}},"loc":{"start":{"line":184,"column":43},"end":{"line":189,"column":9}},"line":184},"6":{"name":"(anonymous_6)","decl":{"start":{"line":193,"column":28},"end":{"line":193,"column":29}},"loc":{"start":{"line":193,"column":40},"end":{"line":198,"column":9}},"line":193},"7":{"name":"loadDiamondInfo","decl":{"start":{"line":208,"column":15},"end":{"line":208,"column":30}},"loc":{"start":{"line":208,"column":46},"end":{"line":287,"column":1}},"line":208},"8":{"name":"registerMonitoringModules","decl":{"start":{"line":291,"column":15},"end":{"line":291,"column":40}},"loc":{"start":{"line":291,"column":54},"end":{"line":307,"column":1}},"line":291},"9":{"name":"(anonymous_9)","decl":{"start":{"line":294,"column":157},"end":{"line":294,"column":158}},"loc":{"start":{"line":294,"column":163},"end":{"line":294,"column":206}},"line":294},"10":{"name":"(anonymous_10)","decl":{"start":{"line":303,"column":20},"end":{"line":303,"column":21}},"loc":{"start":{"line":303,"column":30},"end":{"line":305,"column":5}},"line":303},"11":{"name":"setupProgressTracking","decl":{"start":{"line":311,"column":9},"end":{"line":311,"column":30}},"loc":{"start":{"line":311,"column":48},"end":{"line":345,"column":1}},"line":311},"12":{"name":"(anonymous_12)","decl":{"start":{"line":317,"column":28},"end":{"line":317,"column":29}},"loc":{"start":{"line":317,"column":37},"end":{"line":344,"column":5}},"line":317},"13":{"name":"getSeverityColor","decl":{"start":{"line":349,"column":9},"end":{"line":349,"column":25}},"loc":{"start":{"line":349,"column":36},"end":{"line":362,"column":1}},"line":349},"14":{"name":"performDryRun","decl":{"start":{"line":366,"column":15},"end":{"line":366,"column":28}},"loc":{"start":{"line":366,"column":64},"end":{"line":385,"column":1}},"line":366},"15":{"name":"(anonymous_15)","decl":{"start":{"line":375,"column":20},"end":{"line":375,"column":21}},"loc":{"start":{"line":375,"column":39},"end":{"line":377,"column":5}},"line":375},"16":{"name":"runSingleMonitoring","decl":{"start":{"line":389,"column":15},"end":{"line":389,"column":34}},"loc":{"start":{"line":389,"column":75},"end":{"line":407,"column":1}},"line":389},"17":{"name":"runContinuousMonitoring","decl":{"start":{"line":411,"column":15},"end":{"line":411,"column":38}},"loc":{"start":{"line":411,"column":79},"end":{"line":443,"column":1}},"line":411},"18":{"name":"(anonymous_18)","decl":{"start":{"line":417,"column":26},"end":{"line":417,"column":27}},"loc":{"start":{"line":417,"column":38},"end":{"line":427,"column":5}},"line":417},"19":{"name":"(anonymous_19)","decl":{"start":{"line":429,"column":25},"end":{"line":429,"column":26}},"loc":{"start":{"line":429,"column":31},"end":{"line":432,"column":5}},"line":429},"20":{"name":"(anonymous_20)","decl":{"start":{"line":433,"column":26},"end":{"line":433,"column":27}},"loc":{"start":{"line":433,"column":32},"end":{"line":436,"column":5}},"line":433},"21":{"name":"(anonymous_21)","decl":{"start":{"line":442,"column":23},"end":{"line":442,"column":24}},"loc":{"start":{"line":442,"column":29},"end":{"line":442,"column":32}},"line":442},"22":{"name":"generateAndSaveReport","decl":{"start":{"line":447,"column":15},"end":{"line":447,"column":36}},"loc":{"start":{"line":447,"column":55},"end":{"line":468,"column":1}},"line":447},"23":{"name":"displayMonitoringSummary","decl":{"start":{"line":472,"column":9},"end":{"line":472,"column":33}},"loc":{"start":{"line":472,"column":52},"end":{"line":515,"column":1}},"line":472},"24":{"name":"(anonymous_24)","decl":{"start":{"line":503,"column":31},"end":{"line":503,"column":32}},"loc":{"start":{"line":503,"column":41},"end":{"line":513,"column":9}},"line":503},"25":{"name":"(anonymous_25)","decl":{"start":{"line":508,"column":45},"end":{"line":508,"column":46}},"loc":{"start":{"line":508,"column":54},"end":{"line":511,"column":17}},"line":508},"26":{"name":"getModuleStatusIcon","decl":{"start":{"line":519,"column":9},"end":{"line":519,"column":28}},"loc":{"start":{"line":519,"column":37},"end":{"line":532,"column":1}},"line":519},"27":{"name":"getModuleStatusColor","decl":{"start":{"line":536,"column":9},"end":{"line":536,"column":29}},"loc":{"start":{"line":536,"column":38},"end":{"line":549,"column":1}},"line":536}},"branchMap":{"0":{"loc":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},{"start":{},"end":{}}],"line":48},"1":{"loc":{"start":{"line":51,"column":8},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":56,"column":9}},{"start":{"line":54,"column":13},"end":{"line":56,"column":9}}],"line":51},"2":{"loc":{"start":{"line":63,"column":8},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":66,"column":9}},{"start":{},"end":{}}],"line":63},"3":{"loc":{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},{"start":{},"end":{}}],"line":67},"4":{"loc":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},{"start":{},"end":{}}],"line":80},"5":{"loc":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},{"start":{},"end":{}}],"line":84},"6":{"loc":{"start":{"line":84,"column":8},"end":{"line":84,"column":67}},"type":"binary-expr","locations":[{"start":{"line":84,"column":8},"end":{"line":84,"column":29}},{"start":{"line":84,"column":33},"end":{"line":84,"column":67}}],"line":84},"7":{"loc":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},{"start":{},"end":{}}],"line":89},"8":{"loc":{"start":{"line":89,"column":8},"end":{"line":89,"column":78}},"type":"binary-expr","locations":[{"start":{"line":89,"column":8},"end":{"line":89,"column":29}},{"start":{"line":89,"column":33},"end":{"line":89,"column":78}}],"line":89},"9":{"loc":{"start":{"line":93,"column":4},"end":{"line":98,"column":5}},"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":98,"column":5}},{"start":{},"end":{}}],"line":93},"10":{"loc":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},{"start":{},"end":{}}],"line":95},"11":{"loc":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},{"start":{},"end":{}}],"line":100},"12":{"loc":{"start":{"line":100,"column":8},"end":{"line":100,"column":66}},"type":"binary-expr","locations":[{"start":{"line":100,"column":8},"end":{"line":100,"column":27}},{"start":{"line":100,"column":31},"end":{"line":100,"column":66}}],"line":100},"13":{"loc":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},{"start":{},"end":{}}],"line":104},"14":{"loc":{"start":{"line":104,"column":8},"end":{"line":104,"column":74}},"type":"binary-expr","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":31}},{"start":{"line":104,"column":35},"end":{"line":104,"column":74}}],"line":104},"15":{"loc":{"start":{"line":108,"column":4},"end":{"line":113,"column":5}},"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":113,"column":5}},{"start":{},"end":{}}],"line":108},"16":{"loc":{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},"type":"if","locations":[{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},{"start":{},"end":{}}],"line":110},"17":{"loc":{"start":{"line":110,"column":12},"end":{"line":110,"column":44}},"type":"binary-expr","locations":[{"start":{"line":110,"column":12},"end":{"line":110,"column":27}},{"start":{"line":110,"column":31},"end":{"line":110,"column":44}}],"line":110},"18":{"loc":{"start":{"line":115,"column":4},"end":{"line":117,"column":5}},"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":117,"column":5}},{"start":{},"end":{}}],"line":115},"19":{"loc":{"start":{"line":115,"column":8},"end":{"line":115,"column":78}},"type":"binary-expr","locations":[{"start":{"line":115,"column":8},"end":{"line":115,"column":30}},{"start":{"line":115,"column":34},"end":{"line":115,"column":78}}],"line":115},"20":{"loc":{"start":{"line":118,"column":4},"end":{"line":120,"column":5}},"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":120,"column":5}},{"start":{},"end":{}}],"line":118},"21":{"loc":{"start":{"line":126,"column":4},"end":{"line":128,"column":5}},"type":"if","locations":[{"start":{"line":126,"column":4},"end":{"line":128,"column":5}},{"start":{},"end":{}}],"line":126},"22":{"loc":{"start":{"line":131,"column":4},"end":{"line":142,"column":5}},"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":142,"column":5}},{"start":{},"end":{}}],"line":131},"23":{"loc":{"start":{"line":135,"column":12},"end":{"line":137,"column":13}},"type":"if","locations":[{"start":{"line":135,"column":12},"end":{"line":137,"column":13}},{"start":{},"end":{}}],"line":135},"24":{"loc":{"start":{"line":144,"column":24},"end":{"line":149,"column":12}},"type":"cond-expr","locations":[{"start":{"line":145,"column":10},"end":{"line":148,"column":33}},{"start":{"line":149,"column":10},"end":{"line":149,"column":12}}],"line":144},"25":{"loc":{"start":{"line":145,"column":10},"end":{"line":148,"column":33}},"type":"binary-expr","locations":[{"start":{"line":145,"column":10},"end":{"line":148,"column":27}},{"start":{"line":148,"column":31},"end":{"line":148,"column":33}}],"line":145},"26":{"loc":{"start":{"line":158,"column":29},"end":{"line":158,"column":76}},"type":"binary-expr","locations":[{"start":{"line":158,"column":29},"end":{"line":158,"column":55}},{"start":{"line":158,"column":59},"end":{"line":158,"column":76}}],"line":158},"27":{"loc":{"start":{"line":161,"column":17},"end":{"line":161,"column":37}},"type":"binary-expr","locations":[{"start":{"line":161,"column":17},"end":{"line":161,"column":31}},{"start":{"line":161,"column":35},"end":{"line":161,"column":37}}],"line":161},"28":{"loc":{"start":{"line":163,"column":31},"end":{"line":163,"column":96}},"type":"binary-expr","locations":[{"start":{"line":163,"column":31},"end":{"line":163,"column":48}},{"start":{"line":163,"column":52},"end":{"line":163,"column":87}},{"start":{"line":163,"column":91},"end":{"line":163,"column":96}}],"line":163},"29":{"loc":{"start":{"line":164,"column":28},"end":{"line":164,"column":65}},"type":"binary-expr","locations":[{"start":{"line":164,"column":28},"end":{"line":164,"column":60}},{"start":{"line":164,"column":64},"end":{"line":164,"column":65}}],"line":164},"30":{"loc":{"start":{"line":165,"column":23},"end":{"line":165,"column":59}},"type":"binary-expr","locations":[{"start":{"line":165,"column":23},"end":{"line":165,"column":50}},{"start":{"line":165,"column":54},"end":{"line":165,"column":59}}],"line":165},"31":{"loc":{"start":{"line":166,"column":22},"end":{"line":166,"column":81}},"type":"binary-expr","locations":[{"start":{"line":166,"column":22},"end":{"line":166,"column":42}},{"start":{"line":166,"column":46},"end":{"line":166,"column":72}},{"start":{"line":166,"column":76},"end":{"line":166,"column":81}}],"line":166},"32":{"loc":{"start":{"line":169,"column":20},"end":{"line":169,"column":54}},"type":"binary-expr","locations":[{"start":{"line":169,"column":20},"end":{"line":169,"column":41}},{"start":{"line":169,"column":45},"end":{"line":169,"column":54}}],"line":169},"33":{"loc":{"start":{"line":171,"column":21},"end":{"line":171,"column":44}},"type":"binary-expr","locations":[{"start":{"line":171,"column":21},"end":{"line":171,"column":35}},{"start":{"line":171,"column":39},"end":{"line":171,"column":44}}],"line":171},"34":{"loc":{"start":{"line":172,"column":29},"end":{"line":172,"column":70}},"type":"binary-expr","locations":[{"start":{"line":172,"column":29},"end":{"line":172,"column":62}},{"start":{"line":172,"column":66},"end":{"line":172,"column":70}}],"line":172},"35":{"loc":{"start":{"line":175,"column":18},"end":{"line":175,"column":60}},"type":"binary-expr","locations":[{"start":{"line":175,"column":18},"end":{"line":175,"column":40}},{"start":{"line":175,"column":44},"end":{"line":175,"column":60}}],"line":175},"36":{"loc":{"start":{"line":182,"column":4},"end":{"line":199,"column":5}},"type":"if","locations":[{"start":{"line":182,"column":4},"end":{"line":199,"column":5}},{"start":{"line":191,"column":9},"end":{"line":199,"column":5}}],"line":182},"37":{"loc":{"start":{"line":187,"column":24},"end":{"line":187,"column":64}},"type":"binary-expr","locations":[{"start":{"line":187,"column":24},"end":{"line":187,"column":58}},{"start":{"line":187,"column":62},"end":{"line":187,"column":64}}],"line":187},"38":{"loc":{"start":{"line":191,"column":9},"end":{"line":199,"column":5}},"type":"if","locations":[{"start":{"line":191,"column":9},"end":{"line":199,"column":5}},{"start":{},"end":{}}],"line":191},"39":{"loc":{"start":{"line":196,"column":24},"end":{"line":196,"column":64}},"type":"binary-expr","locations":[{"start":{"line":196,"column":24},"end":{"line":196,"column":58}},{"start":{"line":196,"column":62},"end":{"line":196,"column":64}}],"line":196},"40":{"loc":{"start":{"line":200,"column":4},"end":{"line":202,"column":5}},"type":"if","locations":[{"start":{"line":200,"column":4},"end":{"line":202,"column":5}},{"start":{},"end":{}}],"line":200},"41":{"loc":{"start":{"line":209,"column":4},"end":{"line":211,"column":5}},"type":"if","locations":[{"start":{"line":209,"column":4},"end":{"line":211,"column":5}},{"start":{},"end":{}}],"line":209},"42":{"loc":{"start":{"line":212,"column":24},"end":{"line":212,"column":66}},"type":"binary-expr","locations":[{"start":{"line":212,"column":24},"end":{"line":212,"column":46}},{"start":{"line":212,"column":50},"end":{"line":212,"column":66}}],"line":212},"43":{"loc":{"start":{"line":213,"column":27},"end":{"line":213,"column":114}},"type":"binary-expr","locations":[{"start":{"line":213,"column":27},"end":{"line":213,"column":50}},{"start":{"line":213,"column":54},"end":{"line":213,"column":114}}],"line":213},"44":{"loc":{"start":{"line":228,"column":8},"end":{"line":239,"column":9}},"type":"if","locations":[{"start":{"line":228,"column":8},"end":{"line":239,"column":9}},{"start":{},"end":{}}],"line":228},"45":{"loc":{"start":{"line":235,"column":16},"end":{"line":237,"column":17}},"type":"if","locations":[{"start":{"line":235,"column":16},"end":{"line":237,"column":17}},{"start":{},"end":{}}],"line":235},"46":{"loc":{"start":{"line":241,"column":4},"end":{"line":243,"column":5}},"type":"if","locations":[{"start":{"line":241,"column":4},"end":{"line":243,"column":5}},{"start":{},"end":{}}],"line":241},"47":{"loc":{"start":{"line":248,"column":4},"end":{"line":250,"column":5}},"type":"if","locations":[{"start":{"line":248,"column":4},"end":{"line":250,"column":5}},{"start":{},"end":{}}],"line":248},"48":{"loc":{"start":{"line":248,"column":8},"end":{"line":248,"column":47}},"type":"binary-expr","locations":[{"start":{"line":248,"column":8},"end":{"line":248,"column":21}},{"start":{"line":248,"column":25},"end":{"line":248,"column":47}}],"line":248},"49":{"loc":{"start":{"line":249,"column":17},"end":{"line":249,"column":40}},"type":"binary-expr","locations":[{"start":{"line":249,"column":17},"end":{"line":249,"column":34}},{"start":{"line":249,"column":38},"end":{"line":249,"column":40}}],"line":249},"50":{"loc":{"start":{"line":254,"column":8},"end":{"line":256,"column":9}},"type":"if","locations":[{"start":{"line":254,"column":8},"end":{"line":256,"column":9}},{"start":{},"end":{}}],"line":254},"51":{"loc":{"start":{"line":254,"column":12},"end":{"line":254,"column":39}},"type":"binary-expr","locations":[{"start":{"line":254,"column":12},"end":{"line":254,"column":19}},{"start":{"line":254,"column":23},"end":{"line":254,"column":39}}],"line":254},"52":{"loc":{"start":{"line":262,"column":8},"end":{"line":264,"column":9}},"type":"if","locations":[{"start":{"line":262,"column":8},"end":{"line":264,"column":9}},{"start":{},"end":{}}],"line":262},"53":{"loc":{"start":{"line":268,"column":17},"end":{"line":270,"column":44}},"type":"binary-expr","locations":[{"start":{"line":268,"column":17},"end":{"line":268,"column":42}},{"start":{"line":269,"column":12},"end":{"line":269,"column":46}},{"start":{"line":270,"column":12},"end":{"line":270,"column":44}}],"line":268},"54":{"loc":{"start":{"line":279,"column":4},"end":{"line":281,"column":5}},"type":"if","locations":[{"start":{"line":279,"column":4},"end":{"line":281,"column":5}},{"start":{},"end":{}}],"line":279},"55":{"loc":{"start":{"line":282,"column":4},"end":{"line":285,"column":5}},"type":"if","locations":[{"start":{"line":282,"column":4},"end":{"line":285,"column":5}},{"start":{},"end":{}}],"line":282},"56":{"loc":{"start":{"line":312,"column":4},"end":{"line":313,"column":15}},"type":"if","locations":[{"start":{"line":312,"column":4},"end":{"line":313,"column":15}},{"start":{},"end":{}}],"line":312},"57":{"loc":{"start":{"line":318,"column":8},"end":{"line":343,"column":9}},"type":"switch","locations":[{"start":{"line":319,"column":12},"end":{"line":321,"column":22}},{"start":{"line":322,"column":12},"end":{"line":325,"column":22}},{"start":{"line":326,"column":12},"end":{"line":329,"column":22}},{"start":{"line":330,"column":12},"end":{"line":334,"column":22}},{"start":{"line":335,"column":12},"end":{"line":339,"column":22}},{"start":{"line":340,"column":12},"end":{"line":342,"column":22}}],"line":318},"58":{"loc":{"start":{"line":350,"column":4},"end":{"line":361,"column":5}},"type":"switch","locations":[{"start":{"line":351,"column":8},"end":{"line":352,"column":44}},{"start":{"line":353,"column":8},"end":{"line":354,"column":39}},{"start":{"line":355,"column":8},"end":{"line":356,"column":42}},{"start":{"line":357,"column":8},"end":{"line":358,"column":40}},{"start":{"line":359,"column":8},"end":{"line":360,"column":40}}],"line":350},"59":{"loc":{"start":{"line":371,"column":52},"end":{"line":371,"column":109}},"type":"binary-expr","locations":[{"start":{"line":371,"column":52},"end":{"line":371,"column":90}},{"start":{"line":371,"column":94},"end":{"line":371,"column":109}}],"line":371},"60":{"loc":{"start":{"line":372,"column":77},"end":{"line":372,"column":148}},"type":"cond-expr","locations":[{"start":{"line":372,"column":107},"end":{"line":372,"column":143}},{"start":{"line":372,"column":146},"end":{"line":372,"column":148}}],"line":372},"61":{"loc":{"start":{"line":392,"column":22},"end":{"line":392,"column":102}},"type":"cond-expr","locations":[{"start":{"line":392,"column":63},"end":{"line":392,"column":90}},{"start":{"line":392,"column":93},"end":{"line":392,"column":102}}],"line":392},"62":{"loc":{"start":{"line":396,"column":4},"end":{"line":398,"column":5}},"type":"if","locations":[{"start":{"line":396,"column":4},"end":{"line":398,"column":5}},{"start":{},"end":{}}],"line":396},"63":{"loc":{"start":{"line":396,"column":8},"end":{"line":396,"column":66}},"type":"binary-expr","locations":[{"start":{"line":396,"column":8},"end":{"line":396,"column":27}},{"start":{"line":396,"column":31},"end":{"line":396,"column":66}}],"line":396},"64":{"loc":{"start":{"line":402,"column":4},"end":{"line":405,"column":5}},"type":"if","locations":[{"start":{"line":402,"column":4},"end":{"line":405,"column":5}},{"start":{},"end":{}}],"line":402},"65":{"loc":{"start":{"line":402,"column":8},"end":{"line":402,"column":57}},"type":"binary-expr","locations":[{"start":{"line":402,"column":8},"end":{"line":402,"column":28}},{"start":{"line":402,"column":32},"end":{"line":402,"column":57}}],"line":402},"66":{"loc":{"start":{"line":412,"column":30},"end":{"line":412,"column":56}},"type":"binary-expr","locations":[{"start":{"line":412,"column":30},"end":{"line":412,"column":47}},{"start":{"line":412,"column":51},"end":{"line":412,"column":56}}],"line":412},"67":{"loc":{"start":{"line":448,"column":4},"end":{"line":450,"column":5}},"type":"if","locations":[{"start":{"line":448,"column":4},"end":{"line":450,"column":5}},{"start":{},"end":{}}],"line":448},"68":{"loc":{"start":{"line":448,"column":8},"end":{"line":448,"column":69}},"type":"binary-expr","locations":[{"start":{"line":448,"column":8},"end":{"line":448,"column":30}},{"start":{"line":448,"column":34},"end":{"line":448,"column":69}}],"line":448},"69":{"loc":{"start":{"line":461,"column":8},"end":{"line":463,"column":9}},"type":"if","locations":[{"start":{"line":461,"column":8},"end":{"line":463,"column":9}},{"start":{},"end":{}}],"line":461},"70":{"loc":{"start":{"line":479,"column":4},"end":{"line":486,"column":5}},"type":"if","locations":[{"start":{"line":479,"column":4},"end":{"line":486,"column":5}},{"start":{"line":483,"column":9},"end":{"line":486,"column":5}}],"line":479},"71":{"loc":{"start":{"line":483,"column":9},"end":{"line":486,"column":5}},"type":"if","locations":[{"start":{"line":483,"column":9},"end":{"line":486,"column":5}},{"start":{},"end":{}}],"line":483},"72":{"loc":{"start":{"line":490,"column":4},"end":{"line":492,"column":5}},"type":"if","locations":[{"start":{"line":490,"column":4},"end":{"line":492,"column":5}},{"start":{},"end":{}}],"line":490},"73":{"loc":{"start":{"line":493,"column":4},"end":{"line":495,"column":5}},"type":"if","locations":[{"start":{"line":493,"column":4},"end":{"line":495,"column":5}},{"start":{},"end":{}}],"line":493},"74":{"loc":{"start":{"line":496,"column":4},"end":{"line":498,"column":5}},"type":"if","locations":[{"start":{"line":496,"column":4},"end":{"line":498,"column":5}},{"start":{},"end":{}}],"line":496},"75":{"loc":{"start":{"line":501,"column":4},"end":{"line":514,"column":5}},"type":"if","locations":[{"start":{"line":501,"column":4},"end":{"line":514,"column":5}},{"start":{},"end":{}}],"line":501},"76":{"loc":{"start":{"line":501,"column":8},"end":{"line":501,"column":51}},"type":"binary-expr","locations":[{"start":{"line":501,"column":8},"end":{"line":501,"column":22}},{"start":{"line":501,"column":26},"end":{"line":501,"column":51}}],"line":501},"77":{"loc":{"start":{"line":507,"column":12},"end":{"line":512,"column":13}},"type":"if","locations":[{"start":{"line":507,"column":12},"end":{"line":512,"column":13}},{"start":{},"end":{}}],"line":507},"78":{"loc":{"start":{"line":520,"column":4},"end":{"line":531,"column":5}},"type":"switch","locations":[{"start":{"line":521,"column":8},"end":{"line":522,"column":23}},{"start":{"line":523,"column":8},"end":{"line":524,"column":23}},{"start":{"line":525,"column":8},"end":{"line":526,"column":24}},{"start":{"line":527,"column":8},"end":{"line":528,"column":24}},{"start":{"line":529,"column":8},"end":{"line":530,"column":23}}],"line":520},"79":{"loc":{"start":{"line":537,"column":4},"end":{"line":548,"column":5}},"type":"switch","locations":[{"start":{"line":538,"column":8},"end":{"line":539,"column":41}},{"start":{"line":540,"column":8},"end":{"line":541,"column":39}},{"start":{"line":542,"column":8},"end":{"line":543,"column":42}},{"start":{"line":544,"column":8},"end":{"line":545,"column":40}},{"start":{"line":546,"column":8},"end":{"line":547,"column":40}}],"line":537}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0,0],"29":[0,0],"30":[0,0],"31":[0,0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0,0,0,0,0],"58":[0,0,0,0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0,0,0,0],"79":[0,0,0,0,0]},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/tasks/monitor-diamond.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/tasks/monitor-diamond.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Enhanced diamond monitoring task for Hardhat\n *\n * Provides comprehensive CLI options, error handling, and professional user experience\n */\n\nimport { task } from 'hardhat/config';\nimport { HardhatRuntimeEnvironment } from 'hardhat/types';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport chalk from 'chalk';\n\nimport {\n  TaskArgs,\n  DiamondInfo,\n  MonitoringConfig,\n  ReportFormat,\n  MonitoringReport,\n  MonitoringStatus,\n} from '../core/types';\nimport { DiamondMonitoringSystem } from '../core/DiamondMonitoringSystem';\nimport { ReportGenerator } from '../reports/ReportGenerator';\nimport { ReportOptions } from '../reports/types';\n\n/**\n * Extended task arguments with enhanced options\n */\ninterface EnhancedTaskArgs extends TaskArgs {\n  targetNetwork?: string;\n  outputFormat?: string;\n  outputFile?: string;\n  configPath?: string;\n  deploymentPath?: string;\n  debug?: boolean;\n  failOnError?: boolean;\n  watch?: boolean;\n  dryRun?: boolean;\n  parallel?: boolean;\n  interval?: string;\n}\n\ntask('monitor-diamond', 'Monitor ERC-2535 Diamond contract deployment')\n  .addPositionalParam('diamondName', 'Name of the diamond contract to monitor')\n  .addOptionalParam('targetNetwork', 'Target network (overrides --network flag)')\n  .addOptionalParam('modules', 'Comma-separated list of modules to run', 'all')\n  .addOptionalParam('outputFormat', 'Report format (console|json|html|markdown|csv)', 'console')\n  .addOptionalParam('outputFile', 'Output file path for reports')\n  .addOptionalParam('configPath', 'Path to custom configuration file')\n  .addOptionalParam('deploymentPath', 'Path to diamond deployment files')\n  .addOptionalParam('interval', 'Watch mode interval in seconds', '300')\n  .addFlag('debug', 'Enable verbose logging and detailed output')\n  .addFlag('failOnError', 'Exit with error code if monitoring fails')\n  .addFlag('watch', 'Enable continuous monitoring mode')\n  .addFlag('dryRun', 'Preview monitoring without actual execution')\n  .addFlag('parallel', 'Enable parallel module execution')\n  .setAction(async (taskArgs: EnhancedTaskArgs, hre: HardhatRuntimeEnvironment) => {\n    const startTime = Date.now();\n\n    try {\n      // Print header\n      console.log(chalk.blue.bold('\\n🔍 Diamond Monitoring System'));\n      console.log(chalk.blue('══════════════════════════════\\n'));\n\n      // Validate arguments\n      await validateTaskArguments(taskArgs, hre);\n\n      // Load configuration\n      const config = await loadMonitoringConfiguration(taskArgs, hre);\n\n      // Get diamond information\n      const diamond = await loadDiamondInfo(taskArgs, hre);\n\n      // Initialize monitoring system\n      const monitoringSystem = new DiamondMonitoringSystem();\n\n      // Register available modules\n      await registerMonitoringModules(monitoringSystem, hre);\n\n      // Setup progress tracking\n      setupProgressTracking(monitoringSystem, taskArgs.debug);\n\n      if (taskArgs.dryRun) {\n        return await performDryRun(monitoringSystem, diamond, config, taskArgs);\n      }\n\n      if (taskArgs.watch) {\n        return await runContinuousMonitoring(monitoringSystem, diamond, config, taskArgs, hre);\n      } else {\n        return await runSingleMonitoring(monitoringSystem, diamond, config, taskArgs, hre);\n      }\n    } catch (error) {\n      const endTime = Date.now();\n      const duration = endTime - startTime;\n\n      console.error(chalk.red.bold(`\\n❌ Diamond monitoring failed after ${duration}ms:`));\n      console.error(chalk.red(`   ${(error as Error).message}\\n`));\n\n      if (taskArgs.debug) {\n        console.error(chalk.gray('Stack trace:'));\n        console.error(chalk.gray((error as Error).stack));\n      }\n\n      if (taskArgs.failOnError) {\n        process.exit(1);\n      }\n\n      throw error;\n    }\n  });\n\n// ========================================\n// Implementation Functions\n// ========================================\n\n/**\n * Validate task arguments and environment\n */\nasync function validateTaskArguments(\n  taskArgs: EnhancedTaskArgs,\n  hre: HardhatRuntimeEnvironment\n): Promise<void> {\n  if (taskArgs.debug) {\n    console.log(chalk.blue('📋 Validating arguments and environment...'));\n  }\n\n  // Validate diamond name\n  if (!taskArgs.diamondName || taskArgs.diamondName.trim() === '') {\n    throw new Error('Diamond name is required');\n  }\n\n  // Validate output format\n  const validFormats = ['console', 'json', 'html', 'markdown', 'csv'];\n  if (taskArgs.outputFormat && !validFormats.includes(taskArgs.outputFormat)) {\n    throw new Error(\n      `Invalid output format '${taskArgs.outputFormat}'. Valid options: ${validFormats.join(', ')}`\n    );\n  }\n\n  // Validate output file path if provided\n  if (taskArgs.outputFile) {\n    const dir = path.dirname(path.resolve(taskArgs.outputFile));\n    if (!fs.existsSync(dir)) {\n      throw new Error(`Output directory does not exist: ${dir}`);\n    }\n  }\n\n  // Validate configuration file if provided\n  if (taskArgs.configPath && !fs.existsSync(taskArgs.configPath)) {\n    throw new Error(`Configuration file not found: ${taskArgs.configPath}`);\n  }\n\n  // Validate deployment path if provided\n  if (taskArgs.deploymentPath && !fs.existsSync(taskArgs.deploymentPath)) {\n    throw new Error(`Deployment path not found: ${taskArgs.deploymentPath}`);\n  }\n\n  // Validate watch interval\n  if (taskArgs.interval) {\n    const interval = parseInt(taskArgs.interval);\n    if (isNaN(interval) || interval < 10) {\n      throw new Error('Watch interval must be a number >= 10 seconds');\n    }\n  }\n\n  // Validate network connectivity\n  if (taskArgs.targetNetwork && !hre.config.networks[taskArgs.targetNetwork]) {\n    throw new Error(`Network '${taskArgs.targetNetwork}' not configured in Hardhat config`);\n  }\n\n  if (taskArgs.debug) {\n    console.log(chalk.green('✅ All arguments validated successfully'));\n  }\n}\n\n/**\n * Load monitoring configuration from file or defaults\n */\nasync function loadMonitoringConfiguration(\n  taskArgs: EnhancedTaskArgs,\n  hre: HardhatRuntimeEnvironment\n): Promise<MonitoringConfig> {\n  if (taskArgs.debug) {\n    console.log(chalk.blue('⚙️  Loading monitoring configuration...'));\n  }\n\n  let config: Partial<MonitoringConfig> = {};\n\n  // Load from configuration file if provided\n  if (taskArgs.configPath) {\n    try {\n      const configContent = fs.readFileSync(taskArgs.configPath, 'utf8');\n      config = JSON.parse(configContent);\n      if (taskArgs.debug) {\n        console.log(chalk.green(`✅ Loaded configuration from ${taskArgs.configPath}`));\n      }\n    } catch (error) {\n      throw new Error(\n        `Failed to load configuration from ${taskArgs.configPath}: ${(error as Error).message}`\n      );\n    }\n  }\n\n  // Parse modules list\n  const modulesList =\n    taskArgs.modules !== 'all'\n      ? taskArgs.modules\n          ?.split(',')\n          .map(m => m.trim())\n          .filter(m => m) || []\n      : [];\n\n  // Default modules to enable when 'all' is specified or no modules provided\n  const defaultModules = [\n    'function-selectors',\n    'diamond-structure',\n    'access-control',\n    'token-supply',\n    'erc165-compliance',\n  ];\n  const enableAllModules = taskArgs.modules === 'all' || !taskArgs.modules;\n\n  // Create monitoring configuration\n  const monitoringConfig: MonitoringConfig = {\n    modules: config.modules || {},\n    execution: {\n      parallelExecution: taskArgs.parallel || config.execution?.parallelExecution || false,\n      maxConcurrency: config.execution?.maxConcurrency || 3,\n      timeoutMs: config.execution?.timeoutMs || 30000,\n      failFast: taskArgs.failOnError || config.execution?.failFast || false,\n    },\n    reporting: {\n      format: (taskArgs.outputFormat as ReportFormat) || 'console',\n      outputPath: taskArgs.outputFile,\n      verbose: taskArgs.debug || false,\n      includeMetadata: config.reporting?.includeMetadata || true,\n    },\n    network: {\n      name: taskArgs.targetNetwork || hre.network.name,\n      chainId: 0, // Will be set when loading diamond info\n      rpcUrl: '', // Will be set when loading diamond info\n    },\n    diamond: {} as DiamondInfo, // Will be set when loading diamond info\n  };\n\n  // Configure specific modules if provided\n  if (enableAllModules) {\n    // Enable all default modules\n    defaultModules.forEach(moduleId => {\n      monitoringConfig.modules[moduleId] = {\n        enabled: true,\n        config: config.modules?.[moduleId]?.config || {},\n      };\n    });\n  } else if (modulesList.length > 0) {\n    // Enable only specified modules\n    modulesList.forEach(moduleId => {\n      monitoringConfig.modules[moduleId] = {\n        enabled: true,\n        config: config.modules?.[moduleId]?.config || {},\n      };\n    });\n  }\n\n  if (taskArgs.debug) {\n    console.log(chalk.green('✅ Monitoring configuration loaded'));\n  }\n\n  return monitoringConfig;\n}\n\n/**\n * Load diamond information from deployment files\n */\nasync function loadDiamondInfo(\n  taskArgs: EnhancedTaskArgs,\n  hre: HardhatRuntimeEnvironment\n): Promise<DiamondInfo> {\n  if (taskArgs.debug) {\n    console.log(chalk.blue('💎 Loading diamond information...'));\n  }\n\n  const networkName = taskArgs.targetNetwork || hre.network.name;\n  const deploymentPath =\n    taskArgs.deploymentPath || path.join(hre.config.paths.root, 'deployments', networkName);\n\n  // Try to find diamond deployment file\n  const possiblePaths = [\n    path.join(deploymentPath, `${taskArgs.diamondName}.json`),\n    path.join(deploymentPath, `${taskArgs.diamondName}Diamond.json`),\n    path.join(deploymentPath, 'Diamond.json'),\n    path.join(\n      hre.config.paths.root,\n      'diamond-deployments',\n      networkName,\n      `${taskArgs.diamondName}.json`\n    ),\n    // Add diamonds directory structure support\n    path.join(\n      hre.config.paths.root,\n      'diamonds',\n      taskArgs.diamondName,\n      'deployments',\n      `${networkName}.json`\n    ),\n    path.join(\n      hre.config.paths.root,\n      'diamonds',\n      taskArgs.diamondName,\n      'deployments',\n      `deployed_${networkName}.json`\n    ),\n    path.join(\n      hre.config.paths.root,\n      'diamonds',\n      taskArgs.diamondName,\n      `deployed_${networkName}.json`\n    ),\n  ];\n\n  let diamondDeployment: any = null;\n  let deploymentFilePath: string = '';\n\n  for (const filePath of possiblePaths) {\n    if (fs.existsSync(filePath)) {\n      try {\n        diamondDeployment = JSON.parse(fs.readFileSync(filePath, 'utf8'));\n        deploymentFilePath = filePath;\n        break;\n      } catch (error) {\n        if (taskArgs.debug) {\n          console.log(chalk.yellow(`⚠️  Failed to parse ${filePath}: ${(error as Error).message}`));\n        }\n      }\n    }\n  }\n\n  if (!diamondDeployment) {\n    throw new Error(\n      `Diamond deployment not found for '${taskArgs.diamondName}' on network '${networkName}'. Searched paths:\\n${possiblePaths.join('\\n')}`\n    );\n  }\n\n  // Get network configuration\n  const networkConfig = hre.config.networks[networkName];\n  let rpcUrl = '';\n  let chainId = 0;\n\n  if (networkConfig && 'url' in networkConfig) {\n    rpcUrl = networkConfig.url || '';\n  }\n\n  try {\n    // Get chain ID from provider\n    const ethers = (hre as any).ethers;\n    if (!ethers || !ethers.provider) {\n      throw new Error(\n        'Ethers provider not available. Make sure @nomicfoundation/hardhat-ethers is installed.'\n      );\n    }\n\n    const provider = ethers.provider;\n    const network = await provider.getNetwork();\n    chainId = Number(network.chainId);\n  } catch (error) {\n    if (taskArgs.debug) {\n      console.log(chalk.yellow(`⚠️  Could not get chain ID: ${(error as Error).message}`));\n    }\n  }\n\n  const diamond: DiamondInfo = {\n    name: taskArgs.diamondName,\n    address:\n      diamondDeployment.address ||\n      diamondDeployment.diamond?.address ||\n      diamondDeployment.DiamondAddress,\n    configPath: deploymentFilePath,\n    deploymentBlock: diamondDeployment.receipt?.blockNumber,\n    network: {\n      name: networkName,\n      chainId,\n      rpcUrl,\n    },\n  };\n\n  if (!diamond.address) {\n    throw new Error(`Diamond address not found in deployment file: ${deploymentFilePath}`);\n  }\n\n  if (taskArgs.debug) {\n    console.log(chalk.green(`✅ Diamond loaded: ${diamond.name} at ${diamond.address}`));\n    console.log(\n      chalk.blue(`   Network: ${diamond.network.name} (Chain ID: ${diamond.network.chainId})`)\n    );\n  }\n\n  return diamond;\n}\n\n/**\n * Register available monitoring modules\n */\nasync function registerMonitoringModules(\n  system: DiamondMonitoringSystem,\n  hre: HardhatRuntimeEnvironment\n): Promise<void> {\n  console.log(chalk.blue('📦 Registering monitoring modules...'));\n\n  // Import and register all available monitoring modules\n  const {\n    FunctionSelectorModule,\n    DiamondStructureModule,\n    AccessControlModule,\n    TokenSupplyModule,\n    ERC165ComplianceModule,\n  } = await import('../modules');\n\n  const modules = [\n    new FunctionSelectorModule(),\n    new DiamondStructureModule(),\n    new AccessControlModule(),\n    new TokenSupplyModule(),\n    new ERC165ComplianceModule(),\n  ];\n\n  // Register each module with the monitoring system\n  modules.forEach(module => {\n    system.registerModule(module);\n  });\n\n  console.log(chalk.green('✅ Monitoring modules registered'));\n}\n\n/**\n * Setup progress tracking for monitoring execution\n */\nfunction setupProgressTracking(system: DiamondMonitoringSystem, verbose?: boolean): void {\n  if (!verbose) return;\n\n  console.log(chalk.blue('📊 Setting up progress tracking...'));\n\n  let moduleCount = 0;\n  let completedModules = 0;\n\n  system.addEventListener(event => {\n    switch (event.type) {\n      case 'monitoring_start':\n        console.log(chalk.blue('🚀 Starting diamond monitoring...'));\n        break;\n\n      case 'module_start':\n        moduleCount++;\n        console.log(\n          chalk.blue(`▶️  [${completedModules + 1}/${moduleCount}] Starting: ${event.data.module}`)\n        );\n        break;\n\n      case 'module_complete':\n        completedModules++;\n        console.log(\n          chalk.green(`✅ [${completedModules}/${moduleCount}] Completed: ${event.moduleId}`)\n        );\n        break;\n\n      case 'module_error':\n        completedModules++;\n        console.log(chalk.red(`❌ [${completedModules}/${moduleCount}] Failed: ${event.moduleId}`));\n        console.log(chalk.red(`   Error: ${event.data.error}`));\n        break;\n\n      case 'issue_found':\n        const issue = event.data.issue;\n        const severityColor = getSeverityColor(issue.severity);\n        console.log(severityColor(`   🔍 Issue found: ${issue.title} (${issue.severity})`));\n        break;\n\n      case 'monitoring_complete':\n        console.log(chalk.green('🎉 Diamond monitoring completed'));\n        break;\n    }\n  });\n}\n\n/**\n * Get color function for severity level\n */\nfunction getSeverityColor(severity: string): chalk.Chalk {\n  switch (severity.toLowerCase()) {\n    case 'critical':\n      return chalk.red.bold;\n    case 'error':\n      return chalk.red;\n    case 'warning':\n      return chalk.yellow;\n    case 'info':\n      return chalk.blue;\n    default:\n      return chalk.gray;\n  }\n}\n\n/**\n * Perform dry run to preview monitoring without execution\n */\nasync function performDryRun(\n  system: DiamondMonitoringSystem,\n  diamond: DiamondInfo,\n  config: MonitoringConfig,\n  taskArgs: EnhancedTaskArgs\n): Promise<any> {\n  console.log(chalk.yellow.bold('\\n🔍 DRY RUN MODE - Preview Only\\n'));\n\n  console.log(chalk.blue('📊 Monitoring Preview:'));\n  console.log(chalk.blue(`   Diamond: ${diamond.name} (${diamond.address})`));\n  console.log(chalk.blue(`   Network: ${diamond.network.name} (${diamond.network.chainId})`));\n  console.log(\n    chalk.blue(`   Modules: ${Object.keys(config.modules).join(', ') || 'all available'}`)\n  );\n  console.log(\n    chalk.blue(\n      `   Output: ${config.reporting.format}${config.reporting.outputPath ? ` -> ${config.reporting.outputPath}` : ''}`\n    )\n  );\n\n  const modules = system.listModules();\n  console.log(chalk.blue(`\\n📦 Available Modules (${modules.length}):`));\n  modules.forEach((module, index) => {\n    console.log(chalk.blue(`   ${index + 1}. ${module.name} (${module.id})`));\n  });\n\n  console.log(chalk.yellow('\\n✅ Dry run completed - no actual monitoring performed'));\n\n  return {\n    mode: 'dry-run',\n    diamond,\n    config,\n    availableModules: modules.length,\n  };\n}\n\n/**\n * Run single monitoring execution\n */\nasync function runSingleMonitoring(\n  system: DiamondMonitoringSystem,\n  diamond: DiamondInfo,\n  config: MonitoringConfig,\n  taskArgs: EnhancedTaskArgs,\n  hre: HardhatRuntimeEnvironment\n): Promise<MonitoringReport> {\n  console.log(chalk.blue('🔍 Starting single monitoring execution...\\n'));\n\n  const provider = (hre as any).ethers.provider;\n  const moduleIds =\n    Object.keys(config.modules).length > 0 ? Object.keys(config.modules) : undefined;\n\n  // Execute monitoring\n  const report = await system.runMonitoring(diamond, provider, config, moduleIds);\n\n  // Generate and save report\n  if (taskArgs.outputFile || taskArgs.outputFormat !== 'console') {\n    await generateAndSaveReport(report, taskArgs);\n  }\n\n  // Display summary\n  displayMonitoringSummary(report, taskArgs);\n\n  // Handle exit code\n  if (taskArgs.failOnError && report.summary.failed > 0) {\n    console.log(\n      chalk.red.bold(`\\n❌ Monitoring failed with ${report.summary.failed} failed checks`)\n    );\n    process.exit(1);\n  }\n\n  return report;\n}\n\n/**\n * Run continuous monitoring with watch mode\n */\nasync function runContinuousMonitoring(\n  system: DiamondMonitoringSystem,\n  diamond: DiamondInfo,\n  config: MonitoringConfig,\n  taskArgs: EnhancedTaskArgs,\n  hre: HardhatRuntimeEnvironment\n): Promise<void> {\n  const interval = parseInt(taskArgs.interval || '300') * 1000;\n\n  console.log(chalk.yellow.bold('\\n👁️  CONTINUOUS MONITORING MODE'));\n  console.log(chalk.yellow(`   Interval: ${interval / 1000} seconds`));\n  console.log(chalk.yellow('   Press Ctrl+C to stop\\n'));\n\n  let runCount = 0;\n\n  const runMonitoring = async () => {\n    runCount++;\n    console.log(chalk.blue(`\\n[${new Date().toISOString()}] Monitoring run #${runCount}`));\n    console.log(chalk.blue('═'.repeat(60)));\n\n    try {\n      await runSingleMonitoring(system, diamond, config, taskArgs, hre);\n    } catch (error) {\n      console.error(\n        chalk.red(`❌ Monitoring run #${runCount} failed: ${(error as Error).message}`)\n      );\n    }\n  };\n\n  // Setup signal handlers for graceful shutdown\n  process.on('SIGINT', () => {\n    console.log(chalk.yellow('\\n\\n👋 Stopping continuous monitoring...'));\n    process.exit(0);\n  });\n\n  process.on('SIGTERM', () => {\n    console.log(chalk.yellow('\\n\\n👋 Stopping continuous monitoring...'));\n    process.exit(0);\n  });\n\n  // Run initial monitoring\n  await runMonitoring();\n\n  // Setup interval for continuous monitoring\n  setInterval(runMonitoring, interval);\n\n  // Keep process alive\n  return new Promise(() => {});\n}\n\n/**\n * Generate and save monitoring report\n */\nasync function generateAndSaveReport(\n  report: MonitoringReport,\n  taskArgs: EnhancedTaskArgs\n): Promise<void> {\n  if (!taskArgs.outputFormat || taskArgs.outputFormat === 'console') {\n    return;\n  }\n\n  try {\n    const format = taskArgs.outputFormat as ReportFormat;\n    const outputPath = taskArgs.outputFile;\n\n    const options: ReportOptions = {\n      includeMetadata: true,\n      includeDetails: taskArgs.debug,\n      colorOutput: true,\n      includeRecommendations: true,\n    };\n\n    await ReportGenerator.generateReport(report, format, outputPath, options);\n\n    if (outputPath) {\n      console.log(chalk.green(`📄 Report saved: ${outputPath}`));\n    }\n  } catch (error) {\n    console.error(chalk.red(`❌ Failed to generate report: ${(error as Error).message}`));\n  }\n}\n\n/**\n * Display monitoring summary\n */\nfunction displayMonitoringSummary(report: MonitoringReport, taskArgs: EnhancedTaskArgs): void {\n  console.log(chalk.blue('\\n📊 Monitoring Summary:'));\n  console.log(chalk.blue('═'.repeat(30)));\n\n  const { summary } = report;\n\n  // Status indicator\n  let statusIcon = '✅';\n  let statusColor = chalk.green;\n\n  if (summary.failed > 0) {\n    statusIcon = '❌';\n    statusColor = chalk.red;\n  } else if (summary.warnings > 0) {\n    statusIcon = '⚠️';\n    statusColor = chalk.yellow;\n  }\n\n  console.log(statusColor(`${statusIcon} Overall Status: ${summary.status}`));\n  console.log(chalk.blue(`📊 Total Checks: ${summary.totalChecks}`));\n  console.log(chalk.green(`✅ Passed: ${summary.passed}`));\n\n  if (summary.failed > 0) {\n    console.log(chalk.red(`❌ Failed: ${summary.failed}`));\n  }\n\n  if (summary.warnings > 0) {\n    console.log(chalk.yellow(`⚠️  Warnings: ${summary.warnings}`));\n  }\n\n  if (summary.skipped > 0) {\n    console.log(chalk.gray(`⏭️  Skipped: ${summary.skipped}`));\n  }\n\n  console.log(chalk.blue(`⏱️  Duration: ${report.duration}ms`));\n\n  // Module details\n  if (taskArgs.debug && report.modules.length > 0) {\n    console.log(chalk.blue('\\n📦 Module Results:'));\n    report.modules.forEach(module => {\n      const statusIcon = getModuleStatusIcon(module.status);\n      const statusColor = getModuleStatusColor(module.status);\n      console.log(statusColor(`   ${statusIcon} ${module.moduleName} (${module.duration}ms)`));\n\n      if (module.result.issues.length > 0) {\n        module.result.issues.forEach(issue => {\n          const severityColor = getSeverityColor(issue.severity);\n          console.log(severityColor(`      • ${issue.title} (${issue.severity})`));\n        });\n      }\n    });\n  }\n}\n\n/**\n * Get status icon for module\n */\nfunction getModuleStatusIcon(status: MonitoringStatus): string {\n  switch (status) {\n    case MonitoringStatus.PASS:\n      return '✅';\n    case MonitoringStatus.FAIL:\n      return '❌';\n    case MonitoringStatus.WARNING:\n      return '⚠️';\n    case MonitoringStatus.SKIPPED:\n      return '⏭️';\n    default:\n      return '❓';\n  }\n}\n\n/**\n * Get status color for module\n */\nfunction getModuleStatusColor(status: MonitoringStatus): chalk.Chalk {\n  switch (status) {\n    case MonitoringStatus.PASS:\n      return chalk.green;\n    case MonitoringStatus.FAIL:\n      return chalk.red;\n    case MonitoringStatus.WARNING:\n      return chalk.yellow;\n    case MonitoringStatus.SKIPPED:\n      return chalk.gray;\n    default:\n      return chalk.gray;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0c97d494f6acfb55a490d146585c5af1df4a6164","contentHash":"1ad0319fe41396f71cb5b080b90190ff9e659bdbfeac6252dbed97ee544a9aec"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/core/types.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/core/types.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":81}},"2":{"start":{"line":11,"column":0},"end":{"line":16,"column":66}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":35}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":41}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":37}},"6":{"start":{"line":15,"column":4},"end":{"line":15,"column":43}},"7":{"start":{"line":21,"column":0},"end":{"line":26,"column":75}},"8":{"start":{"line":22,"column":4},"end":{"line":22,"column":38}},"9":{"start":{"line":23,"column":4},"end":{"line":23,"column":38}},"10":{"start":{"line":24,"column":4},"end":{"line":24,"column":44}},"11":{"start":{"line":25,"column":4},"end":{"line":25,"column":44}},"12":{"start":{"line":31,"column":0},"end":{"line":36,"column":63}},"13":{"start":{"line":32,"column":4},"end":{"line":32,"column":40}},"14":{"start":{"line":33,"column":4},"end":{"line":33,"column":34}},"15":{"start":{"line":34,"column":4},"end":{"line":34,"column":34}},"16":{"start":{"line":35,"column":4},"end":{"line":35,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":1},"end":{"line":11,"column":2}},"loc":{"start":{"line":11,"column":26},"end":{"line":16,"column":1}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":1},"end":{"line":21,"column":2}},"loc":{"start":{"line":21,"column":29},"end":{"line":26,"column":1}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":31,"column":1},"end":{"line":31,"column":2}},"loc":{"start":{"line":31,"column":25},"end":{"line":36,"column":1}},"line":31}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":3},"end":{"line":16,"column":64}},"type":"binary-expr","locations":[{"start":{"line":16,"column":3},"end":{"line":16,"column":16}},{"start":{"line":16,"column":21},"end":{"line":16,"column":63}}],"line":16},"1":{"loc":{"start":{"line":26,"column":3},"end":{"line":26,"column":73}},"type":"binary-expr","locations":[{"start":{"line":26,"column":3},"end":{"line":26,"column":19}},{"start":{"line":26,"column":24},"end":{"line":26,"column":72}}],"line":26},"2":{"loc":{"start":{"line":36,"column":3},"end":{"line":36,"column":61}},"type":"binary-expr","locations":[{"start":{"line":36,"column":3},"end":{"line":36,"column":15}},{"start":{"line":36,"column":20},"end":{"line":36,"column":60}}],"line":36}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1},"f":{"0":1,"1":1,"2":1},"b":{"0":[1,1],"1":[1,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/core/types.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/core/types.ts"],"names":[],"mappings":";AAAA;;GAEG;;;AAKH;;GAEG;AACH,IAAY,aAKX;AALD,WAAY,aAAa;IACvB,8BAAa,CAAA;IACb,oCAAmB,CAAA;IACnB,gCAAe,CAAA;IACf,sCAAqB,CAAA;AACvB,CAAC,EALW,aAAa,6BAAb,aAAa,QAKxB;AAED;;GAEG;AACH,IAAY,gBAKX;AALD,WAAY,gBAAgB;IAC1B,iCAAa,CAAA;IACb,iCAAa,CAAA;IACb,uCAAmB,CAAA;IACnB,uCAAmB,CAAA;AACrB,CAAC,EALW,gBAAgB,gCAAhB,gBAAgB,QAK3B;AAED;;GAEG;AACH,IAAY,YAKX;AALD,WAAY,YAAY;IACtB,mCAAmB,CAAA;IACnB,6BAAa,CAAA;IACb,6BAAa,CAAA;IACb,2BAAW,CAAA;AACb,CAAC,EALW,YAAY,4BAAZ,YAAY,QAKvB","sourcesContent":["/**\n * Core types and interfaces for the Hardhat Diamond Monitoring Plugin\n */\n\nimport { Provider } from 'ethers';\nimport { HardhatRuntimeEnvironment } from 'hardhat/types';\n\n/**\n * Severity levels for monitoring issues\n */\nexport enum SeverityLevel {\n  INFO = 'info',\n  WARNING = 'warning',\n  ERROR = 'error',\n  CRITICAL = 'critical',\n}\n\n/**\n * Overall monitoring status\n */\nexport enum MonitoringStatus {\n  PASS = 'PASS',\n  FAIL = 'FAIL',\n  WARNING = 'WARNING',\n  SKIPPED = 'SKIPPED',\n}\n\n/**\n * Report output formats\n */\nexport enum ReportFormat {\n  CONSOLE = 'console',\n  JSON = 'json',\n  HTML = 'html',\n  CSV = 'csv',\n}\n\n/**\n * Network information for monitoring context\n */\nexport interface NetworkInfo {\n  name: string;\n  chainId: number;\n  rpcUrl: string;\n  blockExplorerUrl?: string;\n  blockExplorerApiKey?: string;\n}\n\n/**\n * Diamond information for monitoring\n */\nexport interface DiamondInfo {\n  name: string;\n  address: string;\n  configPath?: string;\n  deploymentBlock?: number;\n  network: NetworkInfo;\n}\n\n/**\n * Configuration validation result\n */\nexport interface ConfigValidationResult {\n  isValid: boolean;\n  errors: string[];\n  warnings: string[];\n}\n\n/**\n * Configuration requirements for monitoring modules\n */\nexport interface ConfigRequirement {\n  key: string;\n  type: 'string' | 'number' | 'boolean' | 'object' | 'array';\n  required: boolean;\n  description: string;\n  defaultValue?: any;\n  validation?: (value: any) => boolean;\n}\n\n/**\n * Configuration validation result\n */\nexport interface ValidationResult {\n  isValid: boolean;\n  errors: string[];\n  warnings: string[];\n}\n\n/**\n * Individual monitoring issue\n */\nexport interface MonitoringIssue {\n  id: string;\n  title: string;\n  description: string;\n  severity: SeverityLevel;\n  category: string;\n  recommendation?: string;\n  metadata?: Record<string, any>;\n  location?: {\n    contract?: string;\n    function?: string;\n    line?: number;\n  };\n}\n\n/**\n * Result from executing a monitoring module\n */\nexport interface MonitoringResult {\n  status: MonitoringStatus;\n  issues: MonitoringIssue[];\n  executionTime: number;\n  metadata?: Record<string, any>;\n}\n\n/**\n * Context provided to monitoring modules during execution\n */\nexport interface MonitoringContext {\n  diamond: DiamondInfo;\n  provider: Provider;\n  config: MonitoringConfig;\n  moduleConfig: Record<string, any>;\n  hre: HardhatRuntimeEnvironment;\n  dryRun?: boolean;\n  verbose?: boolean;\n}\n\n/**\n * Result from a module execution\n */\nexport interface ModuleResult {\n  moduleId: string;\n  moduleName: string;\n  status: MonitoringStatus;\n  result: MonitoringResult;\n  startTime: Date;\n  endTime: Date;\n  duration: number;\n  error?: Error;\n}\n\n/**\n * Complete monitoring report\n */\nexport interface MonitoringReport {\n  summary: {\n    status: MonitoringStatus;\n    totalChecks: number;\n    passed: number;\n    failed: number;\n    warnings: number;\n    skipped: number;\n  };\n  modules: ModuleResult[];\n  diamond: DiamondInfo;\n  network: NetworkInfo;\n  config: MonitoringConfig;\n  timestamp: Date;\n  duration: number;\n  recommendations?: string[];\n}\n\n/**\n * Monitoring module interface\n */\nexport interface MonitoringModule {\n  readonly id: string;\n  readonly name: string;\n  readonly description: string;\n  readonly version: string;\n  readonly category: string;\n\n  /**\n   * Check if this module can monitor the given diamond\n   */\n  canMonitor(diamond: DiamondInfo, network: NetworkInfo): Promise<boolean>;\n\n  /**\n   * Get configuration requirements for this module\n   */\n  getRequiredConfig(): ConfigRequirement[];\n\n  /**\n   * Validate module-specific configuration\n   */\n  validateConfig(config: any): ValidationResult;\n\n  /**\n   * Execute monitoring\n   */\n  monitor(context: MonitoringContext): Promise<MonitoringResult>;\n\n  /**\n   * Optional cleanup after monitoring\n   */\n  cleanup?(context: MonitoringContext): Promise<void>;\n}\n\n/**\n * Main monitoring configuration\n */\nexport interface MonitoringConfig {\n  // Module configuration\n  modules: Record<\n    string,\n    {\n      enabled: boolean;\n      priority?: number;\n      config?: Record<string, any>;\n    }\n  >;\n\n  // Execution configuration\n  execution: {\n    parallelExecution: boolean;\n    maxConcurrency: number;\n    timeoutMs: number;\n    failFast: boolean;\n  };\n\n  // Reporting configuration\n  reporting: {\n    format: ReportFormat;\n    outputPath?: string;\n    verbose: boolean;\n    includeMetadata: boolean;\n  };\n\n  // Network configuration\n  network: NetworkInfo;\n\n  // Diamond configuration\n  diamond: DiamondInfo;\n}\n\n/**\n * Task arguments interface\n */\nexport interface TaskArgs {\n  diamondName: string;\n  network?: string; // Optional since we derive from Hardhat context\n  modules?: string;\n  outputFormat?: string;\n  outputFile?: string;\n  verbose?: boolean;\n  failOnError?: boolean;\n  dryRun?: boolean;\n}\n\n/**\n * Monitoring event types\n */\nexport type MonitoringEventType =\n  | 'monitoring_start'\n  | 'monitoring_complete'\n  | 'module_start'\n  | 'module_complete'\n  | 'module_error'\n  | 'issue_found';\n\n/**\n * Monitoring event data\n */\nexport interface MonitoringEvent {\n  type: MonitoringEventType;\n  timestamp: Date;\n  moduleId?: string;\n  data: Record<string, any>;\n}\n\n/**\n * Monitoring event listener\n */\nexport type MonitoringEventListener = (event: MonitoringEvent) => void;\n\n/**\n * Logger interface for monitoring system\n */\nexport interface Logger {\n  debug(message: string, ...args: any[]): void;\n  info(message: string, ...args: any[]): void;\n  warn(message: string, ...args: any[]): void;\n  error(message: string, ...args: any[]): void;\n}\n\n/**\n * Retry configuration for network operations\n */\nexport interface RetryConfig {\n  maxAttempts: number;\n  baseDelayMs: number;\n  maxDelayMs: number;\n  backoffMultiplier: number;\n}\n\n/**\n * Module dependency information\n */\nexport interface ModuleDependency {\n  moduleId: string;\n  optional: boolean;\n}\n\n/**\n * Extended monitoring module interface with dependencies\n */\nexport interface MonitoringModuleWithDeps extends MonitoringModule {\n  /**\n   * Get module dependencies (optional)\n   */\n  getDependencies?(): ModuleDependency[];\n}\n\n/**\n * Diamond configuration from deployment files\n */\nexport interface DiamondConfig {\n  name: string;\n  address: string;\n  deploymentBlock?: number;\n  facets: Record<\n    string,\n    {\n      address: string;\n      selectors: string[];\n    }\n  >;\n  protocolVersion?: string;\n  metadata?: Record<string, any>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8bb6b78cc6a03dc33a25eae5af8ff5f642b892c1","contentHash":"4e9fdfe0aa6f9f65ea25e0596f0212a63de8990daa68201f7c8192c23b0cfaa6"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/core/DiamondMonitoringSystem.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/core/DiamondMonitoringSystem.ts","statementMap":{"0":{"start":{"line":8,"column":0},"end":{"line":8,"column":62}},"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":41}},"2":{"start":{"line":10,"column":16},"end":{"line":10,"column":32}},"3":{"start":{"line":11,"column":16},"end":{"line":11,"column":57}},"4":{"start":{"line":12,"column":16},"end":{"line":12,"column":34}},"5":{"start":{"line":22,"column":8},"end":{"line":22,"column":33}},"6":{"start":{"line":23,"column":8},"end":{"line":23,"column":33}},"7":{"start":{"line":24,"column":8},"end":{"line":24,"column":31}},"8":{"start":{"line":25,"column":8},"end":{"line":25,"column":40}},"9":{"start":{"line":26,"column":8},"end":{"line":31,"column":10}},"10":{"start":{"line":32,"column":8},"end":{"line":32,"column":59}},"11":{"start":{"line":38,"column":8},"end":{"line":51,"column":10}},"12":{"start":{"line":40,"column":16},"end":{"line":40,"column":83}},"13":{"start":{"line":43,"column":16},"end":{"line":43,"column":81}},"14":{"start":{"line":46,"column":16},"end":{"line":46,"column":83}},"15":{"start":{"line":49,"column":16},"end":{"line":49,"column":82}},"16":{"start":{"line":59,"column":8},"end":{"line":63,"column":9}},"17":{"start":{"line":60,"column":26},"end":{"line":60,"column":79}},"18":{"start":{"line":61,"column":12},"end":{"line":61,"column":37}},"19":{"start":{"line":62,"column":12},"end":{"line":62,"column":35}},"20":{"start":{"line":64,"column":8},"end":{"line":64,"column":44}},"21":{"start":{"line":65,"column":8},"end":{"line":65,"column":77}},"22":{"start":{"line":73,"column":8},"end":{"line":76,"column":9}},"23":{"start":{"line":74,"column":12},"end":{"line":74,"column":79}},"24":{"start":{"line":75,"column":12},"end":{"line":75,"column":25}},"25":{"start":{"line":77,"column":8},"end":{"line":77,"column":38}},"26":{"start":{"line":78,"column":8},"end":{"line":78,"column":61}},"27":{"start":{"line":79,"column":8},"end":{"line":79,"column":20}},"28":{"start":{"line":86,"column":8},"end":{"line":86,"column":49}},"29":{"start":{"line":94,"column":8},"end":{"line":94,"column":42}},"30":{"start":{"line":101,"column":8},"end":{"line":101,"column":43}},"31":{"start":{"line":102,"column":8},"end":{"line":102,"column":50}},"32":{"start":{"line":109,"column":22},"end":{"line":109,"column":59}},"33":{"start":{"line":110,"column":8},"end":{"line":113,"column":9}},"34":{"start":{"line":111,"column":12},"end":{"line":111,"column":49}},"35":{"start":{"line":112,"column":12},"end":{"line":112,"column":56}},"36":{"start":{"line":120,"column":8},"end":{"line":127,"column":11}},"37":{"start":{"line":121,"column":12},"end":{"line":126,"column":13}},"38":{"start":{"line":122,"column":16},"end":{"line":122,"column":32}},"39":{"start":{"line":125,"column":16},"end":{"line":125,"column":79}},"40":{"start":{"line":139,"column":26},"end":{"line":139,"column":36}},"41":{"start":{"line":140,"column":8},"end":{"line":144,"column":9}},"42":{"start":{"line":141,"column":12},"end":{"line":141,"column":70}},"43":{"start":{"line":142,"column":12},"end":{"line":142,"column":81}},"44":{"start":{"line":143,"column":12},"end":{"line":143,"column":107}},"45":{"start":{"line":145,"column":8},"end":{"line":149,"column":11}},"46":{"start":{"line":150,"column":8},"end":{"line":234,"column":9}},"47":{"start":{"line":152,"column":33},"end":{"line":152,"column":72}},"48":{"start":{"line":153,"column":12},"end":{"line":159,"column":13}},"49":{"start":{"line":154,"column":30},"end":{"line":156,"column":63}},"50":{"start":{"line":157,"column":16},"end":{"line":157,"column":41}},"51":{"start":{"line":158,"column":16},"end":{"line":158,"column":39}},"52":{"start":{"line":161,"column":35},"end":{"line":161,"column":80}},"53":{"start":{"line":163,"column":12},"end":{"line":169,"column":15}},"54":{"start":{"line":170,"column":12},"end":{"line":175,"column":13}},"55":{"start":{"line":171,"column":16},"end":{"line":171,"column":92}},"56":{"start":{"line":172,"column":16},"end":{"line":174,"column":19}},"57":{"start":{"line":173,"column":20},"end":{"line":173,"column":75}},"58":{"start":{"line":177,"column":28},"end":{"line":184,"column":13}},"59":{"start":{"line":186,"column":34},"end":{"line":188,"column":72}},"60":{"start":{"line":190,"column":28},"end":{"line":190,"column":38}},"61":{"start":{"line":191,"column":27},"end":{"line":191,"column":98}},"62":{"start":{"line":192,"column":12},"end":{"line":196,"column":15}},"63":{"start":{"line":197,"column":12},"end":{"line":199,"column":13}},"64":{"start":{"line":198,"column":16},"end":{"line":198,"column":95}},"65":{"start":{"line":200,"column":12},"end":{"line":202,"column":13}},"66":{"start":{"line":201,"column":16},"end":{"line":201,"column":39}},"67":{"start":{"line":203,"column":12},"end":{"line":203,"column":26}},"68":{"start":{"line":206,"column":28},"end":{"line":206,"column":38}},"69":{"start":{"line":207,"column":33},"end":{"line":207,"column":46}},"70":{"start":{"line":208,"column":12},"end":{"line":213,"column":15}},"71":{"start":{"line":214,"column":12},"end":{"line":216,"column":13}},"72":{"start":{"line":215,"column":16},"end":{"line":215,"column":82}},"73":{"start":{"line":217,"column":27},"end":{"line":232,"column":13}},"74":{"start":{"line":233,"column":12},"end":{"line":233,"column":26}},"75":{"start":{"line":242,"column":8},"end":{"line":244,"column":9}},"76":{"start":{"line":243,"column":12},"end":{"line":243,"column":73}},"77":{"start":{"line":245,"column":8},"end":{"line":257,"column":9}},"78":{"start":{"line":246,"column":33},"end":{"line":246,"column":70}},"79":{"start":{"line":247,"column":31},"end":{"line":247,"column":66}},"80":{"start":{"line":248,"column":12},"end":{"line":252,"column":13}},"81":{"start":{"line":249,"column":16},"end":{"line":249,"column":98}},"82":{"start":{"line":250,"column":16},"end":{"line":250,"column":87}},"83":{"start":{"line":250,"column":51},"end":{"line":250,"column":85}},"84":{"start":{"line":251,"column":16},"end":{"line":251,"column":89}},"85":{"start":{"line":253,"column":12},"end":{"line":256,"column":13}},"86":{"start":{"line":254,"column":16},"end":{"line":254,"column":90}},"87":{"start":{"line":255,"column":16},"end":{"line":255,"column":92}},"88":{"start":{"line":255,"column":55},"end":{"line":255,"column":90}},"89":{"start":{"line":266,"column":33},"end":{"line":266,"column":66}},"90":{"start":{"line":268,"column":32},"end":{"line":270,"column":30}},"91":{"start":{"line":269,"column":48},"end":{"line":269,"column":77}},"92":{"start":{"line":272,"column":31},"end":{"line":275,"column":10}},"93":{"start":{"line":273,"column":33},"end":{"line":273,"column":58}},"94":{"start":{"line":274,"column":12},"end":{"line":274,"column":66}},"95":{"start":{"line":277,"column":8},"end":{"line":281,"column":11}},"96":{"start":{"line":278,"column":30},"end":{"line":278,"column":65}},"97":{"start":{"line":279,"column":30},"end":{"line":279,"column":65}},"98":{"start":{"line":280,"column":12},"end":{"line":280,"column":41}},"99":{"start":{"line":282,"column":8},"end":{"line":282,"column":30}},"100":{"start":{"line":290,"column":26},"end":{"line":290,"column":35}},"101":{"start":{"line":291,"column":30},"end":{"line":291,"column":39}},"102":{"start":{"line":292,"column":25},"end":{"line":292,"column":34}},"103":{"start":{"line":294,"column":8},"end":{"line":309,"column":11}},"104":{"start":{"line":295,"column":12},"end":{"line":295,"column":45}},"105":{"start":{"line":296,"column":12},"end":{"line":296,"column":39}},"106":{"start":{"line":298,"column":35},"end":{"line":298,"column":41}},"107":{"start":{"line":299,"column":12},"end":{"line":308,"column":13}},"108":{"start":{"line":300,"column":37},"end":{"line":303,"column":45}},"109":{"start":{"line":302,"column":35},"end":{"line":302,"column":62}},"110":{"start":{"line":303,"column":32},"end":{"line":303,"column":44}},"111":{"start":{"line":304,"column":16},"end":{"line":304,"column":59}},"112":{"start":{"line":307,"column":16},"end":{"line":307,"column":49}},"113":{"start":{"line":311,"column":8},"end":{"line":317,"column":11}},"114":{"start":{"line":312,"column":12},"end":{"line":316,"column":15}},"115":{"start":{"line":313,"column":16},"end":{"line":315,"column":17}},"116":{"start":{"line":314,"column":20},"end":{"line":314,"column":78}},"117":{"start":{"line":319,"column":23},"end":{"line":319,"column":25}},"118":{"start":{"line":320,"column":22},"end":{"line":320,"column":24}},"119":{"start":{"line":322,"column":8},"end":{"line":326,"column":11}},"120":{"start":{"line":323,"column":12},"end":{"line":325,"column":13}},"121":{"start":{"line":324,"column":16},"end":{"line":324,"column":37}},"122":{"start":{"line":327,"column":8},"end":{"line":342,"column":9}},"123":{"start":{"line":328,"column":29},"end":{"line":328,"column":42}},"124":{"start":{"line":329,"column":27},"end":{"line":329,"column":50}},"125":{"start":{"line":330,"column":12},"end":{"line":330,"column":32}},"126":{"start":{"line":332,"column":12},"end":{"line":341,"column":15}},"127":{"start":{"line":333,"column":29},"end":{"line":333,"column":58}},"128":{"start":{"line":334,"column":16},"end":{"line":340,"column":17}},"129":{"start":{"line":335,"column":38},"end":{"line":335,"column":67}},"130":{"start":{"line":336,"column":20},"end":{"line":336,"column":50}},"131":{"start":{"line":337,"column":20},"end":{"line":339,"column":21}},"132":{"start":{"line":338,"column":24},"end":{"line":338,"column":41}},"133":{"start":{"line":344,"column":8},"end":{"line":347,"column":9}},"134":{"start":{"line":345,"column":12},"end":{"line":345,"column":94}},"135":{"start":{"line":346,"column":12},"end":{"line":346,"column":27}},"136":{"start":{"line":348,"column":8},"end":{"line":348,"column":22}},"137":{"start":{"line":357,"column":25},"end":{"line":357,"column":61}},"138":{"start":{"line":358,"column":8},"end":{"line":361,"column":9}},"139":{"start":{"line":359,"column":12},"end":{"line":359,"column":70}},"140":{"start":{"line":360,"column":12},"end":{"line":360,"column":53}},"141":{"start":{"line":362,"column":8},"end":{"line":362,"column":52}},"142":{"start":{"line":363,"column":8},"end":{"line":363,"column":70}},"143":{"start":{"line":364,"column":8},"end":{"line":364,"column":24}},"144":{"start":{"line":375,"column":8},"end":{"line":389,"column":9}},"145":{"start":{"line":375,"column":27},"end":{"line":375,"column":28}},"146":{"start":{"line":376,"column":12},"end":{"line":388,"column":13}},"147":{"start":{"line":377,"column":16},"end":{"line":377,"column":41}},"148":{"start":{"line":380,"column":16},"end":{"line":380,"column":34}},"149":{"start":{"line":381,"column":16},"end":{"line":384,"column":17}},"150":{"start":{"line":382,"column":20},"end":{"line":382,"column":113}},"151":{"start":{"line":383,"column":20},"end":{"line":383,"column":36}},"152":{"start":{"line":385,"column":30},"end":{"line":385,"column":142}},"153":{"start":{"line":386,"column":16},"end":{"line":386,"column":154}},"154":{"start":{"line":387,"column":16},"end":{"line":387,"column":40}},"155":{"start":{"line":390,"column":8},"end":{"line":390,"column":24}},"156":{"start":{"line":397,"column":8},"end":{"line":397,"column":63}},"157":{"start":{"line":397,"column":38},"end":{"line":397,"column":61}},"158":{"start":{"line":403,"column":24},"end":{"line":403,"column":26}},"159":{"start":{"line":404,"column":26},"end":{"line":404,"column":62}},"160":{"start":{"line":405,"column":25},"end":{"line":412,"column":10}},"161":{"start":{"line":407,"column":30},"end":{"line":407,"column":52}},"162":{"start":{"line":408,"column":12},"end":{"line":408,"column":39}},"163":{"start":{"line":409,"column":27},"end":{"line":409,"column":70}},"164":{"start":{"line":410,"column":12},"end":{"line":410,"column":33}},"165":{"start":{"line":411,"column":12},"end":{"line":411,"column":26}},"166":{"start":{"line":413,"column":8},"end":{"line":413,"column":36}},"167":{"start":{"line":414,"column":8},"end":{"line":414,"column":85}},"168":{"start":{"line":414,"column":38},"end":{"line":414,"column":83}},"169":{"start":{"line":420,"column":24},"end":{"line":420,"column":26}},"170":{"start":{"line":421,"column":8},"end":{"line":428,"column":9}},"171":{"start":{"line":422,"column":27},"end":{"line":422,"column":70}},"172":{"start":{"line":423,"column":12},"end":{"line":423,"column":33}},"173":{"start":{"line":425,"column":12},"end":{"line":427,"column":13}},"174":{"start":{"line":426,"column":16},"end":{"line":426,"column":22}},"175":{"start":{"line":429,"column":8},"end":{"line":429,"column":23}},"176":{"start":{"line":438,"column":26},"end":{"line":438,"column":36}},"177":{"start":{"line":439,"column":8},"end":{"line":444,"column":11}},"178":{"start":{"line":445,"column":8},"end":{"line":447,"column":9}},"179":{"start":{"line":446,"column":12},"end":{"line":446,"column":63}},"180":{"start":{"line":448,"column":8},"end":{"line":574,"column":9}},"181":{"start":{"line":450,"column":31},"end":{"line":450,"column":160}},"182":{"start":{"line":450,"column":65},"end":{"line":450,"column":124}},"183":{"start":{"line":451,"column":12},"end":{"line":471,"column":13}},"184":{"start":{"line":452,"column":32},"end":{"line":452,"column":42}},"185":{"start":{"line":453,"column":31},"end":{"line":466,"column":17}},"186":{"start":{"line":467,"column":16},"end":{"line":469,"column":17}},"187":{"start":{"line":468,"column":20},"end":{"line":468,"column":97}},"188":{"start":{"line":470,"column":16},"end":{"line":470,"column":30}},"189":{"start":{"line":473,"column":34},"end":{"line":476,"column":13}},"190":{"start":{"line":478,"column":33},"end":{"line":481,"column":14}},"191":{"start":{"line":479,"column":44},"end":{"line":479,"column":73}},"192":{"start":{"line":482,"column":28},"end":{"line":482,"column":38}},"193":{"start":{"line":483,"column":27},"end":{"line":491,"column":13}},"194":{"start":{"line":493,"column":12},"end":{"line":502,"column":13}},"195":{"start":{"line":494,"column":16},"end":{"line":501,"column":19}},"196":{"start":{"line":495,"column":20},"end":{"line":500,"column":23}},"197":{"start":{"line":503,"column":12},"end":{"line":509,"column":13}},"198":{"start":{"line":504,"column":35},"end":{"line":504,"column":74}},"199":{"start":{"line":505,"column":16},"end":{"line":505,"column":110}},"200":{"start":{"line":506,"column":16},"end":{"line":508,"column":17}},"201":{"start":{"line":507,"column":20},"end":{"line":507,"column":88}},"202":{"start":{"line":510,"column":12},"end":{"line":515,"column":15}},"203":{"start":{"line":516,"column":12},"end":{"line":516,"column":26}},"204":{"start":{"line":519,"column":28},"end":{"line":519,"column":38}},"205":{"start":{"line":520,"column":33},"end":{"line":520,"column":46}},"206":{"start":{"line":521,"column":12},"end":{"line":525,"column":15}},"207":{"start":{"line":526,"column":32},"end":{"line":552,"column":13}},"208":{"start":{"line":553,"column":12},"end":{"line":555,"column":13}},"209":{"start":{"line":554,"column":16},"end":{"line":554,"column":78}},"210":{"start":{"line":556,"column":12},"end":{"line":561,"column":15}},"211":{"start":{"line":562,"column":12},"end":{"line":562,"column":31}},"212":{"start":{"line":566,"column":12},"end":{"line":573,"column":13}},"213":{"start":{"line":567,"column":16},"end":{"line":569,"column":17}},"214":{"start":{"line":568,"column":20},"end":{"line":568,"column":50}},"215":{"start":{"line":572,"column":16},"end":{"line":572,"column":104}},"216":{"start":{"line":580,"column":8},"end":{"line":584,"column":11}},"217":{"start":{"line":581,"column":12},"end":{"line":583,"column":26}},"218":{"start":{"line":582,"column":16},"end":{"line":582,"column":91}},"219":{"start":{"line":590,"column":28},"end":{"line":590,"column":115}},"220":{"start":{"line":590,"column":66},"end":{"line":590,"column":111}},"221":{"start":{"line":591,"column":23},"end":{"line":591,"column":99}},"222":{"start":{"line":591,"column":49},"end":{"line":591,"column":91}},"223":{"start":{"line":592,"column":23},"end":{"line":592,"column":99}},"224":{"start":{"line":592,"column":49},"end":{"line":592,"column":91}},"225":{"start":{"line":593,"column":25},"end":{"line":593,"column":104}},"226":{"start":{"line":593,"column":51},"end":{"line":593,"column":96}},"227":{"start":{"line":594,"column":24},"end":{"line":594,"column":103}},"228":{"start":{"line":594,"column":50},"end":{"line":594,"column":95}},"229":{"start":{"line":596,"column":28},"end":{"line":596,"column":57}},"230":{"start":{"line":597,"column":8},"end":{"line":602,"column":9}},"231":{"start":{"line":598,"column":12},"end":{"line":598,"column":58}},"232":{"start":{"line":600,"column":13},"end":{"line":602,"column":9}},"233":{"start":{"line":601,"column":12},"end":{"line":601,"column":61}},"234":{"start":{"line":603,"column":8},"end":{"line":618,"column":10}},"235":{"start":{"line":624,"column":8},"end":{"line":635,"column":9}},"236":{"start":{"line":626,"column":16},"end":{"line":626,"column":27}},"237":{"start":{"line":628,"column":16},"end":{"line":628,"column":27}},"238":{"start":{"line":630,"column":16},"end":{"line":630,"column":28}},"239":{"start":{"line":632,"column":16},"end":{"line":632,"column":28}},"240":{"start":{"line":634,"column":16},"end":{"line":634,"column":27}},"241":{"start":{"line":642,"column":8},"end":{"line":642,"column":28}},"242":{"start":{"line":649,"column":8},"end":{"line":653,"column":10}},"243":{"start":{"line":659,"column":8},"end":{"line":659,"column":36}},"244":{"start":{"line":660,"column":8},"end":{"line":660,"column":53}},"245":{"start":{"line":667,"column":8},"end":{"line":667,"column":29}},"246":{"start":{"line":673,"column":8},"end":{"line":673,"column":29}},"247":{"start":{"line":674,"column":8},"end":{"line":674,"column":39}},"248":{"start":{"line":675,"column":8},"end":{"line":675,"column":36}},"249":{"start":{"line":676,"column":8},"end":{"line":676,"column":59}},"250":{"start":{"line":679,"column":0},"end":{"line":679,"column":58}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":24},"end":{"line":33,"column":5}},"line":21},"1":{"name":"(anonymous_1)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":26},"end":{"line":52,"column":5}},"line":37},"2":{"name":"(anonymous_2)","decl":{"start":{"line":39,"column":19},"end":{"line":39,"column":20}},"loc":{"start":{"line":39,"column":41},"end":{"line":41,"column":13}},"line":39},"3":{"name":"(anonymous_3)","decl":{"start":{"line":42,"column":18},"end":{"line":42,"column":19}},"loc":{"start":{"line":42,"column":40},"end":{"line":44,"column":13}},"line":42},"4":{"name":"(anonymous_4)","decl":{"start":{"line":45,"column":18},"end":{"line":45,"column":19}},"loc":{"start":{"line":45,"column":40},"end":{"line":47,"column":13}},"line":45},"5":{"name":"(anonymous_5)","decl":{"start":{"line":48,"column":19},"end":{"line":48,"column":20}},"loc":{"start":{"line":48,"column":41},"end":{"line":50,"column":13}},"line":48},"6":{"name":"(anonymous_6)","decl":{"start":{"line":58,"column":4},"end":{"line":58,"column":5}},"loc":{"start":{"line":58,"column":27},"end":{"line":66,"column":5}},"line":58},"7":{"name":"(anonymous_7)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":31},"end":{"line":80,"column":5}},"line":72},"8":{"name":"(anonymous_8)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":18},"end":{"line":87,"column":5}},"line":85},"9":{"name":"(anonymous_9)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":24},"end":{"line":95,"column":5}},"line":93},"10":{"name":"(anonymous_10)","decl":{"start":{"line":100,"column":4},"end":{"line":100,"column":5}},"loc":{"start":{"line":100,"column":31},"end":{"line":103,"column":5}},"line":100},"11":{"name":"(anonymous_11)","decl":{"start":{"line":108,"column":4},"end":{"line":108,"column":5}},"loc":{"start":{"line":108,"column":34},"end":{"line":114,"column":5}},"line":108},"12":{"name":"(anonymous_12)","decl":{"start":{"line":119,"column":4},"end":{"line":119,"column":5}},"loc":{"start":{"line":119,"column":21},"end":{"line":128,"column":5}},"line":119},"13":{"name":"(anonymous_13)","decl":{"start":{"line":120,"column":36},"end":{"line":120,"column":37}},"loc":{"start":{"line":120,"column":48},"end":{"line":127,"column":9}},"line":120},"14":{"name":"(anonymous_14)","decl":{"start":{"line":138,"column":4},"end":{"line":138,"column":5}},"loc":{"start":{"line":138,"column":78},"end":{"line":235,"column":5}},"line":138},"15":{"name":"(anonymous_15)","decl":{"start":{"line":172,"column":39},"end":{"line":172,"column":40}},"loc":{"start":{"line":172,"column":49},"end":{"line":174,"column":17}},"line":172},"16":{"name":"(anonymous_16)","decl":{"start":{"line":241,"column":4},"end":{"line":241,"column":5}},"loc":{"start":{"line":241,"column":57},"end":{"line":258,"column":5}},"line":241},"17":{"name":"(anonymous_17)","decl":{"start":{"line":250,"column":42},"end":{"line":250,"column":43}},"loc":{"start":{"line":250,"column":51},"end":{"line":250,"column":85}},"line":250},"18":{"name":"(anonymous_18)","decl":{"start":{"line":255,"column":44},"end":{"line":255,"column":45}},"loc":{"start":{"line":255,"column":55},"end":{"line":255,"column":90}},"line":255},"19":{"name":"(anonymous_19)","decl":{"start":{"line":265,"column":4},"end":{"line":265,"column":5}},"loc":{"start":{"line":265,"column":39},"end":{"line":283,"column":5}},"line":265},"20":{"name":"(anonymous_20)","decl":{"start":{"line":269,"column":38},"end":{"line":269,"column":39}},"loc":{"start":{"line":269,"column":48},"end":{"line":269,"column":77}},"line":269},"21":{"name":"(anonymous_21)","decl":{"start":{"line":272,"column":54},"end":{"line":272,"column":55}},"loc":{"start":{"line":272,"column":64},"end":{"line":275,"column":9}},"line":272},"22":{"name":"(anonymous_22)","decl":{"start":{"line":277,"column":28},"end":{"line":277,"column":29}},"loc":{"start":{"line":277,"column":38},"end":{"line":281,"column":9}},"line":277},"23":{"name":"(anonymous_23)","decl":{"start":{"line":289,"column":4},"end":{"line":289,"column":5}},"loc":{"start":{"line":289,"column":40},"end":{"line":349,"column":5}},"line":289},"24":{"name":"(anonymous_24)","decl":{"start":{"line":294,"column":24},"end":{"line":294,"column":25}},"loc":{"start":{"line":294,"column":34},"end":{"line":309,"column":9}},"line":294},"25":{"name":"(anonymous_25)","decl":{"start":{"line":302,"column":28},"end":{"line":302,"column":29}},"loc":{"start":{"line":302,"column":35},"end":{"line":302,"column":62}},"line":302},"26":{"name":"(anonymous_26)","decl":{"start":{"line":303,"column":25},"end":{"line":303,"column":26}},"loc":{"start":{"line":303,"column":32},"end":{"line":303,"column":44}},"line":303},"27":{"name":"(anonymous_27)","decl":{"start":{"line":311,"column":30},"end":{"line":311,"column":31}},"loc":{"start":{"line":311,"column":58},"end":{"line":317,"column":9}},"line":311},"28":{"name":"(anonymous_28)","decl":{"start":{"line":312,"column":33},"end":{"line":312,"column":34}},"loc":{"start":{"line":312,"column":42},"end":{"line":316,"column":13}},"line":312},"29":{"name":"(anonymous_29)","decl":{"start":{"line":322,"column":25},"end":{"line":322,"column":26}},"loc":{"start":{"line":322,"column":47},"end":{"line":326,"column":9}},"line":322},"30":{"name":"(anonymous_30)","decl":{"start":{"line":332,"column":28},"end":{"line":332,"column":29}},"loc":{"start":{"line":332,"column":33},"end":{"line":341,"column":13}},"line":332},"31":{"name":"(anonymous_31)","decl":{"start":{"line":356,"column":4},"end":{"line":356,"column":5}},"loc":{"start":{"line":356,"column":43},"end":{"line":365,"column":5}},"line":356},"32":{"name":"(anonymous_32)","decl":{"start":{"line":373,"column":4},"end":{"line":373,"column":5}},"loc":{"start":{"line":373,"column":92},"end":{"line":391,"column":5}},"line":373},"33":{"name":"(anonymous_33)","decl":{"start":{"line":396,"column":4},"end":{"line":396,"column":5}},"loc":{"start":{"line":396,"column":14},"end":{"line":398,"column":5}},"line":396},"34":{"name":"(anonymous_34)","decl":{"start":{"line":397,"column":27},"end":{"line":397,"column":28}},"loc":{"start":{"line":397,"column":38},"end":{"line":397,"column":61}},"line":397},"35":{"name":"(anonymous_35)","decl":{"start":{"line":402,"column":4},"end":{"line":402,"column":5}},"loc":{"start":{"line":402,"column":63},"end":{"line":415,"column":5}},"line":402},"36":{"name":"(anonymous_36)","decl":{"start":{"line":405,"column":37},"end":{"line":405,"column":38}},"loc":{"start":{"line":405,"column":62},"end":{"line":412,"column":9}},"line":405},"37":{"name":"(anonymous_37)","decl":{"start":{"line":414,"column":28},"end":{"line":414,"column":29}},"loc":{"start":{"line":414,"column":38},"end":{"line":414,"column":83}},"line":414},"38":{"name":"(anonymous_38)","decl":{"start":{"line":419,"column":4},"end":{"line":419,"column":5}},"loc":{"start":{"line":419,"column":49},"end":{"line":430,"column":5}},"line":419},"39":{"name":"(anonymous_39)","decl":{"start":{"line":437,"column":4},"end":{"line":437,"column":5}},"loc":{"start":{"line":437,"column":43},"end":{"line":575,"column":5}},"line":437},"40":{"name":"(anonymous_40)","decl":{"start":{"line":450,"column":59},"end":{"line":450,"column":60}},"loc":{"start":{"line":450,"column":65},"end":{"line":450,"column":124}},"line":450},"41":{"name":"(anonymous_41)","decl":{"start":{"line":479,"column":38},"end":{"line":479,"column":39}},"loc":{"start":{"line":479,"column":44},"end":{"line":479,"column":73}},"line":479},"42":{"name":"(anonymous_42)","decl":{"start":{"line":494,"column":44},"end":{"line":494,"column":45}},"loc":{"start":{"line":494,"column":53},"end":{"line":501,"column":17}},"line":494},"43":{"name":"(anonymous_43)","decl":{"start":{"line":579,"column":4},"end":{"line":579,"column":5}},"loc":{"start":{"line":579,"column":48},"end":{"line":585,"column":5}},"line":579},"44":{"name":"(anonymous_44)","decl":{"start":{"line":580,"column":27},"end":{"line":580,"column":28}},"loc":{"start":{"line":580,"column":42},"end":{"line":584,"column":9}},"line":580},"45":{"name":"(anonymous_45)","decl":{"start":{"line":581,"column":23},"end":{"line":581,"column":24}},"loc":{"start":{"line":581,"column":29},"end":{"line":583,"column":13}},"line":581},"46":{"name":"(anonymous_46)","decl":{"start":{"line":589,"column":4},"end":{"line":589,"column":5}},"loc":{"start":{"line":589,"column":71},"end":{"line":619,"column":5}},"line":589},"47":{"name":"(anonymous_47)","decl":{"start":{"line":590,"column":49},"end":{"line":590,"column":50}},"loc":{"start":{"line":590,"column":66},"end":{"line":590,"column":111}},"line":590},"48":{"name":"(anonymous_48)","decl":{"start":{"line":591,"column":44},"end":{"line":591,"column":45}},"loc":{"start":{"line":591,"column":49},"end":{"line":591,"column":91}},"line":591},"49":{"name":"(anonymous_49)","decl":{"start":{"line":592,"column":44},"end":{"line":592,"column":45}},"loc":{"start":{"line":592,"column":49},"end":{"line":592,"column":91}},"line":592},"50":{"name":"(anonymous_50)","decl":{"start":{"line":593,"column":46},"end":{"line":593,"column":47}},"loc":{"start":{"line":593,"column":51},"end":{"line":593,"column":96}},"line":593},"51":{"name":"(anonymous_51)","decl":{"start":{"line":594,"column":45},"end":{"line":594,"column":46}},"loc":{"start":{"line":594,"column":50},"end":{"line":594,"column":95}},"line":594},"52":{"name":"(anonymous_52)","decl":{"start":{"line":623,"column":4},"end":{"line":623,"column":5}},"loc":{"start":{"line":623,"column":26},"end":{"line":636,"column":5}},"line":623},"53":{"name":"(anonymous_53)","decl":{"start":{"line":641,"column":4},"end":{"line":641,"column":5}},"loc":{"start":{"line":641,"column":17},"end":{"line":643,"column":5}},"line":641},"54":{"name":"(anonymous_54)","decl":{"start":{"line":648,"column":4},"end":{"line":648,"column":5}},"loc":{"start":{"line":648,"column":20},"end":{"line":654,"column":5}},"line":648},"55":{"name":"(anonymous_55)","decl":{"start":{"line":658,"column":4},"end":{"line":658,"column":5}},"loc":{"start":{"line":658,"column":25},"end":{"line":661,"column":5}},"line":658},"56":{"name":"(anonymous_56)","decl":{"start":{"line":666,"column":4},"end":{"line":666,"column":5}},"loc":{"start":{"line":666,"column":22},"end":{"line":668,"column":5}},"line":666},"57":{"name":"(anonymous_57)","decl":{"start":{"line":672,"column":4},"end":{"line":672,"column":5}},"loc":{"start":{"line":672,"column":12},"end":{"line":677,"column":5}},"line":672}},"branchMap":{"0":{"loc":{"start":{"line":32,"column":22},"end":{"line":32,"column":58}},"type":"binary-expr","locations":[{"start":{"line":32,"column":22},"end":{"line":32,"column":28}},{"start":{"line":32,"column":32},"end":{"line":32,"column":58}}],"line":32},"1":{"loc":{"start":{"line":59,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":63,"column":9}},{"start":{},"end":{}}],"line":59},"2":{"loc":{"start":{"line":73,"column":8},"end":{"line":76,"column":9}},"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":76,"column":9}},{"start":{},"end":{}}],"line":73},"3":{"loc":{"start":{"line":110,"column":8},"end":{"line":113,"column":9}},"type":"if","locations":[{"start":{"line":110,"column":8},"end":{"line":113,"column":9}},{"start":{},"end":{}}],"line":110},"4":{"loc":{"start":{"line":140,"column":8},"end":{"line":144,"column":9}},"type":"if","locations":[{"start":{"line":140,"column":8},"end":{"line":144,"column":9}},{"start":{},"end":{}}],"line":140},"5":{"loc":{"start":{"line":153,"column":12},"end":{"line":159,"column":13}},"type":"if","locations":[{"start":{"line":153,"column":12},"end":{"line":159,"column":13}},{"start":{},"end":{}}],"line":153},"6":{"loc":{"start":{"line":154,"column":30},"end":{"line":156,"column":63}},"type":"cond-expr","locations":[{"start":{"line":155,"column":22},"end":{"line":155,"column":75}},{"start":{"line":156,"column":22},"end":{"line":156,"column":63}}],"line":154},"7":{"loc":{"start":{"line":170,"column":12},"end":{"line":175,"column":13}},"type":"if","locations":[{"start":{"line":170,"column":12},"end":{"line":175,"column":13}},{"start":{},"end":{}}],"line":170},"8":{"loc":{"start":{"line":181,"column":30},"end":{"line":181,"column":50}},"type":"binary-expr","locations":[{"start":{"line":181,"column":30},"end":{"line":181,"column":44}},{"start":{"line":181,"column":48},"end":{"line":181,"column":50}}],"line":181},"9":{"loc":{"start":{"line":186,"column":34},"end":{"line":188,"column":72}},"type":"cond-expr","locations":[{"start":{"line":187,"column":18},"end":{"line":187,"column":103}},{"start":{"line":188,"column":18},"end":{"line":188,"column":72}}],"line":186},"10":{"loc":{"start":{"line":197,"column":12},"end":{"line":199,"column":13}},"type":"if","locations":[{"start":{"line":197,"column":12},"end":{"line":199,"column":13}},{"start":{},"end":{}}],"line":197},"11":{"loc":{"start":{"line":200,"column":12},"end":{"line":202,"column":13}},"type":"if","locations":[{"start":{"line":200,"column":12},"end":{"line":202,"column":13}},{"start":{},"end":{}}],"line":200},"12":{"loc":{"start":{"line":214,"column":12},"end":{"line":216,"column":13}},"type":"if","locations":[{"start":{"line":214,"column":12},"end":{"line":216,"column":13}},{"start":{},"end":{}}],"line":214},"13":{"loc":{"start":{"line":242,"column":8},"end":{"line":244,"column":9}},"type":"if","locations":[{"start":{"line":242,"column":8},"end":{"line":244,"column":9}},{"start":{},"end":{}}],"line":242},"14":{"loc":{"start":{"line":246,"column":33},"end":{"line":246,"column":70}},"type":"binary-expr","locations":[{"start":{"line":246,"column":33},"end":{"line":246,"column":64}},{"start":{"line":246,"column":68},"end":{"line":246,"column":70}}],"line":246},"15":{"loc":{"start":{"line":248,"column":12},"end":{"line":252,"column":13}},"type":"if","locations":[{"start":{"line":248,"column":12},"end":{"line":252,"column":13}},{"start":{},"end":{}}],"line":248},"16":{"loc":{"start":{"line":253,"column":12},"end":{"line":256,"column":13}},"type":"if","locations":[{"start":{"line":253,"column":12},"end":{"line":256,"column":13}},{"start":{},"end":{}}],"line":253},"17":{"loc":{"start":{"line":253,"column":16},"end":{"line":253,"column":65}},"type":"binary-expr","locations":[{"start":{"line":253,"column":16},"end":{"line":253,"column":46}},{"start":{"line":253,"column":50},"end":{"line":253,"column":65}}],"line":253},"18":{"loc":{"start":{"line":268,"column":32},"end":{"line":270,"column":30}},"type":"cond-expr","locations":[{"start":{"line":269,"column":14},"end":{"line":269,"column":78}},{"start":{"line":270,"column":14},"end":{"line":270,"column":30}}],"line":268},"19":{"loc":{"start":{"line":274,"column":19},"end":{"line":274,"column":65}},"type":"binary-expr","locations":[{"start":{"line":274,"column":19},"end":{"line":274,"column":31}},{"start":{"line":274,"column":35},"end":{"line":274,"column":65}}],"line":274},"20":{"loc":{"start":{"line":278,"column":30},"end":{"line":278,"column":65}},"type":"binary-expr","locations":[{"start":{"line":278,"column":30},"end":{"line":278,"column":60}},{"start":{"line":278,"column":64},"end":{"line":278,"column":65}}],"line":278},"21":{"loc":{"start":{"line":279,"column":30},"end":{"line":279,"column":65}},"type":"binary-expr","locations":[{"start":{"line":279,"column":30},"end":{"line":279,"column":60}},{"start":{"line":279,"column":64},"end":{"line":279,"column":65}}],"line":279},"22":{"loc":{"start":{"line":299,"column":12},"end":{"line":308,"column":13}},"type":"if","locations":[{"start":{"line":299,"column":12},"end":{"line":308,"column":13}},{"start":{"line":306,"column":17},"end":{"line":308,"column":13}}],"line":299},"23":{"loc":{"start":{"line":313,"column":16},"end":{"line":315,"column":17}},"type":"if","locations":[{"start":{"line":313,"column":16},"end":{"line":315,"column":17}},{"start":{},"end":{}}],"line":313},"24":{"loc":{"start":{"line":314,"column":44},"end":{"line":314,"column":71}},"type":"binary-expr","locations":[{"start":{"line":314,"column":44},"end":{"line":314,"column":66}},{"start":{"line":314,"column":70},"end":{"line":314,"column":71}}],"line":314},"25":{"loc":{"start":{"line":323,"column":12},"end":{"line":325,"column":13}},"type":"if","locations":[{"start":{"line":323,"column":12},"end":{"line":325,"column":13}},{"start":{},"end":{}}],"line":323},"26":{"loc":{"start":{"line":333,"column":29},"end":{"line":333,"column":58}},"type":"binary-expr","locations":[{"start":{"line":333,"column":29},"end":{"line":333,"column":52}},{"start":{"line":333,"column":56},"end":{"line":333,"column":58}}],"line":333},"27":{"loc":{"start":{"line":334,"column":16},"end":{"line":340,"column":17}},"type":"if","locations":[{"start":{"line":334,"column":16},"end":{"line":340,"column":17}},{"start":{},"end":{}}],"line":334},"28":{"loc":{"start":{"line":335,"column":39},"end":{"line":335,"column":62}},"type":"binary-expr","locations":[{"start":{"line":335,"column":39},"end":{"line":335,"column":57}},{"start":{"line":335,"column":61},"end":{"line":335,"column":62}}],"line":335},"29":{"loc":{"start":{"line":337,"column":20},"end":{"line":339,"column":21}},"type":"if","locations":[{"start":{"line":337,"column":20},"end":{"line":339,"column":21}},{"start":{},"end":{}}],"line":337},"30":{"loc":{"start":{"line":344,"column":8},"end":{"line":347,"column":9}},"type":"if","locations":[{"start":{"line":344,"column":8},"end":{"line":347,"column":9}},{"start":{},"end":{}}],"line":344},"31":{"loc":{"start":{"line":358,"column":8},"end":{"line":361,"column":9}},"type":"if","locations":[{"start":{"line":358,"column":8},"end":{"line":361,"column":9}},{"start":{},"end":{}}],"line":358},"32":{"loc":{"start":{"line":373,"column":53},"end":{"line":373,"column":90}},"type":"default-arg","locations":[{"start":{"line":373,"column":67},"end":{"line":373,"column":90}}],"line":373},"33":{"loc":{"start":{"line":381,"column":16},"end":{"line":384,"column":17}},"type":"if","locations":[{"start":{"line":381,"column":16},"end":{"line":384,"column":17}},{"start":{},"end":{}}],"line":381},"34":{"loc":{"start":{"line":425,"column":12},"end":{"line":427,"column":13}},"type":"if","locations":[{"start":{"line":425,"column":12},"end":{"line":427,"column":13}},{"start":{},"end":{}}],"line":425},"35":{"loc":{"start":{"line":425,"column":16},"end":{"line":425,"column":100}},"type":"binary-expr","locations":[{"start":{"line":425,"column":16},"end":{"line":425,"column":49}},{"start":{"line":425,"column":53},"end":{"line":425,"column":100}}],"line":425},"36":{"loc":{"start":{"line":445,"column":8},"end":{"line":447,"column":9}},"type":"if","locations":[{"start":{"line":445,"column":8},"end":{"line":447,"column":9}},{"start":{},"end":{}}],"line":445},"37":{"loc":{"start":{"line":451,"column":12},"end":{"line":471,"column":13}},"type":"if","locations":[{"start":{"line":451,"column":12},"end":{"line":471,"column":13}},{"start":{},"end":{}}],"line":451},"38":{"loc":{"start":{"line":467,"column":16},"end":{"line":469,"column":17}},"type":"if","locations":[{"start":{"line":467,"column":16},"end":{"line":469,"column":17}},{"start":{},"end":{}}],"line":467},"39":{"loc":{"start":{"line":475,"column":30},"end":{"line":475,"column":67}},"type":"binary-expr","locations":[{"start":{"line":475,"column":30},"end":{"line":475,"column":61}},{"start":{"line":475,"column":65},"end":{"line":475,"column":67}}],"line":475},"40":{"loc":{"start":{"line":493,"column":12},"end":{"line":502,"column":13}},"type":"if","locations":[{"start":{"line":493,"column":12},"end":{"line":502,"column":13}},{"start":{},"end":{}}],"line":493},"41":{"loc":{"start":{"line":503,"column":12},"end":{"line":509,"column":13}},"type":"if","locations":[{"start":{"line":503,"column":12},"end":{"line":509,"column":13}},{"start":{},"end":{}}],"line":503},"42":{"loc":{"start":{"line":506,"column":16},"end":{"line":508,"column":17}},"type":"if","locations":[{"start":{"line":506,"column":16},"end":{"line":508,"column":17}},{"start":{},"end":{}}],"line":506},"43":{"loc":{"start":{"line":553,"column":12},"end":{"line":555,"column":13}},"type":"if","locations":[{"start":{"line":553,"column":12},"end":{"line":555,"column":13}},{"start":{},"end":{}}],"line":553},"44":{"loc":{"start":{"line":567,"column":16},"end":{"line":569,"column":17}},"type":"if","locations":[{"start":{"line":567,"column":16},"end":{"line":569,"column":17}},{"start":{},"end":{}}],"line":567},"45":{"loc":{"start":{"line":590,"column":73},"end":{"line":590,"column":106}},"type":"binary-expr","locations":[{"start":{"line":590,"column":73},"end":{"line":590,"column":101}},{"start":{"line":590,"column":105},"end":{"line":590,"column":106}}],"line":590},"46":{"loc":{"start":{"line":597,"column":8},"end":{"line":602,"column":9}},"type":"if","locations":[{"start":{"line":597,"column":8},"end":{"line":602,"column":9}},{"start":{"line":600,"column":13},"end":{"line":602,"column":9}}],"line":597},"47":{"loc":{"start":{"line":600,"column":13},"end":{"line":602,"column":9}},"type":"if","locations":[{"start":{"line":600,"column":13},"end":{"line":602,"column":9}},{"start":{},"end":{}}],"line":600},"48":{"loc":{"start":{"line":624,"column":8},"end":{"line":635,"column":9}},"type":"switch","locations":[{"start":{"line":625,"column":12},"end":{"line":626,"column":27}},{"start":{"line":627,"column":12},"end":{"line":628,"column":27}},{"start":{"line":629,"column":12},"end":{"line":630,"column":28}},{"start":{"line":631,"column":12},"end":{"line":632,"column":28}},{"start":{"line":633,"column":12},"end":{"line":634,"column":27}}],"line":624}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":3,"7":3,"8":3,"9":3,"10":3,"11":3,"12":0,"13":15,"14":0,"15":0,"16":15,"17":0,"18":0,"19":0,"20":15,"21":15,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":2,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":1},"f":{"0":3,"1":3,"2":0,"3":15,"4":0,"5":0,"6":15,"7":0,"8":2,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0},"b":{"0":[3,3],"1":[0,15],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0,0,0,0]},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/core/DiamondMonitoringSystem.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/core/DiamondMonitoringSystem.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Main Diamond Monitoring System for Hardhat Plugin\n *\n * Orchestrates monitoring modules and manages the overall monitoring process\n * within the Hardhat environment.\n */\n\nimport { Provider } from 'ethers';\nimport chalk from 'chalk';\n\nimport {\n  MonitoringModule,\n  MonitoringConfig,\n  MonitoringReport,\n  MonitoringContext,\n  MonitoringStatus,\n  ModuleResult,\n  DiamondInfo,\n  NetworkInfo,\n  MonitoringEvent,\n  MonitoringEventListener,\n  SeverityLevel,\n  Logger,\n  RetryConfig,\n  ModuleDependency,\n  MonitoringModuleWithDeps,\n} from './types';\n\n/**\n * Main orchestration engine for diamond monitoring\n */\nexport class DiamondMonitoringSystem {\n  private modules: Map<string, MonitoringModule> = new Map();\n  private eventListeners: MonitoringEventListener[] = [];\n  private logger: Logger;\n  private readonly version = '1.0.0';\n  private connectionPool: Map<string, Provider> = new Map();\n  private readonly defaultRetryConfig: RetryConfig = {\n    maxAttempts: 3,\n    baseDelayMs: 1000,\n    maxDelayMs: 10000,\n    backoffMultiplier: 2,\n  };\n\n  /**\n   * Initialize the monitoring system\n   * @param logger - Optional logger instance, defaults to console logger\n   */\n  constructor(logger?: Logger) {\n    this.logger = logger || this.createDefaultLogger();\n  }\n\n  /**\n   * Create a default console logger\n   */\n  private createDefaultLogger(): Logger {\n    return {\n      debug: (message: string, ...args: any[]) => {\n        console.debug(chalk.gray(`[DEBUG] ${message}`), ...args);\n      },\n      info: (message: string, ...args: any[]) => {\n        console.info(chalk.blue(`[INFO] ${message}`), ...args);\n      },\n      warn: (message: string, ...args: any[]) => {\n        console.warn(chalk.yellow(`[WARN] ${message}`), ...args);\n      },\n      error: (message: string, ...args: any[]) => {\n        console.error(chalk.red(`[ERROR] ${message}`), ...args);\n      },\n    };\n  }\n\n  /**\n   * Register a monitoring module\n   * @param module - The monitoring module to register\n   * @throws Error if module ID is already registered\n   */\n  public registerModule(module: MonitoringModule): void {\n    if (this.modules.has(module.id)) {\n      const error = `Module with ID '${module.id}' is already registered`;\n      this.logger.error(error);\n      throw new Error(error);\n    }\n\n    this.modules.set(module.id, module);\n    this.logger.info(`Registered module: ${module.name} (${module.id})`);\n  }\n\n  /**\n   * Unregister a monitoring module\n   * @param moduleId - The ID of the module to unregister\n   * @returns true if module was unregistered, false if module was not found\n   */\n  public unregisterModule(moduleId: string): boolean {\n    if (!this.modules.has(moduleId)) {\n      this.logger.warn(`Module with ID '${moduleId}' is not registered`);\n      return false;\n    }\n\n    this.modules.delete(moduleId);\n    this.logger.info(`Unregistered module: ${moduleId}`);\n    return true;\n  }\n\n  /**\n   * List all registered modules\n   * @returns Array of all registered monitoring modules\n   */\n  public listModules(): MonitoringModule[] {\n    return Array.from(this.modules.values());\n  }\n\n  /**\n   * Get a specific module by ID\n   * @param moduleId - The ID of the module to retrieve\n   * @returns The module if found, undefined otherwise\n   */\n  public getModule(moduleId: string): MonitoringModule | undefined {\n    return this.modules.get(moduleId);\n  }\n\n  /**\n   * Add event listener for monitoring events\n   * @param listener - Event listener function\n   */\n  public addEventListener(listener: MonitoringEventListener): void {\n    this.eventListeners.push(listener);\n    this.logger.debug('Added event listener');\n  }\n\n  /**\n   * Remove event listener\n   * @param listener - Event listener function to remove\n   */\n  public removeEventListener(listener: MonitoringEventListener): void {\n    const index = this.eventListeners.indexOf(listener);\n    if (index !== -1) {\n      this.eventListeners.splice(index, 1);\n      this.logger.debug('Removed event listener');\n    }\n  }\n\n  /**\n   * Emit event to all listeners\n   * @param event - The monitoring event to emit\n   */\n  public emitEvent(event: MonitoringEvent): void {\n    this.eventListeners.forEach(listener => {\n      try {\n        listener(event);\n      } catch (error) {\n        this.logger.error(`Error in event listener: ${(error as Error).message}`);\n      }\n    });\n  }\n\n  /**\n   * Run monitoring with specified configuration\n   * @param diamond - Diamond information\n   * @param provider - Ethereum provider\n   * @param config - Monitoring configuration\n   * @param moduleIds - Optional array of specific module IDs to run\n   * @param reportCallback - Optional callback for progress reporting\n   * @returns Complete monitoring report\n   */\n  public async runMonitoring(\n    diamond: DiamondInfo,\n    provider: Provider,\n    config: MonitoringConfig,\n    moduleIds?: string[],\n    reportCallback?: (report: MonitoringReport) => void\n  ): Promise<MonitoringReport> {\n    const startTime = Date.now();\n\n    if (config.reporting.verbose) {\n      this.logger.info('🔍 Starting Diamond Monitoring System');\n      this.logger.info(`📍 Diamond: ${diamond.name} (${diamond.address})`);\n      this.logger.info(\n        `🌐 Network: ${diamond.network.name} (Chain ID: ${diamond.network.chainId})`\n      );\n    }\n\n    this.emitEvent({\n      type: 'monitoring_start',\n      timestamp: new Date(),\n      data: { diamond, config },\n    });\n\n    try {\n      // Get modules to run based on configuration and optional filter\n      const modulesToRun = this.getModulesToRun(config, moduleIds);\n\n      if (modulesToRun.length === 0) {\n        const error = moduleIds\n          ? `No specified modules found: ${moduleIds.join(', ')}`\n          : 'No monitoring modules configured to run';\n        this.logger.error(error);\n        throw new Error(error);\n      }\n\n      // Order modules by dependencies\n      const orderedModules = this.orderModulesByDependencies(modulesToRun);\n\n      // Validate configurations for all modules\n      await this.validateModuleConfigurations(orderedModules, {\n        diamond,\n        provider: this.getOrCreateProvider(provider, diamond.network),\n        config,\n        moduleConfig: {},\n        hre: (config as any).hre,\n      } as MonitoringContext);\n\n      if (config.reporting.verbose) {\n        this.logger.info(`🧪 Running ${orderedModules.length} monitoring modules:`);\n        orderedModules.forEach(module => {\n          this.logger.info(`   • ${module.name} (${module.id})`);\n        });\n      }\n\n      // Create monitoring context\n      const context: MonitoringContext = {\n        diamond,\n        provider,\n        config,\n        moduleConfig: config.modules || {},\n        hre: (config as any).hre,\n        verbose: config.reporting.verbose,\n      };\n\n      // Execute modules\n      const moduleResults = config.execution.parallelExecution\n        ? await this.runModulesParallel(modulesToRun, context, config.execution.maxConcurrency)\n        : await this.runModulesSequential(modulesToRun, context);\n\n      // Generate final report\n      const endTime = Date.now();\n      const report = this.generateReport(moduleResults, diamond, config, startTime, endTime);\n\n      this.emitEvent({\n        type: 'monitoring_complete',\n        timestamp: new Date(),\n        data: { report },\n      });\n\n      if (config.reporting.verbose) {\n        this.logger.info(`✅ Diamond monitoring completed in ${endTime - startTime}ms`);\n      }\n\n      if (reportCallback) {\n        reportCallback(report);\n      }\n\n      return report;\n    } catch (error) {\n      const endTime = Date.now();\n      const errorMessage = (error as Error).message;\n\n      this.logger.error(`❌ Diamond monitoring failed: ${errorMessage}`, {\n        diamond: diamond.name,\n        network: diamond.network.name,\n        duration: endTime - startTime,\n        error: error as Error,\n      });\n\n      if (config.reporting.verbose) {\n        this.logger.error(`❌ Diamond monitoring failed: ${errorMessage}`);\n      }\n\n      const report: MonitoringReport = {\n        summary: {\n          status: MonitoringStatus.FAIL,\n          totalChecks: 0,\n          passed: 0,\n          failed: 1,\n          warnings: 0,\n          skipped: 0,\n        },\n        modules: [],\n        diamond,\n        network: diamond.network,\n        config,\n        timestamp: new Date(startTime),\n        duration: endTime - startTime,\n      };\n\n      return report;\n    }\n  }\n\n  /**\n   * Validate configurations for all modules before execution\n   * @param modules - Array of modules to validate\n   * @param context - Monitoring context\n   */\n  private async validateModuleConfigurations(\n    modules: MonitoringModule[],\n    context: MonitoringContext\n  ): Promise<void> {\n    if (context.verbose) {\n      this.logger.info('\\n📋 Validating module configurations...');\n    }\n\n    for (const module of modules) {\n      const moduleConfig = context.moduleConfig[module.id] || {};\n      const validation = module.validateConfig(moduleConfig);\n\n      if (!validation.isValid) {\n        this.logger.error(`❌ Configuration validation failed for module '${module.id}':`);\n        validation.errors.forEach(error => this.logger.error(`   • ${error}`));\n        throw new Error(`Module '${module.id}' configuration validation failed`);\n      }\n\n      if (validation.warnings.length > 0 && context.verbose) {\n        this.logger.warn(`⚠️  Configuration warnings for module '${module.id}':`);\n        validation.warnings.forEach(warning => this.logger.warn(`   • ${warning}`));\n      }\n    }\n  }\n\n  /**\n   * Get modules to run based on configuration and optional module filter\n   * @param config - Monitoring configuration\n   * @param moduleIds - Optional array of specific module IDs to run\n   * @returns Array of modules to execute\n   */\n  private getModulesToRun(config: MonitoringConfig, moduleIds?: string[]): MonitoringModule[] {\n    const availableModules = Array.from(this.modules.values());\n\n    // Filter by specific module IDs if provided\n    const filteredModules = moduleIds\n      ? availableModules.filter(module => moduleIds.includes(module.id))\n      : availableModules;\n\n    // Filter modules based on configuration\n    const enabledModules = filteredModules.filter(module => {\n      const moduleConfig = config.modules[module.id];\n      return moduleConfig && moduleConfig.enabled !== false;\n    });\n\n    // Sort by priority if specified\n    enabledModules.sort((a, b) => {\n      const priorityA = config.modules[a.id]?.priority || 0;\n      const priorityB = config.modules[b.id]?.priority || 0;\n      return priorityA - priorityB;\n    });\n\n    return enabledModules;\n  }\n\n  /**\n   * Order modules by their dependencies using topological sort\n   * @param modules - Array of modules to order\n   * @returns Modules ordered by dependencies\n   */\n  private orderModulesByDependencies(modules: MonitoringModule[]): MonitoringModule[] {\n    const moduleMap = new Map<string, MonitoringModule>();\n    const dependencyMap = new Map<string, string[]>();\n    const inDegree = new Map<string, number>();\n\n    // Initialize maps\n    modules.forEach(module => {\n      moduleMap.set(module.id, module);\n      inDegree.set(module.id, 0);\n\n      // Get dependencies if module supports them\n      const moduleWithDeps = module as MonitoringModuleWithDeps;\n      if (moduleWithDeps.getDependencies) {\n        const dependencies = moduleWithDeps\n          .getDependencies()\n          .filter(dep => moduleMap.has(dep.moduleId))\n          .map(dep => dep.moduleId);\n        dependencyMap.set(module.id, dependencies);\n      } else {\n        dependencyMap.set(module.id, []);\n      }\n    });\n\n    // Calculate in-degrees\n    dependencyMap.forEach((dependencies, moduleId) => {\n      dependencies.forEach(depId => {\n        if (inDegree.has(depId)) {\n          inDegree.set(moduleId, (inDegree.get(moduleId) || 0) + 1);\n        }\n      });\n    });\n\n    // Topological sort\n    const result: MonitoringModule[] = [];\n    const queue: string[] = [];\n\n    // Find modules with no dependencies\n    inDegree.forEach((degree, moduleId) => {\n      if (degree === 0) {\n        queue.push(moduleId);\n      }\n    });\n\n    while (queue.length > 0) {\n      const moduleId = queue.shift()!;\n      const module = moduleMap.get(moduleId)!;\n      result.push(module);\n\n      // Update in-degrees for dependent modules\n      modules.forEach(m => {\n        const deps = dependencyMap.get(m.id) || [];\n        if (deps.includes(moduleId)) {\n          const newDegree = (inDegree.get(m.id) || 0) - 1;\n          inDegree.set(m.id, newDegree);\n          if (newDegree === 0) {\n            queue.push(m.id);\n          }\n        }\n      });\n    }\n\n    // If not all modules were processed, there's a circular dependency\n    if (result.length !== modules.length) {\n      this.logger.warn('Circular dependency detected in modules, using original order');\n      return modules;\n    }\n\n    return result;\n  }\n\n  /**\n   * Get or create a provider with connection reuse\n   * @param provider - Original provider\n   * @param network - Network information\n   * @returns Provider instance (reused if possible)\n   */\n  private getOrCreateProvider(provider: Provider, network: NetworkInfo): Provider {\n    const cacheKey = `${network.name}-${network.chainId}`;\n\n    if (this.connectionPool.has(cacheKey)) {\n      this.logger.debug(`Reusing provider for ${network.name}`);\n      return this.connectionPool.get(cacheKey)!;\n    }\n\n    this.connectionPool.set(cacheKey, provider);\n    this.logger.debug(`Created new provider for ${network.name}`);\n    return provider;\n  }\n\n  /**\n   * Execute operation with exponential backoff retry\n   * @param operation - Async operation to retry\n   * @param operationName - Name for logging\n   * @param retryConfig - Retry configuration\n   * @returns Operation result\n   */\n  private async executeWithRetry<T>(\n    operation: () => Promise<T>,\n    operationName: string,\n    retryConfig: RetryConfig = this.defaultRetryConfig\n  ): Promise<T> {\n    let lastError: Error;\n\n    for (let attempt = 1; attempt <= retryConfig.maxAttempts; attempt++) {\n      try {\n        return await operation();\n      } catch (error) {\n        lastError = error as Error;\n\n        if (attempt === retryConfig.maxAttempts) {\n          this.logger.error(\n            `${operationName} failed after ${attempt} attempts: ${lastError.message}`\n          );\n          throw lastError;\n        }\n\n        const delay = Math.min(\n          retryConfig.baseDelayMs * Math.pow(retryConfig.backoffMultiplier, attempt - 1),\n          retryConfig.maxDelayMs\n        );\n\n        this.logger.warn(\n          `${operationName} failed (attempt ${attempt}/${retryConfig.maxAttempts}), retrying in ${delay}ms: ${lastError.message}`\n        );\n        await this.sleep(delay);\n      }\n    }\n\n    throw lastError!;\n  }\n\n  /**\n   * Sleep for specified milliseconds\n   * @param ms - Milliseconds to sleep\n   */\n  private sleep(ms: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  /**\n   * Run modules in parallel\n   */\n  private async runModulesParallel(\n    modules: MonitoringModule[],\n    context: MonitoringContext,\n    maxConcurrency: number\n  ): Promise<ModuleResult[]> {\n    const results: ModuleResult[] = [];\n    const semaphore = new Array(maxConcurrency).fill(null);\n\n    const promises = modules.map(async (module, index) => {\n      // Wait for available slot\n      const slotIndex = index % maxConcurrency;\n      await semaphore[slotIndex];\n\n      const result = await this.runSingleModule(module, context);\n      results.push(result);\n      return result;\n    });\n\n    await Promise.all(promises);\n    return results.sort((a, b) => a.startTime.getTime() - b.startTime.getTime());\n  }\n\n  /**\n   * Run modules sequentially\n   */\n  private async runModulesSequential(\n    modules: MonitoringModule[],\n    context: MonitoringContext\n  ): Promise<ModuleResult[]> {\n    const results: ModuleResult[] = [];\n\n    for (const module of modules) {\n      const result = await this.runSingleModule(module, context);\n      results.push(result);\n\n      // Check fail-fast configuration\n      if (context.config.execution.failFast && result.status === MonitoringStatus.FAIL) {\n        break;\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Run a single monitoring module with retry logic and enhanced error handling\n   * @param module - Module to execute\n   * @param context - Monitoring context\n   * @returns Module execution result\n   */\n  private async runSingleModule(\n    module: MonitoringModule,\n    context: MonitoringContext\n  ): Promise<ModuleResult> {\n    const startTime = new Date();\n\n    this.emitEvent({\n      type: 'module_start',\n      timestamp: startTime,\n      moduleId: module.id,\n      data: { module: module.name },\n    });\n\n    if (context.verbose) {\n      this.logger.info(`\\n🔍 Running ${module.name}...`);\n    }\n\n    try {\n      // Check if module can monitor this diamond with retry\n      const canMonitor = await this.executeWithRetry(\n        () => module.canMonitor(context.diamond, context.diamond.network),\n        `${module.name} canMonitor check`\n      );\n\n      if (!canMonitor) {\n        const endTime = new Date();\n        const result: ModuleResult = {\n          moduleId: module.id,\n          moduleName: module.name,\n          status: MonitoringStatus.SKIPPED,\n          result: {\n            status: MonitoringStatus.SKIPPED,\n            issues: [],\n            executionTime: endTime.getTime() - startTime.getTime(),\n            metadata: { reason: 'Module cannot monitor this diamond' },\n          },\n          startTime,\n          endTime,\n          duration: endTime.getTime() - startTime.getTime(),\n        };\n\n        if (context.verbose) {\n          this.logger.info(`⏭️  Skipped ${module.name} (cannot monitor this diamond)`);\n        }\n\n        return result;\n      }\n\n      // Create module-specific context\n      const moduleContext: MonitoringContext = {\n        ...context,\n        moduleConfig: context.moduleConfig[module.id] || {},\n      };\n\n      // Execute module monitoring with retry and timeout\n      const moduleResult = await Promise.race([\n        this.executeWithRetry(() => module.monitor(moduleContext), `${module.name} monitoring`),\n        this.createTimeoutPromise(context.config.execution.timeoutMs, module.name),\n      ]);\n\n      const endTime = new Date();\n      const result: ModuleResult = {\n        moduleId: module.id,\n        moduleName: module.name,\n        status: moduleResult.status,\n        result: moduleResult,\n        startTime,\n        endTime,\n        duration: endTime.getTime() - startTime.getTime(),\n      };\n\n      // Handle module issues\n      if (moduleResult.issues.length > 0) {\n        moduleResult.issues.forEach(issue => {\n          this.emitEvent({\n            type: 'issue_found',\n            timestamp: new Date(),\n            moduleId: module.id,\n            data: { issue },\n          });\n        });\n      }\n\n      if (context.verbose) {\n        const statusIcon = this.getStatusIcon(moduleResult.status);\n        this.logger.info(\n          `${statusIcon} ${module.name} completed in ${moduleResult.executionTime}ms`\n        );\n\n        if (moduleResult.issues.length > 0) {\n          this.logger.warn(`   Found ${moduleResult.issues.length} issue(s)`);\n        }\n      }\n\n      this.emitEvent({\n        type: 'module_complete',\n        timestamp: endTime,\n        moduleId: module.id,\n        data: { result: moduleResult },\n      });\n\n      return result;\n    } catch (error) {\n      const endTime = new Date();\n      const errorMessage = (error as Error).message;\n\n      this.logger.error(`Module '${module.name}' execution failed: ${errorMessage}`, {\n        moduleId: module.id,\n        duration: endTime.getTime() - startTime.getTime(),\n        error: error as Error,\n      });\n\n      const errorResult: ModuleResult = {\n        moduleId: module.id,\n        moduleName: module.name,\n        status: MonitoringStatus.FAIL,\n        result: {\n          status: MonitoringStatus.FAIL,\n          issues: [\n            {\n              id: 'module-error',\n              title: 'Module Execution Error',\n              description: `Module '${module.name}' failed: ${errorMessage}`,\n              severity: SeverityLevel.CRITICAL,\n              category: 'system',\n              metadata: {\n                stackTrace: (error as Error).stack,\n                timestamp: endTime.toISOString(),\n              },\n            },\n          ],\n          executionTime: endTime.getTime() - startTime.getTime(),\n          metadata: { error: errorMessage },\n        },\n        startTime,\n        endTime,\n        duration: endTime.getTime() - startTime.getTime(),\n        error: error as Error,\n      };\n\n      if (context.verbose) {\n        this.logger.error(`❌ ${module.name} failed: ${errorMessage}`);\n      }\n\n      this.emitEvent({\n        type: 'module_error',\n        timestamp: endTime,\n        moduleId: module.id,\n        data: { error: errorMessage },\n      });\n\n      return errorResult;\n    } finally {\n      // Cleanup if module supports it\n      try {\n        if (module.cleanup) {\n          await module.cleanup(context);\n        }\n      } catch (cleanupError) {\n        this.logger.warn(\n          `Cleanup failed for module '${module.name}': ${(cleanupError as Error).message}`\n        );\n      }\n    }\n  }\n\n  /**\n   * Create a timeout promise for module execution\n   */\n  private createTimeoutPromise(timeoutMs: number, moduleName: string): Promise<never> {\n    return new Promise((_, reject) => {\n      setTimeout(() => {\n        reject(new Error(`Module '${moduleName}' timed out after ${timeoutMs}ms`));\n      }, timeoutMs);\n    });\n  }\n\n  /**\n   * Generate final monitoring report\n   */\n  private generateReport(\n    moduleResults: ModuleResult[],\n    diamond: DiamondInfo,\n    config: MonitoringConfig,\n    startTime: number,\n    endTime: number\n  ): MonitoringReport {\n    const totalChecks = moduleResults.reduce(\n      (sum, result) => sum + (result.result.issues?.length || 0) + 1,\n      0\n    );\n    const passed = moduleResults.filter(r => r.status === MonitoringStatus.PASS).length;\n    const failed = moduleResults.filter(r => r.status === MonitoringStatus.FAIL).length;\n    const warnings = moduleResults.filter(r => r.status === MonitoringStatus.WARNING).length;\n    const skipped = moduleResults.filter(r => r.status === MonitoringStatus.SKIPPED).length;\n\n    // Determine overall status\n    let overallStatus = MonitoringStatus.PASS;\n    if (failed > 0) {\n      overallStatus = MonitoringStatus.FAIL;\n    } else if (warnings > 0) {\n      overallStatus = MonitoringStatus.WARNING;\n    }\n\n    return {\n      summary: {\n        status: overallStatus,\n        totalChecks,\n        passed,\n        failed,\n        warnings,\n        skipped,\n      },\n      modules: moduleResults,\n      diamond,\n      network: diamond.network,\n      config,\n      timestamp: new Date(startTime),\n      duration: endTime - startTime,\n    };\n  }\n\n  /**\n   * Get status icon for display\n   */\n  private getStatusIcon(status: MonitoringStatus): string {\n    switch (status) {\n      case MonitoringStatus.PASS:\n        return '✅';\n      case MonitoringStatus.FAIL:\n        return '❌';\n      case MonitoringStatus.WARNING:\n        return '⚠️';\n      case MonitoringStatus.SKIPPED:\n        return '⏭️';\n      default:\n        return '❓';\n    }\n  }\n\n  /**\n   * Get system version\n   * @returns System version string\n   */\n  public getVersion(): string {\n    return this.version;\n  }\n\n  /**\n   * Get system statistics\n   * @returns System statistics\n   */\n  public getStatistics(): {\n    registeredModules: number;\n    activeListeners: number;\n    connectionPoolSize: number;\n  } {\n    return {\n      registeredModules: this.modules.size,\n      activeListeners: this.eventListeners.length,\n      connectionPoolSize: this.connectionPool.size,\n    };\n  }\n\n  /**\n   * Clean up connection pool\n   */\n  public cleanupConnections(): void {\n    this.connectionPool.clear();\n    this.logger.debug('Connection pool cleared');\n  }\n\n  /**\n   * Set custom logger\n   * @param logger - Logger implementation\n   */\n  public setLogger(logger: Logger): void {\n    this.logger = logger;\n  }\n\n  /**\n   * Clear all modules and listeners (for testing)\n   */\n  public reset(): void {\n    this.modules.clear();\n    this.eventListeners.length = 0;\n    this.connectionPool.clear();\n    this.logger.debug('DiamondMonitoringSystem reset');\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"021114b13a2bef5575aa9208d14d2039d4f74408","contentHash":"d96c5a17860a54be8374bae91e7576ea6a0970b51712fbf44ee0bc58cfc23db9"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/ReportGenerator.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/ReportGenerator.ts","statementMap":{"0":{"start":{"line":9,"column":0},"end":{"line":9,"column":62}},"1":{"start":{"line":10,"column":0},"end":{"line":10,"column":33}},"2":{"start":{"line":11,"column":16},"end":{"line":11,"column":32}},"3":{"start":{"line":12,"column":11},"end":{"line":12,"column":55}},"4":{"start":{"line":13,"column":13},"end":{"line":13,"column":50}},"5":{"start":{"line":14,"column":16},"end":{"line":14,"column":34}},"6":{"start":{"line":16,"column":27},"end":{"line":16,"column":67}},"7":{"start":{"line":17,"column":24},"end":{"line":17,"column":61}},"8":{"start":{"line":18,"column":24},"end":{"line":18,"column":61}},"9":{"start":{"line":19,"column":28},"end":{"line":19,"column":69}},"10":{"start":{"line":20,"column":23},"end":{"line":20,"column":59}},"11":{"start":{"line":34,"column":26},"end":{"line":34,"column":36}},"12":{"start":{"line":35,"column":25},"end":{"line":35,"column":27}},"13":{"start":{"line":36,"column":8},"end":{"line":84,"column":9}},"14":{"start":{"line":38,"column":30},"end":{"line":38,"column":55}},"15":{"start":{"line":39,"column":12},"end":{"line":41,"column":13}},"16":{"start":{"line":40,"column":16},"end":{"line":40,"column":72}},"17":{"start":{"line":43,"column":31},"end":{"line":43,"column":65}},"18":{"start":{"line":44,"column":12},"end":{"line":46,"column":13}},"19":{"start":{"line":45,"column":16},"end":{"line":45,"column":105}},"20":{"start":{"line":47,"column":12},"end":{"line":47,"column":50}},"21":{"start":{"line":49,"column":34},"end":{"line":49,"column":75}},"22":{"start":{"line":51,"column":28},"end":{"line":51,"column":73}},"23":{"start":{"line":55,"column":12},"end":{"line":65,"column":13}},"24":{"start":{"line":56,"column":16},"end":{"line":56,"column":92}},"25":{"start":{"line":58,"column":28},"end":{"line":58,"column":57}},"26":{"start":{"line":59,"column":16},"end":{"line":59,"column":57}},"27":{"start":{"line":61,"column":16},"end":{"line":61,"column":72}},"28":{"start":{"line":63,"column":30},"end":{"line":63,"column":60}},"29":{"start":{"line":64,"column":16},"end":{"line":64,"column":38}},"30":{"start":{"line":66,"column":29},"end":{"line":66,"column":51}},"31":{"start":{"line":67,"column":12},"end":{"line":74,"column":14}},"32":{"start":{"line":77,"column":29},"end":{"line":77,"column":51}},"33":{"start":{"line":78,"column":12},"end":{"line":83,"column":14}},"34":{"start":{"line":93,"column":8},"end":{"line":104,"column":9}},"35":{"start":{"line":95,"column":24},"end":{"line":95,"column":48}},"36":{"start":{"line":96,"column":12},"end":{"line":96,"column":53}},"37":{"start":{"line":98,"column":12},"end":{"line":98,"column":60}},"38":{"start":{"line":100,"column":12},"end":{"line":100,"column":46}},"39":{"start":{"line":103,"column":12},"end":{"line":103,"column":88}},"40":{"start":{"line":115,"column":24},"end":{"line":115,"column":26}},"41":{"start":{"line":116,"column":8},"end":{"line":122,"column":9}},"42":{"start":{"line":117,"column":31},"end":{"line":119,"column":27}},"43":{"start":{"line":120,"column":27},"end":{"line":120,"column":89}},"44":{"start":{"line":121,"column":12},"end":{"line":121,"column":33}},"45":{"start":{"line":123,"column":8},"end":{"line":123,"column":23}},"46":{"start":{"line":130,"column":8},"end":{"line":130,"column":50}},"47":{"start":{"line":138,"column":26},"end":{"line":138,"column":53}},"48":{"start":{"line":139,"column":8},"end":{"line":140,"column":24}},"49":{"start":{"line":140,"column":12},"end":{"line":140,"column":24}},"50":{"start":{"line":141,"column":8},"end":{"line":146,"column":10}},"51":{"start":{"line":155,"column":26},"end":{"line":155,"column":51}},"52":{"start":{"line":156,"column":8},"end":{"line":162,"column":9}},"53":{"start":{"line":157,"column":12},"end":{"line":161,"column":14}},"54":{"start":{"line":163,"column":8},"end":{"line":163,"column":50}},"55":{"start":{"line":171,"column":8},"end":{"line":171,"column":47}},"56":{"start":{"line":178,"column":8},"end":{"line":178,"column":39}},"57":{"start":{"line":185,"column":8},"end":{"line":185,"column":43}},"58":{"start":{"line":191,"column":25},"end":{"line":203,"column":9}},"59":{"start":{"line":204,"column":8},"end":{"line":204,"column":43}},"60":{"start":{"line":210,"column":26},"end":{"line":210,"column":51}},"61":{"start":{"line":211,"column":8},"end":{"line":213,"column":9}},"62":{"start":{"line":212,"column":12},"end":{"line":212,"column":57}},"63":{"start":{"line":214,"column":24},"end":{"line":214,"column":34}},"64":{"start":{"line":216,"column":8},"end":{"line":218,"column":9}},"65":{"start":{"line":217,"column":12},"end":{"line":217,"column":45}},"66":{"start":{"line":220,"column":8},"end":{"line":226,"column":9}},"67":{"start":{"line":221,"column":30},"end":{"line":221,"column":76}},"68":{"start":{"line":222,"column":24},"end":{"line":222,"column":47}},"69":{"start":{"line":223,"column":25},"end":{"line":223,"column":54}},"70":{"start":{"line":224,"column":24},"end":{"line":224,"column":47}},"71":{"start":{"line":225,"column":12},"end":{"line":225,"column":69}},"72":{"start":{"line":227,"column":8},"end":{"line":227,"column":25}},"73":{"start":{"line":233,"column":26},"end":{"line":233,"column":51}},"74":{"start":{"line":234,"column":8},"end":{"line":236,"column":9}},"75":{"start":{"line":235,"column":12},"end":{"line":235,"column":57}},"76":{"start":{"line":237,"column":37},"end":{"line":237,"column":86}},"77":{"start":{"line":238,"column":37},"end":{"line":238,"column":86}},"78":{"start":{"line":239,"column":23},"end":{"line":239,"column":91}},"79":{"start":{"line":241,"column":8},"end":{"line":244,"column":9}},"80":{"start":{"line":242,"column":30},"end":{"line":242,"column":76}},"81":{"start":{"line":243,"column":12},"end":{"line":243,"column":40}},"82":{"start":{"line":245,"column":8},"end":{"line":245,"column":46}},"83":{"start":{"line":248,"column":0},"end":{"line":248,"column":42}},"84":{"start":{"line":249,"column":0},"end":{"line":249,"column":21}},"85":{"start":{"line":250,"column":0},"end":{"line":250,"column":39}},"86":{"start":{"line":251,"column":0},"end":{"line":258,"column":5}},"87":{"start":{"line":253,"column":4},"end":{"line":253,"column":98}},"88":{"start":{"line":254,"column":4},"end":{"line":254,"column":89}},"89":{"start":{"line":255,"column":4},"end":{"line":255,"column":89}},"90":{"start":{"line":256,"column":4},"end":{"line":256,"column":101}},"91":{"start":{"line":257,"column":4},"end":{"line":257,"column":86}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":69},"end":{"line":85,"column":5}},"line":33},"1":{"name":"(anonymous_1)","decl":{"start":{"line":92,"column":4},"end":{"line":92,"column":5}},"loc":{"start":{"line":92,"column":57},"end":{"line":105,"column":5}},"line":92},"2":{"name":"(anonymous_2)","decl":{"start":{"line":114,"column":4},"end":{"line":114,"column":5}},"loc":{"start":{"line":114,"column":78},"end":{"line":124,"column":5}},"line":114},"3":{"name":"(anonymous_3)","decl":{"start":{"line":129,"column":4},"end":{"line":129,"column":5}},"loc":{"start":{"line":129,"column":33},"end":{"line":131,"column":5}},"line":129},"4":{"name":"(anonymous_4)","decl":{"start":{"line":137,"column":4},"end":{"line":137,"column":5}},"loc":{"start":{"line":137,"column":36},"end":{"line":147,"column":5}},"line":137},"5":{"name":"(anonymous_5)","decl":{"start":{"line":154,"column":4},"end":{"line":154,"column":5}},"loc":{"start":{"line":154,"column":44},"end":{"line":164,"column":5}},"line":154},"6":{"name":"(anonymous_6)","decl":{"start":{"line":170,"column":4},"end":{"line":170,"column":5}},"loc":{"start":{"line":170,"column":48},"end":{"line":172,"column":5}},"line":170},"7":{"name":"(anonymous_7)","decl":{"start":{"line":177,"column":4},"end":{"line":177,"column":5}},"loc":{"start":{"line":177,"column":39},"end":{"line":179,"column":5}},"line":177},"8":{"name":"(anonymous_8)","decl":{"start":{"line":184,"column":4},"end":{"line":184,"column":5}},"loc":{"start":{"line":184,"column":32},"end":{"line":186,"column":5}},"line":184},"9":{"name":"(anonymous_9)","decl":{"start":{"line":190,"column":4},"end":{"line":190,"column":5}},"loc":{"start":{"line":190,"column":48},"end":{"line":205,"column":5}},"line":190},"10":{"name":"(anonymous_10)","decl":{"start":{"line":209,"column":4},"end":{"line":209,"column":5}},"loc":{"start":{"line":209,"column":58},"end":{"line":228,"column":5}},"line":209},"11":{"name":"(anonymous_11)","decl":{"start":{"line":232,"column":4},"end":{"line":232,"column":5}},"loc":{"start":{"line":232,"column":55},"end":{"line":246,"column":5}},"line":232},"12":{"name":"(anonymous_12)","decl":{"start":{"line":251,"column":1},"end":{"line":251,"column":2}},"loc":{"start":{"line":251,"column":7},"end":{"line":258,"column":1}},"line":251}},"branchMap":{"0":{"loc":{"start":{"line":39,"column":12},"end":{"line":41,"column":13}},"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":41,"column":13}},{"start":{},"end":{}}],"line":39},"1":{"loc":{"start":{"line":44,"column":12},"end":{"line":46,"column":13}},"type":"if","locations":[{"start":{"line":44,"column":12},"end":{"line":46,"column":13}},{"start":{},"end":{}}],"line":44},"2":{"loc":{"start":{"line":55,"column":12},"end":{"line":65,"column":13}},"type":"if","locations":[{"start":{"line":55,"column":12},"end":{"line":65,"column":13}},{"start":{},"end":{}}],"line":55},"3":{"loc":{"start":{"line":117,"column":31},"end":{"line":119,"column":27}},"type":"cond-expr","locations":[{"start":{"line":118,"column":18},"end":{"line":118,"column":88}},{"start":{"line":119,"column":18},"end":{"line":119,"column":27}}],"line":117},"4":{"loc":{"start":{"line":139,"column":8},"end":{"line":140,"column":24}},"type":"if","locations":[{"start":{"line":139,"column":8},"end":{"line":140,"column":24}},{"start":{},"end":{}}],"line":139},"5":{"loc":{"start":{"line":156,"column":8},"end":{"line":162,"column":9}},"type":"if","locations":[{"start":{"line":156,"column":8},"end":{"line":162,"column":9}},{"start":{},"end":{}}],"line":156},"6":{"loc":{"start":{"line":211,"column":8},"end":{"line":213,"column":9}},"type":"if","locations":[{"start":{"line":211,"column":8},"end":{"line":213,"column":9}},{"start":{},"end":{}}],"line":211},"7":{"loc":{"start":{"line":216,"column":8},"end":{"line":218,"column":9}},"type":"if","locations":[{"start":{"line":216,"column":8},"end":{"line":218,"column":9}},{"start":{},"end":{}}],"line":216},"8":{"loc":{"start":{"line":220,"column":8},"end":{"line":226,"column":9}},"type":"if","locations":[{"start":{"line":220,"column":8},"end":{"line":226,"column":9}},{"start":{},"end":{}}],"line":220},"9":{"loc":{"start":{"line":234,"column":8},"end":{"line":236,"column":9}},"type":"if","locations":[{"start":{"line":234,"column":8},"end":{"line":236,"column":9}},{"start":{},"end":{}}],"line":234},"10":{"loc":{"start":{"line":241,"column":8},"end":{"line":244,"column":9}},"type":"if","locations":[{"start":{"line":241,"column":8},"end":{"line":244,"column":9}},{"start":{},"end":{}}],"line":241}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":5,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":5,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/ReportGenerator.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/ReportGenerator.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Main Report Generator for Diamond Monitoring System\n *\n * Orchestrates report generation across multiple formats with professional styling\n * and comprehensive output options.\n */\n\nimport * as fs from 'fs/promises';\nimport * as path from 'path';\nimport { MonitoringReport } from '../core/types';\nimport {\n  ReportFormat,\n  ReportOptions,\n  ReportFormatter,\n  ReportGenerationResult,\n  ReportValidationResult,\n} from './types';\n\n// Import formatters\nimport { ConsoleFormatter } from './formatters/ConsoleFormatter';\nimport { JSONFormatter } from './formatters/JSONFormatter';\nimport { HTMLFormatter } from './formatters/HTMLFormatter';\nimport { MarkdownFormatter } from './formatters/MarkdownFormatter';\nimport { CSVFormatter } from './formatters/CSVFormatter';\n\n/**\n * Main report generation orchestrator\n */\nexport class ReportGenerator {\n  private static formatters: Map<ReportFormat, ReportFormatter> = new Map();\n\n  static {\n    // Register all formatters\n    this.registerFormatter(ReportFormat.CONSOLE, new ConsoleFormatter());\n    this.registerFormatter(ReportFormat.JSON, new JSONFormatter());\n    this.registerFormatter(ReportFormat.HTML, new HTMLFormatter());\n    this.registerFormatter(ReportFormat.MARKDOWN, new MarkdownFormatter());\n    this.registerFormatter(ReportFormat.CSV, new CSVFormatter());\n  }\n\n  /**\n   * Generate a report in the specified format\n   * @param report - The monitoring report to format\n   * @param format - The desired output format\n   * @param outputPath - Optional file path to save the report\n   * @param options - Report generation options\n   * @returns The generation result\n   */\n  public static async generateReport(\n    report: MonitoringReport,\n    format: ReportFormat,\n    outputPath?: string,\n    options?: ReportOptions\n  ): Promise<ReportGenerationResult> {\n    const startTime = Date.now();\n    const warnings: string[] = [];\n\n    try {\n      // Get the appropriate formatter\n      const formatter = this.getFormatter(format);\n      if (!formatter) {\n        throw new Error(`Unsupported report format: ${format}`);\n      }\n\n      // Validate options\n      const validation = formatter.validateOptions(options);\n      if (!validation.isValid) {\n        throw new Error(`Invalid options for ${format} format: ${validation.errors.join(', ')}`);\n      }\n      warnings.push(...validation.warnings);\n\n      // Apply default options\n      const mergedOptions = this.mergeDefaultOptions(options, format);\n\n      // Generate the report content\n      const content = await formatter.format(report, mergedOptions);\n\n      // Determine output path if saving\n      let finalOutputPath: string | undefined;\n      let fileSize: number | undefined;\n\n      if (outputPath) {\n        finalOutputPath = this.resolveOutputPath(outputPath, format, mergedOptions);\n\n        // Ensure directory exists\n        const dir = path.dirname(finalOutputPath);\n        await fs.mkdir(dir, { recursive: true });\n\n        // Save the report\n        await this.saveReport(content, finalOutputPath, format);\n\n        // Get file size\n        const stats = await fs.stat(finalOutputPath);\n        fileSize = stats.size;\n      }\n\n      const duration = Date.now() - startTime;\n\n      return {\n        success: true,\n        content,\n        filePath: finalOutputPath,\n        duration,\n        fileSize,\n        warnings,\n      };\n    } catch (error) {\n      const duration = Date.now() - startTime;\n\n      return {\n        success: false,\n        duration,\n        error: (error as Error).message,\n        warnings,\n      };\n    }\n  }\n\n  /**\n   * Save report content to file\n   * @param content - The report content\n   * @param outputPath - File path to save to\n   * @param format - Report format for proper encoding\n   */\n  public static async saveReport(\n    content: string,\n    outputPath: string,\n    format: ReportFormat\n  ): Promise<void> {\n    try {\n      // Ensure directory exists\n      const dir = path.dirname(outputPath);\n      await fs.mkdir(dir, { recursive: true });\n\n      // Write the file with appropriate encoding\n      await fs.writeFile(outputPath, content, 'utf8');\n\n      // Set appropriate permissions\n      await fs.chmod(outputPath, 0o644);\n    } catch (error) {\n      throw new Error(`Failed to save report to ${outputPath}: ${(error as Error).message}`);\n    }\n  }\n\n  /**\n   * Generate multiple reports in different formats\n   * @param report - The monitoring report\n   * @param formats - Array of formats to generate\n   * @param outputDir - Directory to save reports\n   * @param options - Report generation options\n   * @returns Array of generation results\n   */\n  public static async generateMultipleReports(\n    report: MonitoringReport,\n    formats: ReportFormat[],\n    outputDir?: string,\n    options?: ReportOptions\n  ): Promise<ReportGenerationResult[]> {\n    const results: ReportGenerationResult[] = [];\n\n    for (const format of formats) {\n      const outputPath = outputDir\n        ? path.join(outputDir, this.getDefaultFilename(report, format, options))\n        : undefined;\n\n      const result = await this.generateReport(report, format, outputPath, options);\n      results.push(result);\n    }\n\n    return results;\n  }\n\n  /**\n   * Get available formatters\n   * @returns Array of available format types\n   */\n  public static getAvailableFormats(): ReportFormat[] {\n    return Array.from(this.formatters.keys());\n  }\n\n  /**\n   * Get formatter information\n   * @param format - The format to get info for\n   * @returns Formatter information\n   */\n  public static getFormatterInfo(\n    format: ReportFormat\n  ): Pick<ReportFormatter, 'id' | 'name' | 'extension' | 'mimeType'> | null {\n    const formatter = this.formatters.get(format);\n    if (!formatter) return null;\n\n    return {\n      id: formatter.id,\n      name: formatter.name,\n      extension: formatter.extension,\n      mimeType: formatter.mimeType,\n    };\n  }\n\n  /**\n   * Validate report options for a specific format\n   * @param format - The format to validate options for\n   * @param options - Options to validate\n   * @returns Validation result\n   */\n  public static validateOptions(\n    format: ReportFormat,\n    options?: ReportOptions\n  ): ReportValidationResult {\n    const formatter = this.getFormatter(format);\n    if (!formatter) {\n      return {\n        isValid: false,\n        errors: [`Unsupported format: ${format}`],\n        warnings: [],\n      };\n    }\n\n    return formatter.validateOptions(options);\n  }\n\n  /**\n   * Register a custom formatter\n   * @param format - The format type\n   * @param formatter - The formatter implementation\n   */\n  public static registerFormatter(format: ReportFormat, formatter: ReportFormatter): void {\n    this.formatters.set(format, formatter);\n  }\n\n  /**\n   * Unregister a formatter\n   * @param format - The format type to unregister\n   */\n  public static unregisterFormatter(format: ReportFormat): void {\n    this.formatters.delete(format);\n  }\n\n  // Private helper methods\n\n  /**\n   * Get formatter for a specific format\n   */\n  private static getFormatter(format: ReportFormat): ReportFormatter | undefined {\n    return this.formatters.get(format);\n  }\n\n  /**\n   * Merge default options with provided options\n   */\n  private static mergeDefaultOptions(\n    options?: ReportOptions,\n    format?: ReportFormat\n  ): ReportOptions {\n    const defaults: ReportOptions = {\n      includeDetails: true,\n      colorOutput: format === ReportFormat.CONSOLE,\n      sortBy: 'severity',\n      includeMetadata: true,\n      includeRecommendations: true,\n      maxIssuesPerModule: 10,\n      theme: 'light',\n      interactive: format === ReportFormat.HTML,\n      includeCharts: format === ReportFormat.HTML,\n      compact: false,\n      timestampInFilename: false,\n    };\n\n    return { ...defaults, ...options };\n  }\n\n  /**\n   * Resolve the final output path with proper extension and timestamp\n   */\n  private static resolveOutputPath(\n    outputPath: string,\n    format: ReportFormat,\n    options?: ReportOptions\n  ): string {\n    const formatter = this.getFormatter(format);\n    if (!formatter) {\n      throw new Error(`Unknown format: ${format}`);\n    }\n\n    let finalPath = outputPath;\n\n    // Add extension if not present\n    if (!path.extname(finalPath)) {\n      finalPath += formatter.extension;\n    }\n\n    // Add timestamp if requested\n    if (options?.timestampInFilename) {\n      const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n      const ext = path.extname(finalPath);\n      const base = path.basename(finalPath, ext);\n      const dir = path.dirname(finalPath);\n      finalPath = path.join(dir, `${base}-${timestamp}${ext}`);\n    }\n\n    return finalPath;\n  }\n\n  /**\n   * Get default filename for a report\n   */\n  private static getDefaultFilename(\n    report: MonitoringReport,\n    format: ReportFormat,\n    options?: ReportOptions\n  ): string {\n    const formatter = this.getFormatter(format);\n    if (!formatter) {\n      throw new Error(`Unknown format: ${format}`);\n    }\n\n    const sanitizedDiamondName = report.diamond.name.replace(/[^a-zA-Z0-9]/g, '_');\n    const sanitizedNetworkName = report.network.name.replace(/[^a-zA-Z0-9]/g, '_');\n\n    let basename = `diamond-monitoring-${sanitizedDiamondName}-${sanitizedNetworkName}`;\n\n    // Add timestamp if requested\n    if (options?.timestampInFilename) {\n      const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n      basename += `-${timestamp}`;\n    }\n\n    return basename + formatter.extension;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f74c69973a6c3a7cb2748f9b53987937d3487f27","contentHash":"f8a469dfec15169eec00fd8b1dd116bbd17d6a5b4266bb55b6eab8138cf53927"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/types.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/types.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":47}},"2":{"start":{"line":11,"column":0},"end":{"line":17,"column":63}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":40}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":34}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":34}},"6":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"7":{"start":{"line":16,"column":4},"end":{"line":16,"column":32}},"8":{"start":{"line":21,"column":0},"end":{"line":48,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":1},"end":{"line":11,"column":2}},"loc":{"start":{"line":11,"column":25},"end":{"line":17,"column":1}},"line":11}},"branchMap":{"0":{"loc":{"start":{"line":17,"column":3},"end":{"line":17,"column":61}},"type":"binary-expr","locations":[{"start":{"line":17,"column":3},"end":{"line":17,"column":15}},{"start":{"line":17,"column":20},"end":{"line":17,"column":60}}],"line":17}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/types.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/types.ts"],"names":[],"mappings":";AAAA;;GAEG;;;AAIH;;GAEG;AACH,IAAY,YAMX;AAND,WAAY,YAAY;IACtB,mCAAmB,CAAA;IACnB,6BAAa,CAAA;IACb,6BAAa,CAAA;IACb,qCAAqB,CAAA;IACrB,2BAAW,CAAA;AACb,CAAC,EANW,YAAY,4BAAZ,YAAY,QAMvB;AA4LD;;GAEG;AACU,QAAA,MAAM,GAAgC;IACjD,KAAK,EAAE;QACL,YAAY,EAAE,SAAS;QACvB,cAAc,EAAE,SAAS;QACzB,YAAY,EAAE,SAAS;QACvB,YAAY,EAAE,SAAS;QACvB,UAAU,EAAE,SAAS;QACrB,aAAa,EAAE,SAAS;QACxB,eAAe,EAAE,SAAS;QAC1B,SAAS,EAAE,SAAS;QACpB,WAAW,EAAE,SAAS;QACtB,UAAU,EAAE,mEAAmE;QAC/E,QAAQ,EAAE,MAAM;KACjB;IACD,IAAI,EAAE;QACJ,YAAY,EAAE,SAAS;QACvB,cAAc,EAAE,SAAS;QACzB,YAAY,EAAE,SAAS;QACvB,YAAY,EAAE,SAAS;QACvB,UAAU,EAAE,SAAS;QACrB,aAAa,EAAE,SAAS;QACxB,eAAe,EAAE,SAAS;QAC1B,SAAS,EAAE,SAAS;QACpB,WAAW,EAAE,SAAS;QACtB,UAAU,EAAE,mEAAmE;QAC/E,QAAQ,EAAE,MAAM;KACjB;CACF,CAAC","sourcesContent":["/**\n * Types and interfaces for the report generation system\n */\n\nimport { MonitoringReport } from '../core/types';\n\n/**\n * Supported report formats\n */\nexport enum ReportFormat {\n  CONSOLE = 'console',\n  JSON = 'json',\n  HTML = 'html',\n  MARKDOWN = 'markdown',\n  CSV = 'csv',\n}\n\n/**\n * Report generation options\n */\nexport interface ReportOptions {\n  /** Include detailed information in the report */\n  includeDetails?: boolean;\n\n  /** Enable color output (for console format) */\n  colorOutput?: boolean;\n\n  /** Sort issues by specified criteria */\n  sortBy?: 'severity' | 'module' | 'category' | 'timestamp';\n\n  /** Filter issues by severity level */\n  severityFilter?: string[];\n\n  /** Filter issues by module */\n  moduleFilter?: string[];\n\n  /** Include metadata in the report */\n  includeMetadata?: boolean;\n\n  /** Custom title for the report */\n  title?: string;\n\n  /** Custom description for the report */\n  description?: string;\n\n  /** Include recommendations section */\n  includeRecommendations?: boolean;\n\n  /** Maximum number of issues to display per module */\n  maxIssuesPerModule?: number;\n\n  /** Theme for HTML reports */\n  theme?: 'light' | 'dark' | 'auto';\n\n  /** Include interactive features (for HTML) */\n  interactive?: boolean;\n\n  /** Custom CSS for HTML reports */\n  customCss?: string;\n\n  /** Include charts and visualizations */\n  includeCharts?: boolean;\n\n  /** Compact mode for smaller output */\n  compact?: boolean;\n\n  /** Include timestamp in filename */\n  timestampInFilename?: boolean;\n}\n\n/**\n * Base interface for report formatters\n */\nexport interface ReportFormatter {\n  /** Unique identifier for the formatter */\n  readonly id: string;\n\n  /** Human-readable name of the formatter */\n  readonly name: string;\n\n  /** File extension for this format */\n  readonly extension: string;\n\n  /** MIME type for this format */\n  readonly mimeType: string;\n\n  /**\n   * Format the monitoring report\n   * @param report - The monitoring report to format\n   * @param options - Formatting options\n   * @returns The formatted report content\n   */\n  format(report: MonitoringReport, options?: ReportOptions): Promise<string>;\n\n  /**\n   * Validate options for this formatter\n   * @param options - Options to validate\n   * @returns Validation result\n   */\n  validateOptions(options?: ReportOptions): ReportValidationResult;\n}\n\n/**\n * Validation result for report options\n */\nexport interface ReportValidationResult {\n  /** Whether the options are valid */\n  isValid: boolean;\n\n  /** Validation errors */\n  errors: string[];\n\n  /** Validation warnings */\n  warnings: string[];\n}\n\n/**\n * Report generation result\n */\nexport interface ReportGenerationResult {\n  /** Whether the generation was successful */\n  success: boolean;\n\n  /** Generated content (if successful) */\n  content?: string;\n\n  /** Output file path (if saved) */\n  filePath?: string;\n\n  /** Generation time in milliseconds */\n  duration: number;\n\n  /** File size in bytes (if saved) */\n  fileSize?: number;\n\n  /** Error message (if failed) */\n  error?: string;\n\n  /** Warnings during generation */\n  warnings: string[];\n}\n\n/**\n * Chart data for visualizations\n */\nexport interface ChartData {\n  /** Chart type */\n  type: 'pie' | 'bar' | 'line' | 'doughnut';\n\n  /** Chart title */\n  title: string;\n\n  /** Data labels */\n  labels: string[];\n\n  /** Data values */\n  data: number[];\n\n  /** Background colors */\n  backgroundColor?: string[];\n\n  /** Border colors */\n  borderColor?: string[];\n}\n\n/**\n * Theme configuration for reports\n */\nexport interface ReportTheme {\n  /** Primary color */\n  primaryColor: string;\n\n  /** Secondary color */\n  secondaryColor: string;\n\n  /** Success color */\n  successColor: string;\n\n  /** Warning color */\n  warningColor: string;\n\n  /** Error color */\n  errorColor: string;\n\n  /** Critical color */\n  criticalColor: string;\n\n  /** Background color */\n  backgroundColor: string;\n\n  /** Text color */\n  textColor: string;\n\n  /** Border color */\n  borderColor: string;\n\n  /** Font family */\n  fontFamily: string;\n\n  /** Font size */\n  fontSize: string;\n}\n\n/**\n * Predefined themes\n */\nexport const THEMES: Record<string, ReportTheme> = {\n  light: {\n    primaryColor: '#1565c0',\n    secondaryColor: '#42a5f5',\n    successColor: '#2e7d32',\n    warningColor: '#f57c00',\n    errorColor: '#d32f2f',\n    criticalColor: '#b71c1c',\n    backgroundColor: '#ffffff',\n    textColor: '#212121',\n    borderColor: '#e0e0e0',\n    fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n    fontSize: '14px',\n  },\n  dark: {\n    primaryColor: '#64b5f6',\n    secondaryColor: '#1976d2',\n    successColor: '#4caf50',\n    warningColor: '#ff9800',\n    errorColor: '#f44336',\n    criticalColor: '#d32f2f',\n    backgroundColor: '#121212',\n    textColor: '#ffffff',\n    borderColor: '#333333',\n    fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n    fontSize: '14px',\n  },\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"92d9fbcb2b916c6f798dc302153aaca96d229e2d","contentHash":"eb77a935e1e7391645170ce50e4275829bfd4f0154e54bcf6af588ccc54cdf9a"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/formatters/ConsoleFormatter.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/formatters/ConsoleFormatter.ts","statementMap":{"0":{"start":{"line":8,"column":0},"end":{"line":8,"column":62}},"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}},"2":{"start":{"line":10,"column":16},"end":{"line":10,"column":32}},"3":{"start":{"line":11,"column":14},"end":{"line":11,"column":52}},"4":{"start":{"line":12,"column":16},"end":{"line":12,"column":43}},"5":{"start":{"line":18,"column":8},"end":{"line":18,"column":28}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":37}},"7":{"start":{"line":20,"column":8},"end":{"line":20,"column":32}},"8":{"start":{"line":21,"column":8},"end":{"line":21,"column":37}},"9":{"start":{"line":27,"column":23},"end":{"line":27,"column":25}},"10":{"start":{"line":28,"column":25},"end":{"line":28,"column":55}},"11":{"start":{"line":29,"column":18},"end":{"line":29,"column":62}},"12":{"start":{"line":31,"column":8},"end":{"line":31,"column":61}},"13":{"start":{"line":33,"column":8},"end":{"line":33,"column":62}},"14":{"start":{"line":35,"column":8},"end":{"line":35,"column":65}},"15":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"16":{"start":{"line":38,"column":12},"end":{"line":38,"column":72}},"17":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"18":{"start":{"line":42,"column":12},"end":{"line":42,"column":73}},"19":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"20":{"start":{"line":46,"column":12},"end":{"line":46,"column":74}},"21":{"start":{"line":49,"column":8},"end":{"line":49,"column":61}},"22":{"start":{"line":50,"column":8},"end":{"line":50,"column":69}},"23":{"start":{"line":50,"column":40},"end":{"line":50,"column":54}},"24":{"start":{"line":56,"column":23},"end":{"line":56,"column":25}},"25":{"start":{"line":57,"column":25},"end":{"line":57,"column":27}},"26":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"27":{"start":{"line":59,"column":12},"end":{"line":59,"column":65}},"28":{"start":{"line":61,"column":8},"end":{"line":64,"column":9}},"29":{"start":{"line":63,"column":12},"end":{"line":63,"column":88}},"30":{"start":{"line":65,"column":8},"end":{"line":69,"column":10}},"31":{"start":{"line":76,"column":22},"end":{"line":76,"column":24}},"32":{"start":{"line":77,"column":8},"end":{"line":77,"column":43}},"33":{"start":{"line":78,"column":8},"end":{"line":78,"column":91}},"34":{"start":{"line":79,"column":8},"end":{"line":79,"column":43}},"35":{"start":{"line":80,"column":8},"end":{"line":80,"column":32}},"36":{"start":{"line":86,"column":22},"end":{"line":86,"column":24}},"37":{"start":{"line":87,"column":8},"end":{"line":87,"column":41}},"38":{"start":{"line":88,"column":8},"end":{"line":88,"column":43}},"39":{"start":{"line":89,"column":8},"end":{"line":89,"column":68}},"40":{"start":{"line":90,"column":8},"end":{"line":90,"column":66}},"41":{"start":{"line":91,"column":8},"end":{"line":91,"column":101}},"42":{"start":{"line":92,"column":8},"end":{"line":95,"column":9}},"43":{"start":{"line":93,"column":12},"end":{"line":93,"column":80}},"44":{"start":{"line":94,"column":12},"end":{"line":94,"column":85}},"45":{"start":{"line":97,"column":28},"end":{"line":97,"column":73}},"46":{"start":{"line":98,"column":27},"end":{"line":98,"column":68}},"47":{"start":{"line":99,"column":8},"end":{"line":99,"column":23}},"48":{"start":{"line":100,"column":8},"end":{"line":100,"column":87}},"49":{"start":{"line":101,"column":8},"end":{"line":101,"column":32}},"50":{"start":{"line":107,"column":22},"end":{"line":107,"column":24}},"51":{"start":{"line":108,"column":8},"end":{"line":108,"column":44}},"52":{"start":{"line":109,"column":8},"end":{"line":109,"column":43}},"53":{"start":{"line":110,"column":8},"end":{"line":110,"column":80}},"54":{"start":{"line":112,"column":25},"end":{"line":114,"column":15}},"55":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"56":{"start":{"line":116,"column":12},"end":{"line":116,"column":62}},"57":{"start":{"line":118,"column":8},"end":{"line":118,"column":71}},"58":{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},"59":{"start":{"line":120,"column":12},"end":{"line":120,"column":73}},"60":{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},"61":{"start":{"line":123,"column":12},"end":{"line":123,"column":82}},"62":{"start":{"line":125,"column":8},"end":{"line":127,"column":9}},"63":{"start":{"line":126,"column":12},"end":{"line":126,"column":78}},"64":{"start":{"line":128,"column":8},"end":{"line":128,"column":32}},"65":{"start":{"line":134,"column":22},"end":{"line":134,"column":24}},"66":{"start":{"line":135,"column":8},"end":{"line":135,"column":48}},"67":{"start":{"line":136,"column":8},"end":{"line":136,"column":43}},"68":{"start":{"line":137,"column":26},"end":{"line":137,"column":59}},"69":{"start":{"line":138,"column":8},"end":{"line":172,"column":9}},"70":{"start":{"line":139,"column":38},"end":{"line":139,"column":81}},"71":{"start":{"line":140,"column":31},"end":{"line":140,"column":70}},"72":{"start":{"line":141,"column":12},"end":{"line":141,"column":27}},"73":{"start":{"line":142,"column":12},"end":{"line":142,"column":91}},"74":{"start":{"line":143,"column":12},"end":{"line":146,"column":13}},"75":{"start":{"line":144,"column":16},"end":{"line":144,"column":97}},"76":{"start":{"line":145,"column":16},"end":{"line":145,"column":105}},"77":{"start":{"line":147,"column":12},"end":{"line":162,"column":13}},"78":{"start":{"line":148,"column":37},"end":{"line":148,"column":97}},"79":{"start":{"line":149,"column":37},"end":{"line":149,"column":69}},"80":{"start":{"line":150,"column":16},"end":{"line":157,"column":17}},"81":{"start":{"line":151,"column":39},"end":{"line":151,"column":79}},"82":{"start":{"line":152,"column":38},"end":{"line":152,"column":74}},"83":{"start":{"line":153,"column":20},"end":{"line":153,"column":84}},"84":{"start":{"line":154,"column":20},"end":{"line":156,"column":21}},"85":{"start":{"line":155,"column":24},"end":{"line":155,"column":97}},"86":{"start":{"line":158,"column":16},"end":{"line":161,"column":17}},"87":{"start":{"line":159,"column":38},"end":{"line":159,"column":83}},"88":{"start":{"line":160,"column":20},"end":{"line":160,"column":113}},"89":{"start":{"line":164,"column":12},"end":{"line":171,"column":13}},"90":{"start":{"line":165,"column":33},"end":{"line":165,"column":61}},"91":{"start":{"line":166,"column":16},"end":{"line":170,"column":19}},"92":{"start":{"line":167,"column":20},"end":{"line":169,"column":21}},"93":{"start":{"line":168,"column":24},"end":{"line":168,"column":70}},"94":{"start":{"line":173,"column":8},"end":{"line":173,"column":32}},"95":{"start":{"line":179,"column":26},"end":{"line":179,"column":70}},"96":{"start":{"line":179,"column":54},"end":{"line":179,"column":69}},"97":{"start":{"line":180,"column":31},"end":{"line":180,"column":99}},"98":{"start":{"line":180,"column":53},"end":{"line":180,"column":98}},"99":{"start":{"line":181,"column":28},"end":{"line":181,"column":93}},"100":{"start":{"line":181,"column":50},"end":{"line":181,"column":92}},"101":{"start":{"line":182,"column":8},"end":{"line":184,"column":9}},"102":{"start":{"line":183,"column":12},"end":{"line":183,"column":22}},"103":{"start":{"line":185,"column":22},"end":{"line":185,"column":24}},"104":{"start":{"line":186,"column":8},"end":{"line":186,"column":56}},"105":{"start":{"line":187,"column":8},"end":{"line":187,"column":42}},"106":{"start":{"line":188,"column":35},"end":{"line":188,"column":70}},"107":{"start":{"line":189,"column":8},"end":{"line":202,"column":11}},"108":{"start":{"line":190,"column":31},"end":{"line":190,"column":71}},"109":{"start":{"line":191,"column":30},"end":{"line":191,"column":66}},"110":{"start":{"line":192,"column":12},"end":{"line":192,"column":27}},"111":{"start":{"line":193,"column":12},"end":{"line":193,"column":85}},"112":{"start":{"line":194,"column":12},"end":{"line":194,"column":64}},"113":{"start":{"line":195,"column":12},"end":{"line":195,"column":76}},"114":{"start":{"line":196,"column":12},"end":{"line":198,"column":13}},"115":{"start":{"line":197,"column":16},"end":{"line":197,"column":118}},"116":{"start":{"line":199,"column":12},"end":{"line":201,"column":13}},"117":{"start":{"line":200,"column":16},"end":{"line":200,"column":122}},"118":{"start":{"line":203,"column":8},"end":{"line":203,"column":32}},"119":{"start":{"line":209,"column":8},"end":{"line":210,"column":22}},"120":{"start":{"line":210,"column":12},"end":{"line":210,"column":22}},"121":{"start":{"line":211,"column":22},"end":{"line":211,"column":24}},"122":{"start":{"line":212,"column":8},"end":{"line":212,"column":49}},"123":{"start":{"line":213,"column":8},"end":{"line":213,"column":43}},"124":{"start":{"line":214,"column":8},"end":{"line":216,"column":11}},"125":{"start":{"line":215,"column":12},"end":{"line":215,"column":84}},"126":{"start":{"line":217,"column":8},"end":{"line":217,"column":32}},"127":{"start":{"line":223,"column":22},"end":{"line":223,"column":24}},"128":{"start":{"line":224,"column":8},"end":{"line":224,"column":43}},"129":{"start":{"line":226,"column":8},"end":{"line":238,"column":9}},"130":{"start":{"line":228,"column":16},"end":{"line":228,"column":83}},"131":{"start":{"line":229,"column":16},"end":{"line":229,"column":22}},"132":{"start":{"line":231,"column":16},"end":{"line":231,"column":87}},"133":{"start":{"line":232,"column":16},"end":{"line":232,"column":22}},"134":{"start":{"line":234,"column":16},"end":{"line":234,"column":80}},"135":{"start":{"line":235,"column":16},"end":{"line":235,"column":22}},"136":{"start":{"line":237,"column":16},"end":{"line":237,"column":71}},"137":{"start":{"line":239,"column":8},"end":{"line":244,"column":9}},"138":{"start":{"line":240,"column":32},"end":{"line":240,"column":53}},"139":{"start":{"line":241,"column":34},"end":{"line":241,"column":111}},"140":{"start":{"line":241,"column":61},"end":{"line":241,"column":103}},"141":{"start":{"line":242,"column":12},"end":{"line":242,"column":27}},"142":{"start":{"line":243,"column":12},"end":{"line":243,"column":104}},"143":{"start":{"line":245,"column":8},"end":{"line":245,"column":32}},"144":{"start":{"line":252,"column":23},"end":{"line":252,"column":61}},"145":{"start":{"line":253,"column":22},"end":{"line":253,"column":36}},"146":{"start":{"line":254,"column":20},"end":{"line":254,"column":58}},"147":{"start":{"line":255,"column":22},"end":{"line":255,"column":86}},"148":{"start":{"line":256,"column":8},"end":{"line":256,"column":69}},"149":{"start":{"line":262,"column":8},"end":{"line":273,"column":9}},"150":{"start":{"line":264,"column":16},"end":{"line":264,"column":36}},"151":{"start":{"line":266,"column":16},"end":{"line":266,"column":37}},"152":{"start":{"line":268,"column":16},"end":{"line":268,"column":34}},"153":{"start":{"line":270,"column":16},"end":{"line":270,"column":35}},"154":{"start":{"line":272,"column":16},"end":{"line":272,"column":36}},"155":{"start":{"line":279,"column":8},"end":{"line":290,"column":9}},"156":{"start":{"line":281,"column":16},"end":{"line":281,"column":27}},"157":{"start":{"line":283,"column":16},"end":{"line":283,"column":28}},"158":{"start":{"line":285,"column":16},"end":{"line":285,"column":27}},"159":{"start":{"line":287,"column":16},"end":{"line":287,"column":28}},"160":{"start":{"line":289,"column":16},"end":{"line":289,"column":28}},"161":{"start":{"line":296,"column":8},"end":{"line":307,"column":9}},"162":{"start":{"line":298,"column":16},"end":{"line":298,"column":34}},"163":{"start":{"line":300,"column":16},"end":{"line":300,"column":29}},"164":{"start":{"line":302,"column":16},"end":{"line":302,"column":32}},"165":{"start":{"line":304,"column":16},"end":{"line":304,"column":30}},"166":{"start":{"line":306,"column":16},"end":{"line":306,"column":30}},"167":{"start":{"line":313,"column":8},"end":{"line":324,"column":9}},"168":{"start":{"line":315,"column":16},"end":{"line":315,"column":28}},"169":{"start":{"line":317,"column":16},"end":{"line":317,"column":27}},"170":{"start":{"line":319,"column":16},"end":{"line":319,"column":28}},"171":{"start":{"line":321,"column":16},"end":{"line":321,"column":28}},"172":{"start":{"line":323,"column":16},"end":{"line":323,"column":27}},"173":{"start":{"line":330,"column":8},"end":{"line":331,"column":32}},"174":{"start":{"line":331,"column":12},"end":{"line":331,"column":32}},"175":{"start":{"line":332,"column":8},"end":{"line":333,"column":46}},"176":{"start":{"line":333,"column":12},"end":{"line":333,"column":46}},"177":{"start":{"line":334,"column":8},"end":{"line":334,"column":39}},"178":{"start":{"line":340,"column":23},"end":{"line":340,"column":34}},"179":{"start":{"line":341,"column":8},"end":{"line":357,"column":9}},"180":{"start":{"line":343,"column":38},"end":{"line":348,"column":17}},"181":{"start":{"line":349,"column":16},"end":{"line":349,"column":111}},"182":{"start":{"line":349,"column":38},"end":{"line":349,"column":109}},"183":{"start":{"line":350,"column":16},"end":{"line":350,"column":22}},"184":{"start":{"line":352,"column":16},"end":{"line":352,"column":76}},"185":{"start":{"line":352,"column":38},"end":{"line":352,"column":74}},"186":{"start":{"line":353,"column":16},"end":{"line":353,"column":22}},"187":{"start":{"line":356,"column":16},"end":{"line":356,"column":22}},"188":{"start":{"line":358,"column":8},"end":{"line":358,"column":22}},"189":{"start":{"line":364,"column":8},"end":{"line":365,"column":24}},"190":{"start":{"line":365,"column":12},"end":{"line":365,"column":24}},"191":{"start":{"line":366,"column":8},"end":{"line":366,"column":56}},"192":{"start":{"line":372,"column":22},"end":{"line":372,"column":37}},"193":{"start":{"line":373,"column":22},"end":{"line":373,"column":24}},"194":{"start":{"line":374,"column":26},"end":{"line":374,"column":28}},"195":{"start":{"line":375,"column":8},"end":{"line":383,"column":9}},"196":{"start":{"line":376,"column":12},"end":{"line":381,"column":13}},"197":{"start":{"line":377,"column":16},"end":{"line":380,"column":17}},"198":{"start":{"line":378,"column":20},"end":{"line":378,"column":60}},"199":{"start":{"line":379,"column":20},"end":{"line":379,"column":37}},"200":{"start":{"line":382,"column":12},"end":{"line":382,"column":38}},"201":{"start":{"line":384,"column":8},"end":{"line":386,"column":9}},"202":{"start":{"line":385,"column":12},"end":{"line":385,"column":52}},"203":{"start":{"line":387,"column":8},"end":{"line":387,"column":32}},"204":{"start":{"line":393,"column":25},"end":{"line":393,"column":39}},"205":{"start":{"line":393,"column":35},"end":{"line":393,"column":39}},"206":{"start":{"line":394,"column":29},"end":{"line":394,"column":72}},"207":{"start":{"line":395,"column":8},"end":{"line":400,"column":11}},"208":{"start":{"line":396,"column":23},"end":{"line":399,"column":14}},"209":{"start":{"line":397,"column":27},"end":{"line":397,"column":35}},"210":{"start":{"line":398,"column":50},"end":{"line":398,"column":63}},"211":{"start":{"line":403,"column":0},"end":{"line":403,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":18},"end":{"line":22,"column":5}},"line":17},"1":{"name":"(anonymous_1)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":34},"end":{"line":51,"column":5}},"line":26},"2":{"name":"(anonymous_2)","decl":{"start":{"line":50,"column":29},"end":{"line":50,"column":30}},"loc":{"start":{"line":50,"column":40},"end":{"line":50,"column":54}},"line":50},"3":{"name":"(anonymous_3)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":29},"end":{"line":70,"column":5}},"line":55},"4":{"name":"(anonymous_4)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":39},"end":{"line":81,"column":5}},"line":75},"5":{"name":"(anonymous_5)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":40},"end":{"line":102,"column":5}},"line":85},"6":{"name":"(anonymous_6)","decl":{"start":{"line":106,"column":4},"end":{"line":106,"column":5}},"loc":{"start":{"line":106,"column":43},"end":{"line":129,"column":5}},"line":106},"7":{"name":"(anonymous_7)","decl":{"start":{"line":133,"column":4},"end":{"line":133,"column":5}},"loc":{"start":{"line":133,"column":46},"end":{"line":174,"column":5}},"line":133},"8":{"name":"(anonymous_8)","decl":{"start":{"line":166,"column":49},"end":{"line":166,"column":50}},"loc":{"start":{"line":166,"column":67},"end":{"line":170,"column":17}},"line":166},"9":{"name":"(anonymous_9)","decl":{"start":{"line":178,"column":4},"end":{"line":178,"column":5}},"loc":{"start":{"line":178,"column":47},"end":{"line":204,"column":5}},"line":178},"10":{"name":"(anonymous_10)","decl":{"start":{"line":179,"column":49},"end":{"line":179,"column":50}},"loc":{"start":{"line":179,"column":54},"end":{"line":179,"column":69}},"line":179},"11":{"name":"(anonymous_11)","decl":{"start":{"line":180,"column":48},"end":{"line":180,"column":49}},"loc":{"start":{"line":180,"column":53},"end":{"line":180,"column":98}},"line":180},"12":{"name":"(anonymous_12)","decl":{"start":{"line":181,"column":45},"end":{"line":181,"column":46}},"loc":{"start":{"line":181,"column":50},"end":{"line":181,"column":92}},"line":181},"13":{"name":"(anonymous_13)","decl":{"start":{"line":189,"column":35},"end":{"line":189,"column":36}},"loc":{"start":{"line":189,"column":53},"end":{"line":202,"column":9}},"line":189},"14":{"name":"(anonymous_14)","decl":{"start":{"line":208,"column":4},"end":{"line":208,"column":5}},"loc":{"start":{"line":208,"column":48},"end":{"line":218,"column":5}},"line":208},"15":{"name":"(anonymous_15)","decl":{"start":{"line":214,"column":39},"end":{"line":214,"column":40}},"loc":{"start":{"line":214,"column":66},"end":{"line":216,"column":9}},"line":214},"16":{"name":"(anonymous_16)","decl":{"start":{"line":222,"column":4},"end":{"line":222,"column":5}},"loc":{"start":{"line":222,"column":39},"end":{"line":246,"column":5}},"line":222},"17":{"name":"(anonymous_17)","decl":{"start":{"line":241,"column":56},"end":{"line":241,"column":57}},"loc":{"start":{"line":241,"column":61},"end":{"line":241,"column":103}},"line":241},"18":{"name":"(anonymous_18)","decl":{"start":{"line":251,"column":4},"end":{"line":251,"column":5}},"loc":{"start":{"line":251,"column":51},"end":{"line":257,"column":5}},"line":251},"19":{"name":"(anonymous_19)","decl":{"start":{"line":261,"column":4},"end":{"line":261,"column":5}},"loc":{"start":{"line":261,"column":30},"end":{"line":274,"column":5}},"line":261},"20":{"name":"(anonymous_20)","decl":{"start":{"line":278,"column":4},"end":{"line":278,"column":5}},"loc":{"start":{"line":278,"column":26},"end":{"line":291,"column":5}},"line":278},"21":{"name":"(anonymous_21)","decl":{"start":{"line":295,"column":4},"end":{"line":295,"column":5}},"loc":{"start":{"line":295,"column":34},"end":{"line":308,"column":5}},"line":295},"22":{"name":"(anonymous_22)","decl":{"start":{"line":312,"column":4},"end":{"line":312,"column":5}},"loc":{"start":{"line":312,"column":30},"end":{"line":325,"column":5}},"line":312},"23":{"name":"(anonymous_23)","decl":{"start":{"line":329,"column":4},"end":{"line":329,"column":5}},"loc":{"start":{"line":329,"column":32},"end":{"line":335,"column":5}},"line":329},"24":{"name":"(anonymous_24)","decl":{"start":{"line":339,"column":4},"end":{"line":339,"column":5}},"loc":{"start":{"line":339,"column":31},"end":{"line":359,"column":5}},"line":339},"25":{"name":"(anonymous_25)","decl":{"start":{"line":349,"column":28},"end":{"line":349,"column":29}},"loc":{"start":{"line":349,"column":38},"end":{"line":349,"column":109}},"line":349},"26":{"name":"(anonymous_26)","decl":{"start":{"line":352,"column":28},"end":{"line":352,"column":29}},"loc":{"start":{"line":352,"column":38},"end":{"line":352,"column":74}},"line":352},"27":{"name":"(anonymous_27)","decl":{"start":{"line":363,"column":4},"end":{"line":363,"column":5}},"loc":{"start":{"line":363,"column":34},"end":{"line":367,"column":5}},"line":363},"28":{"name":"(anonymous_28)","decl":{"start":{"line":371,"column":4},"end":{"line":371,"column":5}},"loc":{"start":{"line":371,"column":39},"end":{"line":388,"column":5}},"line":371},"29":{"name":"(anonymous_29)","decl":{"start":{"line":392,"column":4},"end":{"line":392,"column":5}},"loc":{"start":{"line":392,"column":25},"end":{"line":401,"column":5}},"line":392},"30":{"name":"(anonymous_30)","decl":{"start":{"line":393,"column":25},"end":{"line":393,"column":26}},"loc":{"start":{"line":393,"column":35},"end":{"line":393,"column":39}},"line":393},"31":{"name":"(anonymous_31)","decl":{"start":{"line":396,"column":17},"end":{"line":396,"column":18}},"loc":{"start":{"line":396,"column":23},"end":{"line":399,"column":14}},"line":396},"32":{"name":"(anonymous_32)","decl":{"start":{"line":397,"column":21},"end":{"line":397,"column":22}},"loc":{"start":{"line":397,"column":27},"end":{"line":397,"column":35}},"line":397},"33":{"name":"(anonymous_33)","decl":{"start":{"line":398,"column":23},"end":{"line":398,"column":24}},"loc":{"start":{"line":398,"column":50},"end":{"line":398,"column":63}},"line":398}},"branchMap":{"0":{"loc":{"start":{"line":29,"column":18},"end":{"line":29,"column":62}},"type":"cond-expr","locations":[{"start":{"line":29,"column":29},"end":{"line":29,"column":34}},{"start":{"line":29,"column":37},"end":{"line":29,"column":62}}],"line":29},"1":{"loc":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},{"start":{},"end":{}}],"line":37},"2":{"loc":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},{"start":{},"end":{}}],"line":41},"3":{"loc":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},{"start":{},"end":{}}],"line":45},"4":{"loc":{"start":{"line":45,"column":12},"end":{"line":45,"column":77}},"type":"binary-expr","locations":[{"start":{"line":45,"column":12},"end":{"line":45,"column":43}},{"start":{"line":45,"column":47},"end":{"line":45,"column":77}}],"line":45},"5":{"loc":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},{"start":{},"end":{}}],"line":58},"6":{"loc":{"start":{"line":58,"column":12},"end":{"line":58,"column":87}},"type":"binary-expr","locations":[{"start":{"line":58,"column":12},"end":{"line":58,"column":53}},{"start":{"line":58,"column":57},"end":{"line":58,"column":87}}],"line":58},"7":{"loc":{"start":{"line":61,"column":8},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":64,"column":9}},{"start":{},"end":{}}],"line":61},"8":{"loc":{"start":{"line":61,"column":12},"end":{"line":62,"column":85}},"type":"binary-expr","locations":[{"start":{"line":61,"column":12},"end":{"line":61,"column":27}},{"start":{"line":62,"column":12},"end":{"line":62,"column":85}}],"line":61},"9":{"loc":{"start":{"line":92,"column":8},"end":{"line":95,"column":9}},"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":95,"column":9}},{"start":{},"end":{}}],"line":92},"10":{"loc":{"start":{"line":112,"column":25},"end":{"line":114,"column":15}},"type":"cond-expr","locations":[{"start":{"line":113,"column":14},"end":{"line":113,"column":72}},{"start":{"line":114,"column":14},"end":{"line":114,"column":15}}],"line":112},"11":{"loc":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},{"start":{},"end":{}}],"line":115},"12":{"loc":{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},{"start":{},"end":{}}],"line":119},"13":{"loc":{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},"type":"if","locations":[{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},{"start":{},"end":{}}],"line":122},"14":{"loc":{"start":{"line":125,"column":8},"end":{"line":127,"column":9}},"type":"if","locations":[{"start":{"line":125,"column":8},"end":{"line":127,"column":9}},{"start":{},"end":{}}],"line":125},"15":{"loc":{"start":{"line":137,"column":26},"end":{"line":137,"column":59}},"type":"binary-expr","locations":[{"start":{"line":137,"column":26},"end":{"line":137,"column":53}},{"start":{"line":137,"column":57},"end":{"line":137,"column":59}}],"line":137},"16":{"loc":{"start":{"line":143,"column":12},"end":{"line":146,"column":13}},"type":"if","locations":[{"start":{"line":143,"column":12},"end":{"line":146,"column":13}},{"start":{},"end":{}}],"line":143},"17":{"loc":{"start":{"line":147,"column":12},"end":{"line":162,"column":13}},"type":"if","locations":[{"start":{"line":147,"column":12},"end":{"line":162,"column":13}},{"start":{},"end":{}}],"line":147},"18":{"loc":{"start":{"line":154,"column":20},"end":{"line":156,"column":21}},"type":"if","locations":[{"start":{"line":154,"column":20},"end":{"line":156,"column":21}},{"start":{},"end":{}}],"line":154},"19":{"loc":{"start":{"line":154,"column":24},"end":{"line":154,"column":68}},"type":"binary-expr","locations":[{"start":{"line":154,"column":24},"end":{"line":154,"column":47}},{"start":{"line":154,"column":51},"end":{"line":154,"column":68}}],"line":154},"20":{"loc":{"start":{"line":158,"column":16},"end":{"line":161,"column":17}},"type":"if","locations":[{"start":{"line":158,"column":16},"end":{"line":161,"column":17}},{"start":{},"end":{}}],"line":158},"21":{"loc":{"start":{"line":160,"column":80},"end":{"line":160,"column":106}},"type":"cond-expr","locations":[{"start":{"line":160,"column":98},"end":{"line":160,"column":100}},{"start":{"line":160,"column":103},"end":{"line":160,"column":106}}],"line":160},"22":{"loc":{"start":{"line":164,"column":12},"end":{"line":171,"column":13}},"type":"if","locations":[{"start":{"line":164,"column":12},"end":{"line":171,"column":13}},{"start":{},"end":{}}],"line":164},"23":{"loc":{"start":{"line":164,"column":16},"end":{"line":164,"column":93}},"type":"binary-expr","locations":[{"start":{"line":164,"column":16},"end":{"line":164,"column":40}},{"start":{"line":164,"column":44},"end":{"line":164,"column":72}},{"start":{"line":164,"column":76},"end":{"line":164,"column":93}}],"line":164},"24":{"loc":{"start":{"line":167,"column":20},"end":{"line":169,"column":21}},"type":"if","locations":[{"start":{"line":167,"column":20},"end":{"line":169,"column":21}},{"start":{},"end":{}}],"line":167},"25":{"loc":{"start":{"line":167,"column":24},"end":{"line":167,"column":78}},"type":"binary-expr","locations":[{"start":{"line":167,"column":24},"end":{"line":167,"column":49}},{"start":{"line":167,"column":53},"end":{"line":167,"column":78}}],"line":167},"26":{"loc":{"start":{"line":182,"column":8},"end":{"line":184,"column":9}},"type":"if","locations":[{"start":{"line":182,"column":8},"end":{"line":184,"column":9}},{"start":{},"end":{}}],"line":182},"27":{"loc":{"start":{"line":182,"column":12},"end":{"line":182,"column":67}},"type":"binary-expr","locations":[{"start":{"line":182,"column":12},"end":{"line":182,"column":39}},{"start":{"line":182,"column":43},"end":{"line":182,"column":67}}],"line":182},"28":{"loc":{"start":{"line":196,"column":12},"end":{"line":198,"column":13}},"type":"if","locations":[{"start":{"line":196,"column":12},"end":{"line":198,"column":13}},{"start":{},"end":{}}],"line":196},"29":{"loc":{"start":{"line":199,"column":12},"end":{"line":201,"column":13}},"type":"if","locations":[{"start":{"line":199,"column":12},"end":{"line":201,"column":13}},{"start":{},"end":{}}],"line":199},"30":{"loc":{"start":{"line":199,"column":16},"end":{"line":199,"column":58}},"type":"binary-expr","locations":[{"start":{"line":199,"column":16},"end":{"line":199,"column":30}},{"start":{"line":199,"column":34},"end":{"line":199,"column":58}}],"line":199},"31":{"loc":{"start":{"line":209,"column":8},"end":{"line":210,"column":22}},"type":"if","locations":[{"start":{"line":209,"column":8},"end":{"line":210,"column":22}},{"start":{},"end":{}}],"line":209},"32":{"loc":{"start":{"line":226,"column":8},"end":{"line":238,"column":9}},"type":"switch","locations":[{"start":{"line":227,"column":12},"end":{"line":229,"column":22}},{"start":{"line":230,"column":12},"end":{"line":232,"column":22}},{"start":{"line":233,"column":12},"end":{"line":235,"column":22}},{"start":{"line":236,"column":12},"end":{"line":237,"column":71}}],"line":226},"33":{"loc":{"start":{"line":239,"column":8},"end":{"line":244,"column":9}},"type":"if","locations":[{"start":{"line":239,"column":8},"end":{"line":244,"column":9}},{"start":{},"end":{}}],"line":239},"34":{"loc":{"start":{"line":251,"column":39},"end":{"line":251,"column":49}},"type":"default-arg","locations":[{"start":{"line":251,"column":47},"end":{"line":251,"column":49}}],"line":251},"35":{"loc":{"start":{"line":255,"column":22},"end":{"line":255,"column":86}},"type":"cond-expr","locations":[{"start":{"line":255,"column":41},"end":{"line":255,"column":48}},{"start":{"line":255,"column":51},"end":{"line":255,"column":86}}],"line":255},"36":{"loc":{"start":{"line":255,"column":51},"end":{"line":255,"column":86}},"type":"cond-expr","locations":[{"start":{"line":255,"column":70},"end":{"line":255,"column":78}},{"start":{"line":255,"column":81},"end":{"line":255,"column":86}}],"line":255},"37":{"loc":{"start":{"line":262,"column":8},"end":{"line":273,"column":9}},"type":"switch","locations":[{"start":{"line":263,"column":12},"end":{"line":264,"column":36}},{"start":{"line":265,"column":12},"end":{"line":266,"column":37}},{"start":{"line":267,"column":12},"end":{"line":268,"column":34}},{"start":{"line":269,"column":12},"end":{"line":270,"column":35}},{"start":{"line":271,"column":12},"end":{"line":272,"column":36}}],"line":262},"38":{"loc":{"start":{"line":279,"column":8},"end":{"line":290,"column":9}},"type":"switch","locations":[{"start":{"line":280,"column":12},"end":{"line":281,"column":27}},{"start":{"line":282,"column":12},"end":{"line":283,"column":28}},{"start":{"line":284,"column":12},"end":{"line":285,"column":27}},{"start":{"line":286,"column":12},"end":{"line":287,"column":28}},{"start":{"line":288,"column":12},"end":{"line":289,"column":28}}],"line":279},"39":{"loc":{"start":{"line":296,"column":8},"end":{"line":307,"column":9}},"type":"switch","locations":[{"start":{"line":297,"column":12},"end":{"line":298,"column":34}},{"start":{"line":299,"column":12},"end":{"line":300,"column":29}},{"start":{"line":301,"column":12},"end":{"line":302,"column":32}},{"start":{"line":303,"column":12},"end":{"line":304,"column":30}},{"start":{"line":305,"column":12},"end":{"line":306,"column":30}}],"line":296},"40":{"loc":{"start":{"line":313,"column":8},"end":{"line":324,"column":9}},"type":"switch","locations":[{"start":{"line":314,"column":12},"end":{"line":315,"column":28}},{"start":{"line":316,"column":12},"end":{"line":317,"column":27}},{"start":{"line":318,"column":12},"end":{"line":319,"column":28}},{"start":{"line":320,"column":12},"end":{"line":321,"column":28}},{"start":{"line":322,"column":12},"end":{"line":323,"column":27}}],"line":313},"41":{"loc":{"start":{"line":330,"column":8},"end":{"line":331,"column":32}},"type":"if","locations":[{"start":{"line":330,"column":8},"end":{"line":331,"column":32}},{"start":{},"end":{}}],"line":330},"42":{"loc":{"start":{"line":332,"column":8},"end":{"line":333,"column":46}},"type":"if","locations":[{"start":{"line":332,"column":8},"end":{"line":333,"column":46}},{"start":{},"end":{}}],"line":332},"43":{"loc":{"start":{"line":341,"column":8},"end":{"line":357,"column":9}},"type":"switch","locations":[{"start":{"line":342,"column":12},"end":{"line":350,"column":22}},{"start":{"line":351,"column":12},"end":{"line":353,"column":22}},{"start":{"line":354,"column":12},"end":{"line":356,"column":22}}],"line":341},"44":{"loc":{"start":{"line":349,"column":39},"end":{"line":349,"column":71}},"type":"binary-expr","locations":[{"start":{"line":349,"column":39},"end":{"line":349,"column":64}},{"start":{"line":349,"column":68},"end":{"line":349,"column":71}}],"line":349},"45":{"loc":{"start":{"line":349,"column":76},"end":{"line":349,"column":108}},"type":"binary-expr","locations":[{"start":{"line":349,"column":76},"end":{"line":349,"column":101}},{"start":{"line":349,"column":105},"end":{"line":349,"column":108}}],"line":349},"46":{"loc":{"start":{"line":364,"column":8},"end":{"line":365,"column":24}},"type":"if","locations":[{"start":{"line":364,"column":8},"end":{"line":365,"column":24}},{"start":{},"end":{}}],"line":364},"47":{"loc":{"start":{"line":371,"column":26},"end":{"line":371,"column":37}},"type":"default-arg","locations":[{"start":{"line":371,"column":35},"end":{"line":371,"column":37}}],"line":371},"48":{"loc":{"start":{"line":376,"column":12},"end":{"line":381,"column":13}},"type":"if","locations":[{"start":{"line":376,"column":12},"end":{"line":381,"column":13}},{"start":{},"end":{}}],"line":376},"49":{"loc":{"start":{"line":377,"column":16},"end":{"line":380,"column":17}},"type":"if","locations":[{"start":{"line":377,"column":16},"end":{"line":380,"column":17}},{"start":{},"end":{}}],"line":377},"50":{"loc":{"start":{"line":384,"column":8},"end":{"line":386,"column":9}},"type":"if","locations":[{"start":{"line":384,"column":8},"end":{"line":386,"column":9}},{"start":{},"end":{}}],"line":384},"51":{"loc":{"start":{"line":398,"column":50},"end":{"line":398,"column":63}},"type":"binary-expr","locations":[{"start":{"line":398,"column":50},"end":{"line":398,"column":57}},{"start":{"line":398,"column":61},"end":{"line":398,"column":63}}],"line":398}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0,0],"33":[0,0],"34":[0],"35":[0,0],"36":[0,0],"37":[0,0,0,0,0],"38":[0,0,0,0,0],"39":[0,0,0,0,0],"40":[0,0,0,0,0],"41":[0,0],"42":[0,0],"43":[0,0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0]},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/formatters/ConsoleFormatter.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/formatters/ConsoleFormatter.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Console Report Formatter\n *\n * Generates rich, colorful console output with progress indicators,\n * hierarchical display, and professional styling.\n */\n\nimport * as chalk from 'chalk';\nimport { MonitoringReport, MonitoringStatus, SeverityLevel } from '../../core/types';\nimport { ReportFormatter, ReportOptions, ReportValidationResult } from '../types';\n\n/**\n * Console formatter with rich styling and interactivity\n */\nexport class ConsoleFormatter implements ReportFormatter {\n  public readonly id = 'console';\n  public readonly name = 'Console Output';\n  public readonly extension = '.txt';\n  public readonly mimeType = 'text/plain';\n\n  /**\n   * Format the monitoring report for console output\n   */\n  public async format(report: MonitoringReport, options?: ReportOptions): Promise<string> {\n    const output: string[] = [];\n    const useColor = options?.colorOutput !== false;\n    const c = useColor ? chalk : this.createNoColorChalk();\n\n    // Header section\n    output.push(this.generateHeader(report, c, options));\n\n    // Summary section\n    output.push(this.generateSummary(report, c, options));\n\n    // Statistics section\n    output.push(this.generateStatistics(report, c, options));\n\n    // Module results section\n    if (options?.includeDetails !== false) {\n      output.push(this.generateModuleResults(report, c, options));\n    }\n\n    // Critical issues section\n    if (options?.includeDetails) {\n      output.push(this.generateCriticalIssues(report, c, options));\n    }\n\n    // Recommendations section\n    if (options?.includeRecommendations && report.recommendations?.length) {\n      output.push(this.generateRecommendations(report, c, options));\n    }\n\n    // Footer section\n    output.push(this.generateFooter(report, c, options));\n\n    return output.filter(section => section.trim()).join('\\n\\n');\n  }\n\n  /**\n   * Validate options for console formatting\n   */\n  public validateOptions(options?: ReportOptions): ReportValidationResult {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    if (options?.maxIssuesPerModule !== undefined && options.maxIssuesPerModule < 1) {\n      errors.push('maxIssuesPerModule must be at least 1');\n    }\n\n    if (\n      options?.sortBy &&\n      !['severity', 'module', 'category', 'timestamp'].includes(options.sortBy)\n    ) {\n      errors.push('sortBy must be one of: severity, module, category, timestamp');\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n      warnings,\n    };\n  }\n\n  // Private helper methods\n\n  /**\n   * Generate header section\n   */\n  private generateHeader(report: MonitoringReport, c: any, options?: ReportOptions): string {\n    const lines: string[] = [];\n\n    lines.push(c.blue('═'.repeat(80)));\n    lines.push(c.blue.bold('              DIAMOND VERIFICATION REPORT              '));\n    lines.push(c.blue('═'.repeat(80)));\n\n    return lines.join('\\n');\n  }\n\n  /**\n   * Generate summary section\n   */\n  private generateSummary(report: MonitoringReport, c: any, options?: ReportOptions): string {\n    const lines: string[] = [];\n\n    lines.push(c.cyan('📋 SUMMARY'));\n    lines.push(c.cyan('─'.repeat(40)));\n\n    lines.push(`Diamond: ${c.white.bold(report.diamond.name)}`);\n    lines.push(`Address: ${c.white(report.diamond.address)}`);\n    lines.push(`Network: ${c.white(report.network.name)} (Chain ID: ${report.network.chainId})`);\n\n    if (options?.includeMetadata) {\n      lines.push(`Timestamp: ${c.white(report.timestamp.toISOString())}`);\n      lines.push(`Duration: ${c.white((report.duration / 1000).toFixed(2))}s`);\n    }\n\n    // Status with proper styling\n    const statusColor = this.getStatusColor(report.summary.status, c);\n    const statusIcon = this.getStatusIcon(report.summary.status);\n    lines.push('');\n    lines.push(`Status: ${statusColor(`${statusIcon} ${report.summary.status}`)}`);\n\n    return lines.join('\\n');\n  }\n\n  /**\n   * Generate statistics section\n   */\n  private generateStatistics(report: MonitoringReport, c: any, options?: ReportOptions): string {\n    const lines: string[] = [];\n\n    lines.push(c.cyan('📊 STATISTICS'));\n    lines.push(c.cyan('─'.repeat(40)));\n\n    lines.push(`Total Checks: ${c.white.bold(report.summary.totalChecks)}`);\n\n    // Visual progress bar for checks\n    const passRate =\n      report.summary.totalChecks > 0\n        ? (report.summary.passed / report.summary.totalChecks) * 100\n        : 0;\n\n    if (!options?.compact) {\n      lines.push(this.generateProgressBar(passRate, c));\n    }\n\n    lines.push(`${c.green('✅ Passed:')} ${report.summary.passed}`);\n\n    if (report.summary.failed > 0) {\n      lines.push(`${c.red('❌ Failed:')} ${report.summary.failed}`);\n    }\n\n    if (report.summary.warnings > 0) {\n      lines.push(`${c.yellow('⚠️  Warnings:')} ${report.summary.warnings}`);\n    }\n\n    if (report.summary.skipped > 0) {\n      lines.push(`${c.gray('⏭️  Skipped:')} ${report.summary.skipped}`);\n    }\n\n    return lines.join('\\n');\n  }\n\n  /**\n   * Generate module results section\n   */\n  private generateModuleResults(report: MonitoringReport, c: any, options?: ReportOptions): string {\n    const lines: string[] = [];\n\n    lines.push(c.cyan('🧩 MODULE RESULTS'));\n    lines.push(c.cyan('─'.repeat(40)));\n\n    const maxIssues = options?.maxIssuesPerModule || 10;\n\n    for (const moduleResult of report.modules) {\n      const moduleStatusColor = this.getStatusColor(moduleResult.status, c);\n      const moduleIcon = this.getStatusIcon(moduleResult.status);\n\n      lines.push('');\n      lines.push(`${moduleStatusColor(`${moduleIcon} ${moduleResult.moduleName}`)}`);\n\n      if (!options?.compact) {\n        lines.push(`   Duration: ${c.gray((moduleResult.duration / 1000).toFixed(2))}s`);\n        lines.push(`   Issues: ${this.getIssueCountText(moduleResult.result.issues.length, c)}`);\n      }\n\n      if (moduleResult.result.issues.length > 0) {\n        const sortedIssues = this.sortIssues(moduleResult.result.issues, options?.sortBy);\n        const issuesToShow = sortedIssues.slice(0, maxIssues);\n\n        for (const issue of issuesToShow) {\n          const issueColor = this.getSeverityColor(issue.severity, c);\n          const issueIcon = this.getSeverityIcon(issue.severity);\n          lines.push(`     ${issueColor(`${issueIcon} ${issue.title}`)}`);\n\n          if (options?.includeDetails && !options?.compact) {\n            lines.push(`       ${c.gray(this.truncateText(issue.description, 80))}`);\n          }\n        }\n\n        if (moduleResult.result.issues.length > maxIssues) {\n          const remaining = moduleResult.result.issues.length - maxIssues;\n          lines.push(\n            `     ${c.gray(`... and ${remaining} more issue${remaining === 1 ? '' : 's'}`)}`\n          );\n        }\n      }\n\n      // Show metadata if available and detailed\n      if (options?.includeMetadata && moduleResult.result.metadata && !options?.compact) {\n        const metadata = moduleResult.result.metadata;\n        Object.entries(metadata).forEach(([key, value]) => {\n          if (typeof value === 'number' || typeof value === 'string') {\n            lines.push(`   ${c.dim(`${key}: ${value}`)}`);\n          }\n        });\n      }\n    }\n\n    return lines.join('\\n');\n  }\n\n  /**\n   * Generate critical issues section\n   */\n  private generateCriticalIssues(\n    report: MonitoringReport,\n    c: any,\n    options?: ReportOptions\n  ): string {\n    const allIssues = report.modules.flatMap(m => m.result.issues);\n    const criticalIssues = allIssues.filter(i => i.severity === SeverityLevel.CRITICAL);\n    const errorIssues = allIssues.filter(i => i.severity === SeverityLevel.ERROR);\n\n    if (criticalIssues.length === 0 && errorIssues.length === 0) {\n      return '';\n    }\n\n    const lines: string[] = [];\n    lines.push(c.red('🚨 CRITICAL & ERROR ISSUES'));\n    lines.push(c.red('─'.repeat(40)));\n\n    const highPriorityIssues = [...criticalIssues, ...errorIssues];\n\n    highPriorityIssues.forEach((issue, index) => {\n      const issueColor = this.getSeverityColor(issue.severity, c);\n      const issueIcon = this.getSeverityIcon(issue.severity);\n\n      lines.push('');\n      lines.push(`${index + 1}. ${issueColor(`${issueIcon} ${issue.title}`)}`);\n      lines.push(`   Category: ${c.dim(issue.category)}`);\n      lines.push(`   ${this.wrapText(issue.description, 77, '   ')}`);\n\n      if (issue.recommendation) {\n        lines.push(\n          `   ${c.blue('💡 Recommendation:')} ${this.wrapText(issue.recommendation, 60, '      ')}`\n        );\n      }\n\n      if (issue.metadata && options?.includeMetadata) {\n        lines.push(\n          `   ${c.dim('Metadata: ' + JSON.stringify(issue.metadata, null, 2).replace(/\\n/g, '\\n   '))}`\n        );\n      }\n    });\n\n    return lines.join('\\n');\n  }\n\n  /**\n   * Generate recommendations section\n   */\n  private generateRecommendations(\n    report: MonitoringReport,\n    c: any,\n    options?: ReportOptions\n  ): string {\n    if (!report.recommendations?.length) return '';\n\n    const lines: string[] = [];\n    lines.push(c.blue('💡 RECOMMENDATIONS'));\n    lines.push(c.blue('─'.repeat(40)));\n\n    report.recommendations.forEach((recommendation, index) => {\n      lines.push(`${index + 1}. ${this.wrapText(recommendation, 75, '   ')}`);\n    });\n\n    return lines.join('\\n');\n  }\n\n  /**\n   * Generate footer section\n   */\n  private generateFooter(report: MonitoringReport, c: any, options?: ReportOptions): string {\n    const lines: string[] = [];\n\n    lines.push(c.blue('═'.repeat(80)));\n\n    // Success message based on status\n    switch (report.summary.status) {\n      case MonitoringStatus.PASS:\n        lines.push(c.green('✅ Diamond monitoring completed successfully'));\n        break;\n      case MonitoringStatus.WARNING:\n        lines.push(c.yellow('⚠️  Diamond monitoring completed with warnings'));\n        break;\n      case MonitoringStatus.FAIL:\n        lines.push(c.red('❌ Diamond monitoring found critical issues'));\n        break;\n      default:\n        lines.push(c.gray('ℹ️  Diamond monitoring completed'));\n    }\n\n    if (!options?.compact) {\n      const moduleCount = report.modules.length;\n      const passedModules = report.modules.filter(m => m.status === MonitoringStatus.PASS).length;\n      lines.push('');\n      lines.push(c.gray(`Monitoring completed - ${passedModules}/${moduleCount} modules passed`));\n    }\n\n    return lines.join('\\n');\n  }\n\n  // Utility methods\n\n  /**\n   * Generate a progress bar\n   */\n  private generateProgressBar(percentage: number, c: any, width: number = 40): string {\n    const filled = Math.round((percentage / 100) * width);\n    const empty = width - filled;\n    const bar = '█'.repeat(filled) + '░'.repeat(empty);\n\n    const color = percentage >= 80 ? c.green : percentage >= 60 ? c.yellow : c.red;\n    return `Progress: [${color(bar)}] ${percentage.toFixed(1)}%`;\n  }\n\n  /**\n   * Get color for status\n   */\n  private getStatusColor(status: MonitoringStatus, c: any): any {\n    switch (status) {\n      case MonitoringStatus.PASS:\n        return c.green.bold;\n      case MonitoringStatus.WARNING:\n        return c.yellow.bold;\n      case MonitoringStatus.FAIL:\n        return c.red.bold;\n      case MonitoringStatus.SKIPPED:\n        return c.gray.bold;\n      default:\n        return c.white.bold;\n    }\n  }\n\n  /**\n   * Get icon for status\n   */\n  private getStatusIcon(status: MonitoringStatus): string {\n    switch (status) {\n      case MonitoringStatus.PASS:\n        return '✅';\n      case MonitoringStatus.WARNING:\n        return '⚠️';\n      case MonitoringStatus.FAIL:\n        return '❌';\n      case MonitoringStatus.SKIPPED:\n        return '⏭️';\n      default:\n        return 'ℹ️';\n    }\n  }\n\n  /**\n   * Get color for severity\n   */\n  private getSeverityColor(severity: SeverityLevel, c: any): any {\n    switch (severity) {\n      case SeverityLevel.CRITICAL:\n        return c.red.bold;\n      case SeverityLevel.ERROR:\n        return c.red;\n      case SeverityLevel.WARNING:\n        return c.yellow;\n      case SeverityLevel.INFO:\n        return c.blue;\n      default:\n        return c.gray;\n    }\n  }\n\n  /**\n   * Get icon for severity\n   */\n  private getSeverityIcon(severity: SeverityLevel): string {\n    switch (severity) {\n      case SeverityLevel.CRITICAL:\n        return '🚨';\n      case SeverityLevel.ERROR:\n        return '❌';\n      case SeverityLevel.WARNING:\n        return '⚠️';\n      case SeverityLevel.INFO:\n        return 'ℹ️';\n      default:\n        return '•';\n    }\n  }\n\n  /**\n   * Get issue count text with appropriate color\n   */\n  private getIssueCountText(count: number, c: any): string {\n    if (count === 0) return c.green('0');\n    if (count <= 3) return c.yellow(count.toString());\n    return c.red(count.toString());\n  }\n\n  /**\n   * Sort issues by specified criteria\n   */\n  private sortIssues(issues: any[], sortBy?: string): any[] {\n    const sorted = [...issues];\n\n    switch (sortBy) {\n      case 'severity':\n        const severityOrder: Record<string, number> = {\n          [SeverityLevel.CRITICAL]: 0,\n          [SeverityLevel.ERROR]: 1,\n          [SeverityLevel.WARNING]: 2,\n          [SeverityLevel.INFO]: 3,\n        };\n        sorted.sort(\n          (a, b) => (severityOrder[a.severity] || 999) - (severityOrder[b.severity] || 999)\n        );\n        break;\n      case 'category':\n        sorted.sort((a, b) => a.category.localeCompare(b.category));\n        break;\n      case 'module':\n        // Keep original order since they're already grouped by module\n        break;\n    }\n\n    return sorted;\n  }\n\n  /**\n   * Truncate text to specified length\n   */\n  private truncateText(text: string, maxLength: number): string {\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength - 3) + '...';\n  }\n\n  /**\n   * Wrap text to specified width with indentation\n   */\n  private wrapText(text: string, width: number, indent: string = ''): string {\n    const words = text.split(' ');\n    const lines: string[] = [];\n    let currentLine = '';\n\n    for (const word of words) {\n      if ((currentLine + word).length > width) {\n        if (currentLine) {\n          lines.push(indent + currentLine.trim());\n          currentLine = '';\n        }\n      }\n      currentLine += word + ' ';\n    }\n\n    if (currentLine.trim()) {\n      lines.push(indent + currentLine.trim());\n    }\n\n    return lines.join('\\n');\n  }\n\n  /**\n   * Create no-color chalk replacement\n   */\n  private createNoColorChalk(): any {\n    const identity = (text: string) => text;\n    const boldIdentity = Object.assign(identity, { bold: identity });\n\n    return new Proxy(\n      {},\n      {\n        get: () =>\n          new Proxy(boldIdentity, {\n            get: () => identity,\n            apply: (target, thisArg, args) => args[0] || '',\n          }),\n      }\n    );\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e555114daf5ae2b76e3ef29f892d9beec1a377c3","contentHash":"27d989d490d4adbcaa061b71111b2d266c8c9b71cb009f7b926a60882b6823ef"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/formatters/JSONFormatter.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/formatters/JSONFormatter.ts","statementMap":{"0":{"start":{"line":8,"column":0},"end":{"line":8,"column":62}},"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":31}},"2":{"start":{"line":15,"column":8},"end":{"line":15,"column":25}},"3":{"start":{"line":16,"column":8},"end":{"line":16,"column":34}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":33}},"5":{"start":{"line":18,"column":8},"end":{"line":18,"column":43}},"6":{"start":{"line":24,"column":27},"end":{"line":24,"column":65}},"7":{"start":{"line":26,"column":28},"end":{"line":26,"column":52}},"8":{"start":{"line":27,"column":8},"end":{"line":27,"column":85}},"9":{"start":{"line":33,"column":23},"end":{"line":33,"column":25}},"10":{"start":{"line":34,"column":25},"end":{"line":34,"column":27}},"11":{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},"12":{"start":{"line":37,"column":12},"end":{"line":37,"column":75}},"13":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"14":{"start":{"line":40,"column":12},"end":{"line":40,"column":75}},"15":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"16":{"start":{"line":43,"column":12},"end":{"line":43,"column":69}},"17":{"start":{"line":45,"column":8},"end":{"line":49,"column":10}},"18":{"start":{"line":56,"column":27},"end":{"line":100,"column":9}},"19":{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},"20":{"start":{"line":103,"column":12},"end":{"line":103,"column":64}},"21":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"22":{"start":{"line":107,"column":12},"end":{"line":107,"column":68}},"23":{"start":{"line":110,"column":8},"end":{"line":110,"column":71}},"24":{"start":{"line":111,"column":8},"end":{"line":111,"column":26}},"25":{"start":{"line":117,"column":8},"end":{"line":148,"column":11}},"26":{"start":{"line":118,"column":36},"end":{"line":134,"column":13}},"27":{"start":{"line":136,"column":12},"end":{"line":138,"column":13}},"28":{"start":{"line":137,"column":16},"end":{"line":137,"column":79}},"29":{"start":{"line":140,"column":12},"end":{"line":146,"column":13}},"30":{"start":{"line":141,"column":16},"end":{"line":145,"column":18}},"31":{"start":{"line":147,"column":12},"end":{"line":147,"column":35}},"32":{"start":{"line":154,"column":30},"end":{"line":154,"column":41}},"33":{"start":{"line":156,"column":8},"end":{"line":158,"column":9}},"34":{"start":{"line":157,"column":12},"end":{"line":157,"column":79}},"35":{"start":{"line":160,"column":8},"end":{"line":162,"column":9}},"36":{"start":{"line":161,"column":12},"end":{"line":161,"column":111}},"37":{"start":{"line":161,"column":62},"end":{"line":161,"column":109}},"38":{"start":{"line":164,"column":26},"end":{"line":164,"column":53}},"39":{"start":{"line":165,"column":8},"end":{"line":167,"column":9}},"40":{"start":{"line":166,"column":12},"end":{"line":166,"column":66}},"41":{"start":{"line":168,"column":8},"end":{"line":176,"column":12}},"42":{"start":{"line":168,"column":45},"end":{"line":176,"column":9}},"43":{"start":{"line":182,"column":26},"end":{"line":182,"column":70}},"44":{"start":{"line":182,"column":54},"end":{"line":182,"column":69}},"45":{"start":{"line":184,"column":31},"end":{"line":189,"column":9}},"46":{"start":{"line":185,"column":44},"end":{"line":185,"column":69}},"47":{"start":{"line":186,"column":41},"end":{"line":186,"column":63}},"48":{"start":{"line":187,"column":43},"end":{"line":187,"column":67}},"49":{"start":{"line":188,"column":40},"end":{"line":188,"column":61}},"50":{"start":{"line":191,"column":28},"end":{"line":191,"column":37}},"51":{"start":{"line":192,"column":8},"end":{"line":194,"column":11}},"52":{"start":{"line":193,"column":12},"end":{"line":193,"column":88}},"53":{"start":{"line":196,"column":34},"end":{"line":201,"column":11}},"54":{"start":{"line":196,"column":59},"end":{"line":201,"column":9}},"55":{"start":{"line":202,"column":8},"end":{"line":210,"column":10}},"56":{"start":{"line":208,"column":63},"end":{"line":208,"column":79}},"57":{"start":{"line":216,"column":26},"end":{"line":216,"column":70}},"58":{"start":{"line":216,"column":54},"end":{"line":216,"column":69}},"59":{"start":{"line":218,"column":31},"end":{"line":218,"column":79}},"60":{"start":{"line":218,"column":53},"end":{"line":218,"column":78}},"61":{"start":{"line":219,"column":28},"end":{"line":219,"column":73}},"62":{"start":{"line":219,"column":50},"end":{"line":219,"column":72}},"63":{"start":{"line":221,"column":31},"end":{"line":221,"column":40}},"64":{"start":{"line":222,"column":8},"end":{"line":224,"column":11}},"65":{"start":{"line":223,"column":12},"end":{"line":223,"column":69}},"66":{"start":{"line":225,"column":39},"end":{"line":228,"column":66}},"67":{"start":{"line":226,"column":36},"end":{"line":226,"column":41}},"68":{"start":{"line":228,"column":37},"end":{"line":228,"column":64}},"69":{"start":{"line":230,"column":28},"end":{"line":230,"column":37}},"70":{"start":{"line":231,"column":8},"end":{"line":233,"column":11}},"71":{"start":{"line":232,"column":12},"end":{"line":232,"column":88}},"72":{"start":{"line":234,"column":30},"end":{"line":237,"column":62}},"73":{"start":{"line":235,"column":36},"end":{"line":235,"column":41}},"74":{"start":{"line":237,"column":41},"end":{"line":237,"column":60}},"75":{"start":{"line":238,"column":8},"end":{"line":249,"column":10}},"76":{"start":{"line":242,"column":68},"end":{"line":242,"column":75}},"77":{"start":{"line":243,"column":62},"end":{"line":243,"column":69}},"78":{"start":{"line":255,"column":23},"end":{"line":255,"column":34}},"79":{"start":{"line":256,"column":8},"end":{"line":277,"column":9}},"80":{"start":{"line":258,"column":38},"end":{"line":263,"column":17}},"81":{"start":{"line":264,"column":16},"end":{"line":264,"column":111}},"82":{"start":{"line":264,"column":38},"end":{"line":264,"column":109}},"83":{"start":{"line":265,"column":16},"end":{"line":265,"column":22}},"84":{"start":{"line":267,"column":16},"end":{"line":267,"column":76}},"85":{"start":{"line":267,"column":38},"end":{"line":267,"column":74}},"86":{"start":{"line":268,"column":16},"end":{"line":268,"column":22}},"87":{"start":{"line":271,"column":16},"end":{"line":275,"column":19}},"88":{"start":{"line":272,"column":39},"end":{"line":272,"column":65}},"89":{"start":{"line":273,"column":39},"end":{"line":273,"column":65}},"90":{"start":{"line":274,"column":20},"end":{"line":274,"column":51}},"91":{"start":{"line":276,"column":16},"end":{"line":276,"column":22}},"92":{"start":{"line":278,"column":8},"end":{"line":278,"column":22}},"93":{"start":{"line":284,"column":8},"end":{"line":294,"column":9}},"94":{"start":{"line":285,"column":12},"end":{"line":285,"column":29}},"95":{"start":{"line":287,"column":13},"end":{"line":294,"column":9}},"96":{"start":{"line":288,"column":12},"end":{"line":288,"column":48}},"97":{"start":{"line":291,"column":28},"end":{"line":291,"column":50}},"98":{"start":{"line":292,"column":28},"end":{"line":292,"column":60}},"99":{"start":{"line":293,"column":12},"end":{"line":293,"column":45}},"100":{"start":{"line":300,"column":8},"end":{"line":301,"column":22}},"101":{"start":{"line":301,"column":12},"end":{"line":301,"column":22}},"102":{"start":{"line":302,"column":8},"end":{"line":311,"column":10}},"103":{"start":{"line":318,"column":26},"end":{"line":329,"column":11}},"104":{"start":{"line":320,"column":12},"end":{"line":321,"column":36}},"105":{"start":{"line":321,"column":16},"end":{"line":321,"column":36}},"106":{"start":{"line":323,"column":12},"end":{"line":327,"column":13}},"107":{"start":{"line":326,"column":16},"end":{"line":326,"column":36}},"108":{"start":{"line":328,"column":12},"end":{"line":328,"column":25}},"109":{"start":{"line":330,"column":8},"end":{"line":330,"column":25}},"110":{"start":{"line":336,"column":8},"end":{"line":337,"column":29}},"111":{"start":{"line":337,"column":12},"end":{"line":337,"column":29}},"112":{"start":{"line":338,"column":8},"end":{"line":348,"column":10}},"113":{"start":{"line":340,"column":12},"end":{"line":341,"column":33}},"114":{"start":{"line":341,"column":16},"end":{"line":341,"column":33}},"115":{"start":{"line":343,"column":12},"end":{"line":344,"column":33}},"116":{"start":{"line":344,"column":16},"end":{"line":344,"column":33}},"117":{"start":{"line":345,"column":12},"end":{"line":346,"column":33}},"118":{"start":{"line":346,"column":16},"end":{"line":346,"column":33}},"119":{"start":{"line":347,"column":12},"end":{"line":347,"column":25}},"120":{"start":{"line":351,"column":0},"end":{"line":351,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":18},"end":{"line":19,"column":5}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":34},"end":{"line":28,"column":5}},"line":23},"2":{"name":"(anonymous_2)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":29},"end":{"line":50,"column":5}},"line":32},"3":{"name":"(anonymous_3)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":38},"end":{"line":112,"column":5}},"line":55},"4":{"name":"(anonymous_4)","decl":{"start":{"line":116,"column":4},"end":{"line":116,"column":5}},"loc":{"start":{"line":116,"column":36},"end":{"line":149,"column":5}},"line":116},"5":{"name":"(anonymous_5)","decl":{"start":{"line":117,"column":27},"end":{"line":117,"column":28}},"loc":{"start":{"line":117,"column":43},"end":{"line":148,"column":9}},"line":117},"6":{"name":"(anonymous_6)","decl":{"start":{"line":153,"column":4},"end":{"line":153,"column":5}},"loc":{"start":{"line":153,"column":34},"end":{"line":177,"column":5}},"line":153},"7":{"name":"(anonymous_7)","decl":{"start":{"line":161,"column":53},"end":{"line":161,"column":54}},"loc":{"start":{"line":161,"column":62},"end":{"line":161,"column":109}},"line":161},"8":{"name":"(anonymous_8)","decl":{"start":{"line":168,"column":35},"end":{"line":168,"column":36}},"loc":{"start":{"line":168,"column":45},"end":{"line":176,"column":9}},"line":168},"9":{"name":"(anonymous_9)","decl":{"start":{"line":181,"column":4},"end":{"line":181,"column":5}},"loc":{"start":{"line":181,"column":31},"end":{"line":211,"column":5}},"line":181},"10":{"name":"(anonymous_10)","decl":{"start":{"line":182,"column":49},"end":{"line":182,"column":50}},"loc":{"start":{"line":182,"column":54},"end":{"line":182,"column":69}},"line":182},"11":{"name":"(anonymous_11)","decl":{"start":{"line":185,"column":39},"end":{"line":185,"column":40}},"loc":{"start":{"line":185,"column":44},"end":{"line":185,"column":69}},"line":185},"12":{"name":"(anonymous_12)","decl":{"start":{"line":186,"column":36},"end":{"line":186,"column":37}},"loc":{"start":{"line":186,"column":41},"end":{"line":186,"column":63}},"line":186},"13":{"name":"(anonymous_13)","decl":{"start":{"line":187,"column":38},"end":{"line":187,"column":39}},"loc":{"start":{"line":187,"column":43},"end":{"line":187,"column":67}},"line":187},"14":{"name":"(anonymous_14)","decl":{"start":{"line":188,"column":35},"end":{"line":188,"column":36}},"loc":{"start":{"line":188,"column":40},"end":{"line":188,"column":61}},"line":188},"15":{"name":"(anonymous_15)","decl":{"start":{"line":192,"column":26},"end":{"line":192,"column":27}},"loc":{"start":{"line":192,"column":35},"end":{"line":194,"column":9}},"line":192},"16":{"name":"(anonymous_16)","decl":{"start":{"line":196,"column":53},"end":{"line":196,"column":54}},"loc":{"start":{"line":196,"column":59},"end":{"line":201,"column":9}},"line":196},"17":{"name":"(anonymous_17)","decl":{"start":{"line":208,"column":51},"end":{"line":208,"column":52}},"loc":{"start":{"line":208,"column":63},"end":{"line":208,"column":79}},"line":208},"18":{"name":"(anonymous_18)","decl":{"start":{"line":215,"column":4},"end":{"line":215,"column":5}},"loc":{"start":{"line":215,"column":35},"end":{"line":250,"column":5}},"line":215},"19":{"name":"(anonymous_19)","decl":{"start":{"line":216,"column":49},"end":{"line":216,"column":50}},"loc":{"start":{"line":216,"column":54},"end":{"line":216,"column":69}},"line":216},"20":{"name":"(anonymous_20)","decl":{"start":{"line":218,"column":48},"end":{"line":218,"column":49}},"loc":{"start":{"line":218,"column":53},"end":{"line":218,"column":78}},"line":218},"21":{"name":"(anonymous_21)","decl":{"start":{"line":219,"column":45},"end":{"line":219,"column":46}},"loc":{"start":{"line":219,"column":50},"end":{"line":219,"column":72}},"line":219},"22":{"name":"(anonymous_22)","decl":{"start":{"line":222,"column":31},"end":{"line":222,"column":32}},"loc":{"start":{"line":222,"column":36},"end":{"line":224,"column":9}},"line":222},"23":{"name":"(anonymous_23)","decl":{"start":{"line":226,"column":18},"end":{"line":226,"column":19}},"loc":{"start":{"line":226,"column":36},"end":{"line":226,"column":41}},"line":226},"24":{"name":"(anonymous_24)","decl":{"start":{"line":228,"column":17},"end":{"line":228,"column":18}},"loc":{"start":{"line":228,"column":37},"end":{"line":228,"column":64}},"line":228},"25":{"name":"(anonymous_25)","decl":{"start":{"line":231,"column":26},"end":{"line":231,"column":27}},"loc":{"start":{"line":231,"column":35},"end":{"line":233,"column":9}},"line":231},"26":{"name":"(anonymous_26)","decl":{"start":{"line":235,"column":18},"end":{"line":235,"column":19}},"loc":{"start":{"line":235,"column":36},"end":{"line":235,"column":41}},"line":235},"27":{"name":"(anonymous_27)","decl":{"start":{"line":237,"column":17},"end":{"line":237,"column":18}},"loc":{"start":{"line":237,"column":41},"end":{"line":237,"column":60}},"line":237},"28":{"name":"(anonymous_28)","decl":{"start":{"line":242,"column":63},"end":{"line":242,"column":64}},"loc":{"start":{"line":242,"column":68},"end":{"line":242,"column":75}},"line":242},"29":{"name":"(anonymous_29)","decl":{"start":{"line":243,"column":57},"end":{"line":243,"column":58}},"loc":{"start":{"line":243,"column":62},"end":{"line":243,"column":69}},"line":243},"30":{"name":"(anonymous_30)","decl":{"start":{"line":254,"column":4},"end":{"line":254,"column":5}},"loc":{"start":{"line":254,"column":31},"end":{"line":279,"column":5}},"line":254},"31":{"name":"(anonymous_31)","decl":{"start":{"line":264,"column":28},"end":{"line":264,"column":29}},"loc":{"start":{"line":264,"column":38},"end":{"line":264,"column":109}},"line":264},"32":{"name":"(anonymous_32)","decl":{"start":{"line":267,"column":28},"end":{"line":267,"column":29}},"loc":{"start":{"line":267,"column":38},"end":{"line":267,"column":74}},"line":267},"33":{"name":"(anonymous_33)","decl":{"start":{"line":271,"column":28},"end":{"line":271,"column":29}},"loc":{"start":{"line":271,"column":38},"end":{"line":275,"column":17}},"line":271},"34":{"name":"(anonymous_34)","decl":{"start":{"line":283,"column":4},"end":{"line":283,"column":5}},"loc":{"start":{"line":283,"column":23},"end":{"line":295,"column":5}},"line":283},"35":{"name":"(anonymous_35)","decl":{"start":{"line":299,"column":4},"end":{"line":299,"column":5}},"loc":{"start":{"line":299,"column":29},"end":{"line":312,"column":5}},"line":299},"36":{"name":"(anonymous_36)","decl":{"start":{"line":316,"column":4},"end":{"line":316,"column":5}},"loc":{"start":{"line":316,"column":27},"end":{"line":331,"column":5}},"line":316},"37":{"name":"(anonymous_37)","decl":{"start":{"line":318,"column":60},"end":{"line":318,"column":61}},"loc":{"start":{"line":318,"column":76},"end":{"line":329,"column":9}},"line":318},"38":{"name":"(anonymous_38)","decl":{"start":{"line":335,"column":4},"end":{"line":335,"column":5}},"loc":{"start":{"line":335,"column":28},"end":{"line":349,"column":5}},"line":335},"39":{"name":"(anonymous_39)","decl":{"start":{"line":338,"column":15},"end":{"line":338,"column":16}},"loc":{"start":{"line":338,"column":31},"end":{"line":348,"column":9}},"line":338}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":28},"end":{"line":26,"column":52}},"type":"cond-expr","locations":[{"start":{"line":26,"column":47},"end":{"line":26,"column":48}},{"start":{"line":26,"column":51},"end":{"line":26,"column":52}}],"line":26},"1":{"loc":{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},{"start":{},"end":{}}],"line":36},"2":{"loc":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},{"start":{},"end":{}}],"line":39},"3":{"loc":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},{"start":{},"end":{}}],"line":42},"4":{"loc":{"start":{"line":72,"column":29},"end":{"line":74,"column":26}},"type":"cond-expr","locations":[{"start":{"line":73,"column":22},"end":{"line":73,"column":99}},{"start":{"line":74,"column":22},"end":{"line":74,"column":26}}],"line":72},"5":{"loc":{"start":{"line":99,"column":20},"end":{"line":99,"column":93}},"type":"cond-expr","locations":[{"start":{"line":99,"column":47},"end":{"line":99,"column":81}},{"start":{"line":99,"column":84},"end":{"line":99,"column":93}}],"line":99},"6":{"loc":{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},"type":"if","locations":[{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},{"start":{},"end":{}}],"line":102},"7":{"loc":{"start":{"line":102,"column":12},"end":{"line":102,"column":77}},"type":"binary-expr","locations":[{"start":{"line":102,"column":12},"end":{"line":102,"column":43}},{"start":{"line":102,"column":47},"end":{"line":102,"column":77}}],"line":102},"8":{"loc":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},{"start":{},"end":{}}],"line":106},"9":{"loc":{"start":{"line":136,"column":12},"end":{"line":138,"column":13}},"type":"if","locations":[{"start":{"line":136,"column":12},"end":{"line":138,"column":13}},{"start":{},"end":{}}],"line":136},"10":{"loc":{"start":{"line":136,"column":16},"end":{"line":136,"column":72}},"type":"binary-expr","locations":[{"start":{"line":136,"column":16},"end":{"line":136,"column":40}},{"start":{"line":136,"column":44},"end":{"line":136,"column":72}}],"line":136},"11":{"loc":{"start":{"line":140,"column":12},"end":{"line":146,"column":13}},"type":"if","locations":[{"start":{"line":140,"column":12},"end":{"line":146,"column":13}},{"start":{},"end":{}}],"line":140},"12":{"loc":{"start":{"line":144,"column":27},"end":{"line":144,"column":90}},"type":"cond-expr","locations":[{"start":{"line":144,"column":54},"end":{"line":144,"column":78}},{"start":{"line":144,"column":81},"end":{"line":144,"column":90}}],"line":144},"13":{"loc":{"start":{"line":156,"column":8},"end":{"line":158,"column":9}},"type":"if","locations":[{"start":{"line":156,"column":8},"end":{"line":158,"column":9}},{"start":{},"end":{}}],"line":156},"14":{"loc":{"start":{"line":160,"column":8},"end":{"line":162,"column":9}},"type":"if","locations":[{"start":{"line":160,"column":8},"end":{"line":162,"column":9}},{"start":{},"end":{}}],"line":160},"15":{"loc":{"start":{"line":165,"column":8},"end":{"line":167,"column":9}},"type":"if","locations":[{"start":{"line":165,"column":8},"end":{"line":167,"column":9}},{"start":{},"end":{}}],"line":165},"16":{"loc":{"start":{"line":165,"column":12},"end":{"line":165,"column":38}},"type":"binary-expr","locations":[{"start":{"line":165,"column":12},"end":{"line":165,"column":21}},{"start":{"line":165,"column":25},"end":{"line":165,"column":38}}],"line":165},"17":{"loc":{"start":{"line":175,"column":22},"end":{"line":175,"column":75}},"type":"cond-expr","locations":[{"start":{"line":175,"column":49},"end":{"line":175,"column":63}},{"start":{"line":175,"column":66},"end":{"line":175,"column":75}}],"line":175},"18":{"loc":{"start":{"line":193,"column":45},"end":{"line":193,"column":81}},"type":"binary-expr","locations":[{"start":{"line":193,"column":45},"end":{"line":193,"column":76}},{"start":{"line":193,"column":80},"end":{"line":193,"column":81}}],"line":193},"19":{"loc":{"start":{"line":207,"column":35},"end":{"line":209,"column":19}},"type":"cond-expr","locations":[{"start":{"line":208,"column":18},"end":{"line":208,"column":108}},{"start":{"line":209,"column":18},"end":{"line":209,"column":19}}],"line":207},"20":{"loc":{"start":{"line":232,"column":45},"end":{"line":232,"column":81}},"type":"binary-expr","locations":[{"start":{"line":232,"column":45},"end":{"line":232,"column":76}},{"start":{"line":232,"column":80},"end":{"line":232,"column":81}}],"line":232},"21":{"loc":{"start":{"line":247,"column":31},"end":{"line":247,"column":82}},"type":"binary-expr","locations":[{"start":{"line":247,"column":31},"end":{"line":247,"column":56}},{"start":{"line":247,"column":60},"end":{"line":247,"column":82}}],"line":247},"22":{"loc":{"start":{"line":256,"column":8},"end":{"line":277,"column":9}},"type":"switch","locations":[{"start":{"line":257,"column":12},"end":{"line":265,"column":22}},{"start":{"line":266,"column":12},"end":{"line":268,"column":22}},{"start":{"line":269,"column":12},"end":{"line":276,"column":22}}],"line":256},"23":{"loc":{"start":{"line":264,"column":39},"end":{"line":264,"column":71}},"type":"binary-expr","locations":[{"start":{"line":264,"column":39},"end":{"line":264,"column":64}},{"start":{"line":264,"column":68},"end":{"line":264,"column":71}}],"line":264},"24":{"loc":{"start":{"line":264,"column":76},"end":{"line":264,"column":108}},"type":"binary-expr","locations":[{"start":{"line":264,"column":76},"end":{"line":264,"column":101}},{"start":{"line":264,"column":105},"end":{"line":264,"column":108}}],"line":264},"25":{"loc":{"start":{"line":272,"column":39},"end":{"line":272,"column":65}},"type":"binary-expr","locations":[{"start":{"line":272,"column":39},"end":{"line":272,"column":60}},{"start":{"line":272,"column":64},"end":{"line":272,"column":65}}],"line":272},"26":{"loc":{"start":{"line":273,"column":39},"end":{"line":273,"column":65}},"type":"binary-expr","locations":[{"start":{"line":273,"column":39},"end":{"line":273,"column":60}},{"start":{"line":273,"column":64},"end":{"line":273,"column":65}}],"line":273},"27":{"loc":{"start":{"line":284,"column":8},"end":{"line":294,"column":9}},"type":"if","locations":[{"start":{"line":284,"column":8},"end":{"line":294,"column":9}},{"start":{"line":287,"column":13},"end":{"line":294,"column":9}}],"line":284},"28":{"loc":{"start":{"line":287,"column":13},"end":{"line":294,"column":9}},"type":"if","locations":[{"start":{"line":287,"column":13},"end":{"line":294,"column":9}},{"start":{"line":290,"column":13},"end":{"line":294,"column":9}}],"line":287},"29":{"loc":{"start":{"line":300,"column":8},"end":{"line":301,"column":22}},"type":"if","locations":[{"start":{"line":300,"column":8},"end":{"line":301,"column":22}},{"start":{},"end":{}}],"line":300},"30":{"loc":{"start":{"line":320,"column":12},"end":{"line":321,"column":36}},"type":"if","locations":[{"start":{"line":320,"column":12},"end":{"line":321,"column":36}},{"start":{},"end":{}}],"line":320},"31":{"loc":{"start":{"line":323,"column":12},"end":{"line":327,"column":13}},"type":"if","locations":[{"start":{"line":323,"column":12},"end":{"line":327,"column":13}},{"start":{},"end":{}}],"line":323},"32":{"loc":{"start":{"line":323,"column":16},"end":{"line":325,"column":54}},"type":"binary-expr","locations":[{"start":{"line":323,"column":16},"end":{"line":323,"column":49}},{"start":{"line":324,"column":16},"end":{"line":324,"column":52}},{"start":{"line":325,"column":16},"end":{"line":325,"column":54}}],"line":323},"33":{"loc":{"start":{"line":336,"column":8},"end":{"line":337,"column":29}},"type":"if","locations":[{"start":{"line":336,"column":8},"end":{"line":337,"column":29}},{"start":{},"end":{}}],"line":336},"34":{"loc":{"start":{"line":340,"column":12},"end":{"line":341,"column":33}},"type":"if","locations":[{"start":{"line":340,"column":12},"end":{"line":341,"column":33}},{"start":{},"end":{}}],"line":340},"35":{"loc":{"start":{"line":340,"column":16},"end":{"line":340,"column":53}},"type":"binary-expr","locations":[{"start":{"line":340,"column":16},"end":{"line":340,"column":30}},{"start":{"line":340,"column":34},"end":{"line":340,"column":53}}],"line":340},"36":{"loc":{"start":{"line":343,"column":12},"end":{"line":344,"column":33}},"type":"if","locations":[{"start":{"line":343,"column":12},"end":{"line":344,"column":33}},{"start":{},"end":{}}],"line":343},"37":{"loc":{"start":{"line":343,"column":16},"end":{"line":343,"column":58}},"type":"binary-expr","locations":[{"start":{"line":343,"column":16},"end":{"line":343,"column":36}},{"start":{"line":343,"column":40},"end":{"line":343,"column":58}}],"line":343},"38":{"loc":{"start":{"line":345,"column":12},"end":{"line":346,"column":33}},"type":"if","locations":[{"start":{"line":345,"column":12},"end":{"line":346,"column":33}},{"start":{},"end":{}}],"line":345},"39":{"loc":{"start":{"line":345,"column":16},"end":{"line":345,"column":76}},"type":"binary-expr","locations":[{"start":{"line":345,"column":16},"end":{"line":345,"column":41}},{"start":{"line":345,"column":45},"end":{"line":345,"column":76}}],"line":345}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0]},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/formatters/JSONFormatter.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/formatters/JSONFormatter.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * JSON Report Formatter\n *\n * Generates structured JSON reports suitable for CI/CD integration,\n * machine processing, and API consumption.\n */\n\nimport { MonitoringReport } from '../../core/types';\nimport { ReportFormatter, ReportOptions, ReportValidationResult } from '../types';\n\n/**\n * JSON formatter for machine-readable reports\n */\nexport class JSONFormatter implements ReportFormatter {\n  public readonly id = 'json';\n  public readonly name = 'JSON Report';\n  public readonly extension = '.json';\n  public readonly mimeType = 'application/json';\n\n  /**\n   * Format the monitoring report as JSON\n   */\n  public async format(report: MonitoringReport, options?: ReportOptions): Promise<string> {\n    const jsonReport = this.createJSONReport(report, options);\n\n    // Pretty print or compact based on options\n    const indentation = options?.compact ? 0 : 2;\n\n    return JSON.stringify(jsonReport, this.createReplacer(options), indentation);\n  }\n\n  /**\n   * Validate options for JSON formatting\n   */\n  public validateOptions(options?: ReportOptions): ReportValidationResult {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    // JSON formatter accepts most options, but warn about irrelevant ones\n    if (options?.colorOutput) {\n      warnings.push('colorOutput option is ignored for JSON format');\n    }\n\n    if (options?.interactive) {\n      warnings.push('interactive option is ignored for JSON format');\n    }\n\n    if (options?.theme) {\n      warnings.push('theme option is ignored for JSON format');\n    }\n\n    return {\n      isValid: true,\n      errors,\n      warnings,\n    };\n  }\n\n  // Private helper methods\n\n  /**\n   * Create the complete JSON report structure\n   */\n  private createJSONReport(report: MonitoringReport, options?: ReportOptions): any {\n    const jsonReport: any = {\n      // Metadata\n      reportMetadata: {\n        generatedAt: new Date().toISOString(),\n        formatVersion: '1.0.0',\n        generatorVersion: '1.0.0',\n        options: this.sanitizeOptions(options),\n      },\n\n      // Core report data\n      summary: {\n        status: report.summary.status,\n        totalChecks: report.summary.totalChecks,\n        passed: report.summary.passed,\n        failed: report.summary.failed,\n        warnings: report.summary.warnings,\n        skipped: report.summary.skipped,\n        successRate:\n          report.summary.totalChecks > 0\n            ? ((report.summary.passed / report.summary.totalChecks) * 100).toFixed(2) + '%'\n            : '0%',\n      },\n\n      // Diamond information\n      diamond: {\n        name: report.diamond.name,\n        address: report.diamond.address,\n        configPath: report.diamond.configPath,\n        deploymentBlock: report.diamond.deploymentBlock,\n      },\n\n      // Network information\n      network: {\n        name: report.network.name,\n        chainId: report.network.chainId,\n        rpcUrl: report.network.rpcUrl,\n        blockExplorerUrl: report.network.blockExplorerUrl,\n      },\n\n      // Execution metadata\n      execution: {\n        timestamp: report.timestamp.toISOString(),\n        duration: report.duration,\n        durationHuman: this.formatDuration(report.duration),\n      },\n\n      // Module results\n      modules: this.formatModules(report.modules, options),\n\n      // Configuration\n      config: options?.includeMetadata ? this.sanitizeConfig(report.config) : undefined,\n    };\n\n    // Add recommendations if present and requested\n    if (options?.includeRecommendations && report.recommendations?.length) {\n      jsonReport.recommendations = report.recommendations;\n    }\n\n    // Add aggregated statistics\n    if (options?.includeMetadata) {\n      jsonReport.statistics = this.generateStatistics(report);\n    }\n\n    // Add issue analysis\n    jsonReport.issueAnalysis = this.analyzeIssues(report, options);\n\n    return jsonReport;\n  }\n\n  /**\n   * Format module results for JSON\n   */\n  private formatModules(modules: any[], options?: ReportOptions): any[] {\n    return modules.map(moduleResult => {\n      const formattedModule: any = {\n        moduleId: moduleResult.moduleId,\n        moduleName: moduleResult.moduleName,\n        status: moduleResult.status,\n        execution: {\n          startTime: moduleResult.startTime.toISOString(),\n          endTime: moduleResult.endTime.toISOString(),\n          duration: moduleResult.duration,\n          durationHuman: this.formatDuration(moduleResult.duration),\n        },\n        result: {\n          status: moduleResult.result.status,\n          executionTime: moduleResult.result.executionTime,\n          issueCount: moduleResult.result.issues.length,\n          issues: this.formatIssues(moduleResult.result.issues, options),\n        },\n      };\n\n      // Add metadata if present and requested\n      if (options?.includeMetadata && moduleResult.result.metadata) {\n        formattedModule.result.metadata = moduleResult.result.metadata;\n      }\n\n      // Add error information if present\n      if (moduleResult.error) {\n        formattedModule.error = {\n          message: moduleResult.error.message,\n          name: moduleResult.error.name,\n          stack: options?.includeMetadata ? moduleResult.error.stack : undefined,\n        };\n      }\n\n      return formattedModule;\n    });\n  }\n\n  /**\n   * Format issues for JSON\n   */\n  private formatIssues(issues: any[], options?: ReportOptions): any[] {\n    let processedIssues = [...issues];\n\n    // Apply sorting if specified\n    if (options?.sortBy) {\n      processedIssues = this.sortIssues(processedIssues, options.sortBy);\n    }\n\n    // Apply filtering if specified\n    if (options?.severityFilter?.length) {\n      processedIssues = processedIssues.filter(issue =>\n        options.severityFilter!.includes(issue.severity)\n      );\n    }\n\n    // Apply limit if specified\n    const maxIssues = options?.maxIssuesPerModule;\n    if (maxIssues && maxIssues > 0) {\n      processedIssues = processedIssues.slice(0, maxIssues);\n    }\n\n    return processedIssues.map(issue => ({\n      id: issue.id,\n      title: issue.title,\n      description: issue.description,\n      severity: issue.severity,\n      category: issue.category,\n      recommendation: issue.recommendation,\n      metadata: options?.includeMetadata ? issue.metadata : undefined,\n    }));\n  }\n\n  /**\n   * Generate aggregated statistics\n   */\n  private generateStatistics(report: MonitoringReport): any {\n    const allIssues = report.modules.flatMap(m => m.result.issues);\n\n    // Issue count by severity\n    const severityCounts = {\n      critical: allIssues.filter(i => i.severity === 'critical').length,\n      error: allIssues.filter(i => i.severity === 'error').length,\n      warning: allIssues.filter(i => i.severity === 'warning').length,\n      info: allIssues.filter(i => i.severity === 'info').length,\n    };\n\n    // Issue count by category\n    const categoryMap = new Map<string, number>();\n    allIssues.forEach(issue => {\n      categoryMap.set(issue.category, (categoryMap.get(issue.category) || 0) + 1);\n    });\n\n    // Module performance\n    const modulePerformance = report.modules.map(m => ({\n      name: m.moduleName,\n      duration: m.duration,\n      issueCount: m.result.issues.length,\n      status: m.status,\n    }));\n\n    return {\n      totalIssues: allIssues.length,\n      severityDistribution: severityCounts,\n      categoryDistribution: Object.fromEntries(categoryMap),\n      modulePerformance,\n      averageModuleDuration:\n        report.modules.length > 0\n          ? Math.round(\n              report.modules.reduce((sum, m) => sum + m.duration, 0) / report.modules.length\n            )\n          : 0,\n    };\n  }\n\n  /**\n   * Analyze issues for insights\n   */\n  private analyzeIssues(report: MonitoringReport, options?: ReportOptions): any {\n    const allIssues = report.modules.flatMap(m => m.result.issues);\n\n    // Top issues by severity\n    const criticalIssues = allIssues.filter(i => i.severity === 'critical');\n    const errorIssues = allIssues.filter(i => i.severity === 'error');\n\n    // Most problematic modules\n    const moduleIssueMap = new Map<string, number>();\n    report.modules.forEach(m => {\n      moduleIssueMap.set(m.moduleName, m.result.issues.length);\n    });\n\n    const mostProblematicModules = Array.from(moduleIssueMap.entries())\n      .sort(([, a], [, b]) => b - a)\n      .slice(0, 3)\n      .map(([name, count]) => ({ name, issueCount: count }));\n\n    // Common issue categories\n    const categoryMap = new Map<string, number>();\n    allIssues.forEach(issue => {\n      categoryMap.set(issue.category, (categoryMap.get(issue.category) || 0) + 1);\n    });\n\n    const topCategories = Array.from(categoryMap.entries())\n      .sort(([, a], [, b]) => b - a)\n      .slice(0, 5)\n      .map(([category, count]) => ({ category, count }));\n\n    return {\n      highPriorityIssues: {\n        critical: criticalIssues.length,\n        error: errorIssues.length,\n        criticalTitles: criticalIssues.slice(0, 5).map(i => i.title),\n        errorTitles: errorIssues.slice(0, 5).map(i => i.title),\n      },\n      mostProblematicModules,\n      topIssueCategories: topCategories,\n      hasBlockingIssues: criticalIssues.length > 0 || errorIssues.length > 0,\n      recommendsAction: criticalIssues.length > 0,\n    };\n  }\n\n  /**\n   * Sort issues by specified criteria\n   */\n  private sortIssues(issues: any[], sortBy: string): any[] {\n    const sorted = [...issues];\n\n    switch (sortBy) {\n      case 'severity':\n        const severityOrder: Record<string, number> = {\n          critical: 0,\n          error: 1,\n          warning: 2,\n          info: 3,\n        };\n        sorted.sort(\n          (a, b) => (severityOrder[a.severity] || 999) - (severityOrder[b.severity] || 999)\n        );\n        break;\n      case 'category':\n        sorted.sort((a, b) => a.category.localeCompare(b.category));\n        break;\n      case 'timestamp':\n        // If issues have timestamps, sort by them\n        sorted.sort((a, b) => {\n          const timestampA = a.metadata?.timestamp || 0;\n          const timestampB = b.metadata?.timestamp || 0;\n          return timestampB - timestampA; // Most recent first\n        });\n        break;\n    }\n\n    return sorted;\n  }\n\n  /**\n   * Format duration in human-readable format\n   */\n  private formatDuration(ms: number): string {\n    if (ms < 1000) {\n      return `${ms}ms`;\n    } else if (ms < 60000) {\n      return `${(ms / 1000).toFixed(2)}s`;\n    } else {\n      const minutes = Math.floor(ms / 60000);\n      const seconds = ((ms % 60000) / 1000).toFixed(0);\n      return `${minutes}m ${seconds}s`;\n    }\n  }\n\n  /**\n   * Sanitize options for JSON output\n   */\n  private sanitizeOptions(options?: ReportOptions): any {\n    if (!options) return {};\n\n    return {\n      includeDetails: options.includeDetails,\n      sortBy: options.sortBy,\n      severityFilter: options.severityFilter,\n      moduleFilter: options.moduleFilter,\n      includeMetadata: options.includeMetadata,\n      includeRecommendations: options.includeRecommendations,\n      maxIssuesPerModule: options.maxIssuesPerModule,\n      compact: options.compact,\n    };\n  }\n\n  /**\n   * Sanitize config for JSON output\n   */\n  private sanitizeConfig(config: any): any {\n    // Remove sensitive information and functions from config\n    const sanitized = JSON.parse(\n      JSON.stringify(config, (key, value) => {\n        // Remove functions\n        if (typeof value === 'function') return '[Function]';\n\n        // Remove potentially sensitive keys\n        if (\n          key.toLowerCase().includes('key') ||\n          key.toLowerCase().includes('secret') ||\n          key.toLowerCase().includes('password')\n        ) {\n          return '[REDACTED]';\n        }\n\n        return value;\n      })\n    );\n\n    return sanitized;\n  }\n\n  /**\n   * Create JSON replacer function\n   */\n  private createReplacer(options?: ReportOptions): ((key: string, value: any) => any) | undefined {\n    if (!options?.compact) return undefined;\n\n    return (key: string, value: any) => {\n      // Remove null/undefined values in compact mode\n      if (value === null || value === undefined) return undefined;\n\n      // Remove empty arrays and objects in compact mode\n      if (Array.isArray(value) && value.length === 0) return undefined;\n      if (typeof value === 'object' && Object.keys(value).length === 0) return undefined;\n\n      return value;\n    };\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2a7d3afd5ed8918b5762b5511b21e8e89b1ab308","contentHash":"ecb95b8bb7ffda9a4a795c2ccc6ddf39e6abe13a35219c5c4b80f7b3915d18b1"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/formatters/HTMLFormatter.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/formatters/HTMLFormatter.ts","statementMap":{"0":{"start":{"line":8,"column":0},"end":{"line":8,"column":62}},"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":31}},"2":{"start":{"line":10,"column":16},"end":{"line":10,"column":43}},"3":{"start":{"line":11,"column":16},"end":{"line":11,"column":35}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":25}},"5":{"start":{"line":18,"column":8},"end":{"line":18,"column":34}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":33}},"7":{"start":{"line":20,"column":8},"end":{"line":20,"column":36}},"8":{"start":{"line":26,"column":22},"end":{"line":26,"column":63}},"9":{"start":{"line":27,"column":26},"end":{"line":27,"column":93}},"10":{"start":{"line":28,"column":8},"end":{"line":28,"column":76}},"11":{"start":{"line":34,"column":23},"end":{"line":34,"column":25}},"12":{"start":{"line":35,"column":25},"end":{"line":35,"column":27}},"13":{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},"14":{"start":{"line":37,"column":12},"end":{"line":37,"column":126}},"15":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"16":{"start":{"line":40,"column":12},"end":{"line":40,"column":95}},"17":{"start":{"line":42,"column":8},"end":{"line":46,"column":10}},"18":{"start":{"line":53,"column":22},"end":{"line":53,"column":92}},"19":{"start":{"line":54,"column":28},"end":{"line":55,"column":84}},"20":{"start":{"line":56,"column":8},"end":{"line":79,"column":9}},"21":{"start":{"line":85,"column":26},"end":{"line":85,"column":50}},"22":{"start":{"line":86,"column":8},"end":{"line":407,"column":14}},"23":{"start":{"line":413,"column":8},"end":{"line":413,"column":79}},"24":{"start":{"line":419,"column":22},"end":{"line":419,"column":67}},"25":{"start":{"line":420,"column":28},"end":{"line":420,"column":49}},"26":{"start":{"line":421,"column":27},"end":{"line":421,"column":68}},"27":{"start":{"line":422,"column":8},"end":{"line":432,"column":12}},"28":{"start":{"line":438,"column":8},"end":{"line":483,"column":12}},"29":{"start":{"line":489,"column":8},"end":{"line":506,"column":12}},"30":{"start":{"line":498,"column":35},"end":{"line":503,"column":9}},"31":{"start":{"line":512,"column":26},"end":{"line":512,"column":59}},"32":{"start":{"line":513,"column":8},"end":{"line":586,"column":12}},"33":{"start":{"line":525,"column":31},"end":{"line":525,"column":70}},"34":{"start":{"line":526,"column":27},"end":{"line":526,"column":73}},"35":{"start":{"line":527,"column":35},"end":{"line":527,"column":80}},"36":{"start":{"line":528,"column":12},"end":{"line":582,"column":18}},"37":{"start":{"line":544,"column":34},"end":{"line":565,"column":15}},"38":{"start":{"line":592,"column":8},"end":{"line":622,"column":12}},"39":{"start":{"line":628,"column":26},"end":{"line":628,"column":121}},"40":{"start":{"line":628,"column":54},"end":{"line":628,"column":120}},"41":{"start":{"line":628,"column":84},"end":{"line":628,"column":118}},"42":{"start":{"line":629,"column":31},"end":{"line":629,"column":99}},"43":{"start":{"line":629,"column":53},"end":{"line":629,"column":98}},"44":{"start":{"line":630,"column":28},"end":{"line":630,"column":93}},"45":{"start":{"line":630,"column":50},"end":{"line":630,"column":92}},"46":{"start":{"line":631,"column":8},"end":{"line":633,"column":9}},"47":{"start":{"line":632,"column":12},"end":{"line":632,"column":22}},"48":{"start":{"line":634,"column":35},"end":{"line":634,"column":70}},"49":{"start":{"line":635,"column":8},"end":{"line":664,"column":12}},"50":{"start":{"line":644,"column":35},"end":{"line":661,"column":9}},"51":{"start":{"line":670,"column":8},"end":{"line":671,"column":22}},"52":{"start":{"line":671,"column":12},"end":{"line":671,"column":22}},"53":{"start":{"line":672,"column":8},"end":{"line":684,"column":12}},"54":{"start":{"line":681,"column":46},"end":{"line":681,"column":92}},"55":{"start":{"line":690,"column":8},"end":{"line":703,"column":12}},"56":{"start":{"line":699,"column":60},"end":{"line":699,"column":88}},"57":{"start":{"line":709,"column":8},"end":{"line":803,"column":15}},"58":{"start":{"line":809,"column":8},"end":{"line":813,"column":9}},"59":{"start":{"line":819,"column":23},"end":{"line":819,"column":25}},"60":{"start":{"line":820,"column":26},"end":{"line":820,"column":70}},"61":{"start":{"line":820,"column":54},"end":{"line":820,"column":69}},"62":{"start":{"line":822,"column":31},"end":{"line":827,"column":9}},"63":{"start":{"line":823,"column":44},"end":{"line":823,"column":69}},"64":{"start":{"line":824,"column":41},"end":{"line":824,"column":63}},"65":{"start":{"line":825,"column":43},"end":{"line":825,"column":67}},"66":{"start":{"line":826,"column":40},"end":{"line":826,"column":61}},"67":{"start":{"line":828,"column":8},"end":{"line":839,"column":11}},"68":{"start":{"line":841,"column":8},"end":{"line":847,"column":11}},"69":{"start":{"line":844,"column":44},"end":{"line":844,"column":90}},"70":{"start":{"line":845,"column":42},"end":{"line":845,"column":52}},"71":{"start":{"line":848,"column":8},"end":{"line":848,"column":22}},"72":{"start":{"line":852,"column":8},"end":{"line":863,"column":9}},"73":{"start":{"line":854,"column":16},"end":{"line":854,"column":27}},"74":{"start":{"line":856,"column":16},"end":{"line":856,"column":28}},"75":{"start":{"line":858,"column":16},"end":{"line":858,"column":27}},"76":{"start":{"line":860,"column":16},"end":{"line":860,"column":28}},"77":{"start":{"line":862,"column":16},"end":{"line":862,"column":28}},"78":{"start":{"line":866,"column":8},"end":{"line":877,"column":9}},"79":{"start":{"line":868,"column":16},"end":{"line":868,"column":28}},"80":{"start":{"line":870,"column":16},"end":{"line":870,"column":27}},"81":{"start":{"line":872,"column":16},"end":{"line":872,"column":28}},"82":{"start":{"line":874,"column":16},"end":{"line":874,"column":28}},"83":{"start":{"line":876,"column":16},"end":{"line":876,"column":27}},"84":{"start":{"line":880,"column":0},"end":{"line":880,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":18},"end":{"line":21,"column":5}},"line":16},"1":{"name":"(anonymous_1)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":34},"end":{"line":29,"column":5}},"line":25},"2":{"name":"(anonymous_2)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":29},"end":{"line":47,"column":5}},"line":33},"3":{"name":"(anonymous_3)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":60},"end":{"line":80,"column":5}},"line":52},"4":{"name":"(anonymous_4)","decl":{"start":{"line":84,"column":4},"end":{"line":84,"column":5}},"loc":{"start":{"line":84,"column":32},"end":{"line":408,"column":5}},"line":84},"5":{"name":"(anonymous_5)","decl":{"start":{"line":412,"column":4},"end":{"line":412,"column":5}},"loc":{"start":{"line":412,"column":22},"end":{"line":414,"column":5}},"line":412},"6":{"name":"(anonymous_6)","decl":{"start":{"line":418,"column":4},"end":{"line":418,"column":5}},"loc":{"start":{"line":418,"column":36},"end":{"line":433,"column":5}},"line":418},"7":{"name":"(anonymous_7)","decl":{"start":{"line":437,"column":4},"end":{"line":437,"column":5}},"loc":{"start":{"line":437,"column":37},"end":{"line":484,"column":5}},"line":437},"8":{"name":"(anonymous_8)","decl":{"start":{"line":488,"column":4},"end":{"line":488,"column":5}},"loc":{"start":{"line":488,"column":30},"end":{"line":507,"column":5}},"line":488},"9":{"name":"(anonymous_9)","decl":{"start":{"line":498,"column":17},"end":{"line":498,"column":18}},"loc":{"start":{"line":498,"column":35},"end":{"line":503,"column":9}},"line":498},"10":{"name":"(anonymous_10)","decl":{"start":{"line":511,"column":4},"end":{"line":511,"column":5}},"loc":{"start":{"line":511,"column":43},"end":{"line":587,"column":5}},"line":511},"11":{"name":"(anonymous_11)","decl":{"start":{"line":524,"column":17},"end":{"line":524,"column":18}},"loc":{"start":{"line":524,"column":33},"end":{"line":583,"column":9}},"line":524},"12":{"name":"(anonymous_12)","decl":{"start":{"line":544,"column":25},"end":{"line":544,"column":26}},"loc":{"start":{"line":544,"column":34},"end":{"line":565,"column":15}},"line":544},"13":{"name":"(anonymous_13)","decl":{"start":{"line":591,"column":4},"end":{"line":591,"column":5}},"loc":{"start":{"line":591,"column":22},"end":{"line":623,"column":5}},"line":591},"14":{"name":"(anonymous_14)","decl":{"start":{"line":627,"column":4},"end":{"line":627,"column":5}},"loc":{"start":{"line":627,"column":44},"end":{"line":665,"column":5}},"line":627},"15":{"name":"(anonymous_15)","decl":{"start":{"line":628,"column":49},"end":{"line":628,"column":50}},"loc":{"start":{"line":628,"column":54},"end":{"line":628,"column":120}},"line":628},"16":{"name":"(anonymous_16)","decl":{"start":{"line":628,"column":74},"end":{"line":628,"column":75}},"loc":{"start":{"line":628,"column":84},"end":{"line":628,"column":118}},"line":628},"17":{"name":"(anonymous_17)","decl":{"start":{"line":629,"column":48},"end":{"line":629,"column":49}},"loc":{"start":{"line":629,"column":53},"end":{"line":629,"column":98}},"line":629},"18":{"name":"(anonymous_18)","decl":{"start":{"line":630,"column":45},"end":{"line":630,"column":46}},"loc":{"start":{"line":630,"column":50},"end":{"line":630,"column":92}},"line":630},"19":{"name":"(anonymous_19)","decl":{"start":{"line":644,"column":17},"end":{"line":644,"column":18}},"loc":{"start":{"line":644,"column":35},"end":{"line":661,"column":9}},"line":644},"20":{"name":"(anonymous_20)","decl":{"start":{"line":669,"column":4},"end":{"line":669,"column":5}},"loc":{"start":{"line":669,"column":45},"end":{"line":685,"column":5}},"line":669},"21":{"name":"(anonymous_21)","decl":{"start":{"line":681,"column":39},"end":{"line":681,"column":40}},"loc":{"start":{"line":681,"column":46},"end":{"line":681,"column":92}},"line":681},"22":{"name":"(anonymous_22)","decl":{"start":{"line":689,"column":4},"end":{"line":689,"column":5}},"loc":{"start":{"line":689,"column":36},"end":{"line":704,"column":5}},"line":689},"23":{"name":"(anonymous_23)","decl":{"start":{"line":699,"column":48},"end":{"line":699,"column":49}},"loc":{"start":{"line":699,"column":60},"end":{"line":699,"column":88}},"line":699},"24":{"name":"(anonymous_24)","decl":{"start":{"line":708,"column":4},"end":{"line":708,"column":5}},"loc":{"start":{"line":708,"column":32},"end":{"line":804,"column":5}},"line":708},"25":{"name":"(anonymous_25)","decl":{"start":{"line":808,"column":4},"end":{"line":808,"column":5}},"loc":{"start":{"line":808,"column":34},"end":{"line":814,"column":5}},"line":808},"26":{"name":"(anonymous_26)","decl":{"start":{"line":818,"column":4},"end":{"line":818,"column":5}},"loc":{"start":{"line":818,"column":30},"end":{"line":849,"column":5}},"line":818},"27":{"name":"(anonymous_27)","decl":{"start":{"line":820,"column":49},"end":{"line":820,"column":50}},"loc":{"start":{"line":820,"column":54},"end":{"line":820,"column":69}},"line":820},"28":{"name":"(anonymous_28)","decl":{"start":{"line":823,"column":39},"end":{"line":823,"column":40}},"loc":{"start":{"line":823,"column":44},"end":{"line":823,"column":69}},"line":823},"29":{"name":"(anonymous_29)","decl":{"start":{"line":824,"column":36},"end":{"line":824,"column":37}},"loc":{"start":{"line":824,"column":41},"end":{"line":824,"column":63}},"line":824},"30":{"name":"(anonymous_30)","decl":{"start":{"line":825,"column":38},"end":{"line":825,"column":39}},"loc":{"start":{"line":825,"column":43},"end":{"line":825,"column":67}},"line":825},"31":{"name":"(anonymous_31)","decl":{"start":{"line":826,"column":35},"end":{"line":826,"column":36}},"loc":{"start":{"line":826,"column":40},"end":{"line":826,"column":61}},"line":826},"32":{"name":"(anonymous_32)","decl":{"start":{"line":844,"column":39},"end":{"line":844,"column":40}},"loc":{"start":{"line":844,"column":44},"end":{"line":844,"column":90}},"line":844},"33":{"name":"(anonymous_33)","decl":{"start":{"line":845,"column":37},"end":{"line":845,"column":38}},"loc":{"start":{"line":845,"column":42},"end":{"line":845,"column":52}},"line":845},"34":{"name":"(anonymous_34)","decl":{"start":{"line":851,"column":4},"end":{"line":851,"column":5}},"loc":{"start":{"line":851,"column":26},"end":{"line":864,"column":5}},"line":851},"35":{"name":"(anonymous_35)","decl":{"start":{"line":865,"column":4},"end":{"line":865,"column":5}},"loc":{"start":{"line":865,"column":30},"end":{"line":878,"column":5}},"line":865}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":37},"end":{"line":26,"column":62}},"type":"binary-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":51}},{"start":{"line":26,"column":55},"end":{"line":26,"column":62}}],"line":26},"1":{"loc":{"start":{"line":27,"column":26},"end":{"line":27,"column":93}},"type":"cond-expr","locations":[{"start":{"line":27,"column":51},"end":{"line":27,"column":81}},{"start":{"line":27,"column":84},"end":{"line":27,"column":93}}],"line":27},"2":{"loc":{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},{"start":{},"end":{}}],"line":36},"3":{"loc":{"start":{"line":36,"column":12},"end":{"line":36,"column":88}},"type":"binary-expr","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":26}},{"start":{"line":36,"column":30},"end":{"line":36,"column":60}},{"start":{"line":36,"column":64},"end":{"line":36,"column":88}}],"line":36},"4":{"loc":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},{"start":{},"end":{}}],"line":39},"5":{"loc":{"start":{"line":53,"column":22},"end":{"line":53,"column":92}},"type":"binary-expr","locations":[{"start":{"line":53,"column":22},"end":{"line":53,"column":36}},{"start":{"line":53,"column":40},"end":{"line":53,"column":92}}],"line":53},"6":{"loc":{"start":{"line":54,"column":28},"end":{"line":55,"column":84}},"type":"binary-expr","locations":[{"start":{"line":54,"column":28},"end":{"line":54,"column":48}},{"start":{"line":55,"column":12},"end":{"line":55,"column":84}}],"line":54},"7":{"loc":{"start":{"line":64,"column":4},"end":{"line":64,"column":56}},"type":"cond-expr","locations":[{"start":{"line":64,"column":29},"end":{"line":64,"column":51}},{"start":{"line":64,"column":54},"end":{"line":64,"column":56}}],"line":64},"8":{"loc":{"start":{"line":70,"column":6},"end":{"line":70,"column":79}},"type":"cond-expr","locations":[{"start":{"line":70,"column":44},"end":{"line":70,"column":74}},{"start":{"line":70,"column":77},"end":{"line":70,"column":79}}],"line":70},"9":{"loc":{"start":{"line":70,"column":6},"end":{"line":70,"column":41}},"type":"binary-expr","locations":[{"start":{"line":70,"column":6},"end":{"line":70,"column":28}},{"start":{"line":70,"column":32},"end":{"line":70,"column":41}}],"line":70},"10":{"loc":{"start":{"line":73,"column":6},"end":{"line":73,"column":90}},"type":"cond-expr","locations":[{"start":{"line":73,"column":40},"end":{"line":73,"column":85}},{"start":{"line":73,"column":88},"end":{"line":73,"column":90}}],"line":73},"11":{"loc":{"start":{"line":77,"column":4},"end":{"line":77,"column":64}},"type":"cond-expr","locations":[{"start":{"line":77,"column":27},"end":{"line":77,"column":59}},{"start":{"line":77,"column":62},"end":{"line":77,"column":64}}],"line":77},"12":{"loc":{"start":{"line":85,"column":26},"end":{"line":85,"column":50}},"type":"binary-expr","locations":[{"start":{"line":85,"column":26},"end":{"line":85,"column":44}},{"start":{"line":85,"column":48},"end":{"line":85,"column":50}}],"line":85},"13":{"loc":{"start":{"line":95,"column":23},"end":{"line":95,"column":111}},"type":"binary-expr","locations":[{"start":{"line":95,"column":23},"end":{"line":95,"column":40}},{"start":{"line":95,"column":44},"end":{"line":95,"column":111}}],"line":95},"14":{"loc":{"start":{"line":96,"column":21},"end":{"line":96,"column":46}},"type":"binary-expr","locations":[{"start":{"line":96,"column":21},"end":{"line":96,"column":36}},{"start":{"line":96,"column":40},"end":{"line":96,"column":46}}],"line":96},"15":{"loc":{"start":{"line":98,"column":17},"end":{"line":98,"column":46}},"type":"binary-expr","locations":[{"start":{"line":98,"column":17},"end":{"line":98,"column":33}},{"start":{"line":98,"column":37},"end":{"line":98,"column":46}}],"line":98},"16":{"loc":{"start":{"line":99,"column":22},"end":{"line":99,"column":57}},"type":"binary-expr","locations":[{"start":{"line":99,"column":22},"end":{"line":99,"column":44}},{"start":{"line":99,"column":48},"end":{"line":99,"column":57}}],"line":99},"17":{"loc":{"start":{"line":106,"column":22},"end":{"line":106,"column":57}},"type":"binary-expr","locations":[{"start":{"line":106,"column":22},"end":{"line":106,"column":44}},{"start":{"line":106,"column":48},"end":{"line":106,"column":57}}],"line":106},"18":{"loc":{"start":{"line":116,"column":35},"end":{"line":116,"column":66}},"type":"binary-expr","locations":[{"start":{"line":116,"column":35},"end":{"line":116,"column":53}},{"start":{"line":116,"column":57},"end":{"line":116,"column":66}}],"line":116},"19":{"loc":{"start":{"line":120,"column":17},"end":{"line":120,"column":49}},"type":"binary-expr","locations":[{"start":{"line":120,"column":17},"end":{"line":120,"column":36}},{"start":{"line":120,"column":40},"end":{"line":120,"column":49}}],"line":120},"20":{"loc":{"start":{"line":127,"column":17},"end":{"line":127,"column":43}},"type":"binary-expr","locations":[{"start":{"line":127,"column":17},"end":{"line":127,"column":33}},{"start":{"line":127,"column":37},"end":{"line":127,"column":43}}],"line":127},"21":{"loc":{"start":{"line":143,"column":35},"end":{"line":143,"column":67}},"type":"binary-expr","locations":[{"start":{"line":143,"column":35},"end":{"line":143,"column":54}},{"start":{"line":143,"column":58},"end":{"line":143,"column":67}}],"line":143},"22":{"loc":{"start":{"line":144,"column":38},"end":{"line":144,"column":70}},"type":"binary-expr","locations":[{"start":{"line":144,"column":38},"end":{"line":144,"column":57}},{"start":{"line":144,"column":61},"end":{"line":144,"column":70}}],"line":144},"23":{"loc":{"start":{"line":145,"column":35},"end":{"line":145,"column":65}},"type":"binary-expr","locations":[{"start":{"line":145,"column":35},"end":{"line":145,"column":52}},{"start":{"line":145,"column":56},"end":{"line":145,"column":65}}],"line":145},"24":{"loc":{"start":{"line":154,"column":17},"end":{"line":154,"column":49}},"type":"binary-expr","locations":[{"start":{"line":154,"column":17},"end":{"line":154,"column":36}},{"start":{"line":154,"column":40},"end":{"line":154,"column":49}}],"line":154},"25":{"loc":{"start":{"line":159,"column":35},"end":{"line":159,"column":66}},"type":"binary-expr","locations":[{"start":{"line":159,"column":35},"end":{"line":159,"column":53}},{"start":{"line":159,"column":57},"end":{"line":159,"column":66}}],"line":159},"26":{"loc":{"start":{"line":178,"column":22},"end":{"line":178,"column":57}},"type":"binary-expr","locations":[{"start":{"line":178,"column":22},"end":{"line":178,"column":44}},{"start":{"line":178,"column":48},"end":{"line":178,"column":57}}],"line":178},"27":{"loc":{"start":{"line":179,"column":28},"end":{"line":179,"column":59}},"type":"binary-expr","locations":[{"start":{"line":179,"column":28},"end":{"line":179,"column":46}},{"start":{"line":179,"column":50},"end":{"line":179,"column":59}}],"line":179},"28":{"loc":{"start":{"line":194,"column":17},"end":{"line":194,"column":49}},"type":"binary-expr","locations":[{"start":{"line":194,"column":17},"end":{"line":194,"column":36}},{"start":{"line":194,"column":40},"end":{"line":194,"column":49}}],"line":194},"29":{"loc":{"start":{"line":199,"column":17},"end":{"line":199,"column":43}},"type":"binary-expr","locations":[{"start":{"line":199,"column":17},"end":{"line":199,"column":33}},{"start":{"line":199,"column":37},"end":{"line":199,"column":43}}],"line":199},"30":{"loc":{"start":{"line":212,"column":28},"end":{"line":212,"column":59}},"type":"binary-expr","locations":[{"start":{"line":212,"column":28},"end":{"line":212,"column":46}},{"start":{"line":212,"column":50},"end":{"line":212,"column":59}}],"line":212},"31":{"loc":{"start":{"line":215,"column":22},"end":{"line":215,"column":57}},"type":"binary-expr","locations":[{"start":{"line":215,"column":22},"end":{"line":215,"column":44}},{"start":{"line":215,"column":48},"end":{"line":215,"column":57}}],"line":215},"32":{"loc":{"start":{"line":225,"column":22},"end":{"line":225,"column":57}},"type":"binary-expr","locations":[{"start":{"line":225,"column":22},"end":{"line":225,"column":44}},{"start":{"line":225,"column":48},"end":{"line":225,"column":57}}],"line":225},"33":{"loc":{"start":{"line":226,"column":35},"end":{"line":226,"column":66}},"type":"binary-expr","locations":[{"start":{"line":226,"column":35},"end":{"line":226,"column":53}},{"start":{"line":226,"column":57},"end":{"line":226,"column":66}}],"line":226},"34":{"loc":{"start":{"line":238,"column":17},"end":{"line":238,"column":43}},"type":"binary-expr","locations":[{"start":{"line":238,"column":17},"end":{"line":238,"column":33}},{"start":{"line":238,"column":37},"end":{"line":238,"column":43}}],"line":238},"35":{"loc":{"start":{"line":260,"column":29},"end":{"line":260,"column":62}},"type":"binary-expr","locations":[{"start":{"line":260,"column":29},"end":{"line":260,"column":49}},{"start":{"line":260,"column":53},"end":{"line":260,"column":62}}],"line":260},"36":{"loc":{"start":{"line":261,"column":22},"end":{"line":261,"column":55}},"type":"binary-expr","locations":[{"start":{"line":261,"column":22},"end":{"line":261,"column":42}},{"start":{"line":261,"column":46},"end":{"line":261,"column":55}}],"line":261},"37":{"loc":{"start":{"line":264,"column":29},"end":{"line":264,"column":59}},"type":"binary-expr","locations":[{"start":{"line":264,"column":29},"end":{"line":264,"column":46}},{"start":{"line":264,"column":50},"end":{"line":264,"column":59}}],"line":264},"38":{"loc":{"start":{"line":265,"column":22},"end":{"line":265,"column":52}},"type":"binary-expr","locations":[{"start":{"line":265,"column":22},"end":{"line":265,"column":39}},{"start":{"line":265,"column":43},"end":{"line":265,"column":52}}],"line":265},"39":{"loc":{"start":{"line":268,"column":29},"end":{"line":268,"column":61}},"type":"binary-expr","locations":[{"start":{"line":268,"column":29},"end":{"line":268,"column":48}},{"start":{"line":268,"column":52},"end":{"line":268,"column":61}}],"line":268},"40":{"loc":{"start":{"line":269,"column":22},"end":{"line":269,"column":54}},"type":"binary-expr","locations":[{"start":{"line":269,"column":22},"end":{"line":269,"column":41}},{"start":{"line":269,"column":45},"end":{"line":269,"column":54}}],"line":269},"41":{"loc":{"start":{"line":272,"column":29},"end":{"line":272,"column":61}},"type":"binary-expr","locations":[{"start":{"line":272,"column":29},"end":{"line":272,"column":48}},{"start":{"line":272,"column":52},"end":{"line":272,"column":61}}],"line":272},"42":{"loc":{"start":{"line":273,"column":22},"end":{"line":273,"column":54}},"type":"binary-expr","locations":[{"start":{"line":273,"column":22},"end":{"line":273,"column":41}},{"start":{"line":273,"column":45},"end":{"line":273,"column":54}}],"line":273},"43":{"loc":{"start":{"line":283,"column":17},"end":{"line":283,"column":43}},"type":"binary-expr","locations":[{"start":{"line":283,"column":17},"end":{"line":283,"column":33}},{"start":{"line":283,"column":37},"end":{"line":283,"column":43}}],"line":283},"44":{"loc":{"start":{"line":289,"column":17},"end":{"line":289,"column":49}},"type":"binary-expr","locations":[{"start":{"line":289,"column":17},"end":{"line":289,"column":36}},{"start":{"line":289,"column":40},"end":{"line":289,"column":49}}],"line":289},"45":{"loc":{"start":{"line":291,"column":22},"end":{"line":291,"column":54}},"type":"binary-expr","locations":[{"start":{"line":291,"column":22},"end":{"line":291,"column":41}},{"start":{"line":291,"column":45},"end":{"line":291,"column":54}}],"line":291},"46":{"loc":{"start":{"line":300,"column":17},"end":{"line":300,"column":43}},"type":"binary-expr","locations":[{"start":{"line":300,"column":17},"end":{"line":300,"column":33}},{"start":{"line":300,"column":37},"end":{"line":300,"column":43}}],"line":300},"47":{"loc":{"start":{"line":301,"column":22},"end":{"line":301,"column":57}},"type":"binary-expr","locations":[{"start":{"line":301,"column":22},"end":{"line":301,"column":44}},{"start":{"line":301,"column":48},"end":{"line":301,"column":57}}],"line":301},"48":{"loc":{"start":{"line":308,"column":22},"end":{"line":308,"column":57}},"type":"binary-expr","locations":[{"start":{"line":308,"column":22},"end":{"line":308,"column":44}},{"start":{"line":308,"column":48},"end":{"line":308,"column":57}}],"line":308},"49":{"loc":{"start":{"line":326,"column":17},"end":{"line":326,"column":43}},"type":"binary-expr","locations":[{"start":{"line":326,"column":17},"end":{"line":326,"column":33}},{"start":{"line":326,"column":37},"end":{"line":326,"column":43}}],"line":326},"50":{"loc":{"start":{"line":331,"column":28},"end":{"line":331,"column":56}},"type":"binary-expr","locations":[{"start":{"line":331,"column":28},"end":{"line":331,"column":46}},{"start":{"line":331,"column":50},"end":{"line":331,"column":56}}],"line":331},"51":{"loc":{"start":{"line":349,"column":22},"end":{"line":349,"column":57}},"type":"binary-expr","locations":[{"start":{"line":349,"column":22},"end":{"line":349,"column":44}},{"start":{"line":349,"column":48},"end":{"line":349,"column":57}}],"line":349},"52":{"loc":{"start":{"line":350,"column":28},"end":{"line":350,"column":59}},"type":"binary-expr","locations":[{"start":{"line":350,"column":28},"end":{"line":350,"column":46}},{"start":{"line":350,"column":50},"end":{"line":350,"column":59}}],"line":350},"53":{"loc":{"start":{"line":360,"column":17},"end":{"line":360,"column":49}},"type":"binary-expr","locations":[{"start":{"line":360,"column":17},"end":{"line":360,"column":36}},{"start":{"line":360,"column":40},"end":{"line":360,"column":49}}],"line":360},"54":{"loc":{"start":{"line":419,"column":22},"end":{"line":419,"column":67}},"type":"binary-expr","locations":[{"start":{"line":419,"column":22},"end":{"line":419,"column":36}},{"start":{"line":419,"column":40},"end":{"line":419,"column":67}}],"line":419},"55":{"loc":{"start":{"line":427,"column":10},"end":{"line":427,"column":86}},"type":"cond-expr","locations":[{"start":{"line":427,"column":37},"end":{"line":427,"column":81}},{"start":{"line":427,"column":84},"end":{"line":427,"column":86}}],"line":427},"56":{"loc":{"start":{"line":462,"column":10},"end":{"line":468,"column":16}},"type":"cond-expr","locations":[{"start":{"line":463,"column":14},"end":{"line":467,"column":15}},{"start":{"line":468,"column":14},"end":{"line":468,"column":16}}],"line":462},"57":{"loc":{"start":{"line":471,"column":8},"end":{"line":482,"column":16}},"type":"cond-expr","locations":[{"start":{"line":472,"column":14},"end":{"line":481,"column":13}},{"start":{"line":482,"column":14},"end":{"line":482,"column":16}}],"line":471},"58":{"loc":{"start":{"line":512,"column":26},"end":{"line":512,"column":59}},"type":"binary-expr","locations":[{"start":{"line":512,"column":26},"end":{"line":512,"column":53}},{"start":{"line":512,"column":57},"end":{"line":512,"column":59}}],"line":512},"59":{"loc":{"start":{"line":520,"column":8},"end":{"line":520,"column":58}},"type":"cond-expr","locations":[{"start":{"line":520,"column":31},"end":{"line":520,"column":53}},{"start":{"line":520,"column":56},"end":{"line":520,"column":58}}],"line":520},"60":{"loc":{"start":{"line":540,"column":14},"end":{"line":581,"column":19}},"type":"cond-expr","locations":[{"start":{"line":541,"column":18},"end":{"line":575,"column":19}},{"start":{"line":576,"column":18},"end":{"line":581,"column":19}}],"line":540},"61":{"loc":{"start":{"line":550,"column":20},"end":{"line":556,"column":24}},"type":"cond-expr","locations":[{"start":{"line":551,"column":22},"end":{"line":555,"column":19}},{"start":{"line":556,"column":22},"end":{"line":556,"column":24}}],"line":550},"62":{"loc":{"start":{"line":557,"column":20},"end":{"line":563,"column":24}},"type":"cond-expr","locations":[{"start":{"line":558,"column":22},"end":{"line":562,"column":19}},{"start":{"line":563,"column":22},"end":{"line":563,"column":24}}],"line":557},"63":{"loc":{"start":{"line":557,"column":20},"end":{"line":557,"column":62}},"type":"binary-expr","locations":[{"start":{"line":557,"column":20},"end":{"line":557,"column":44}},{"start":{"line":557,"column":48},"end":{"line":557,"column":62}}],"line":557},"64":{"loc":{"start":{"line":568,"column":16},"end":{"line":574,"column":24}},"type":"cond-expr","locations":[{"start":{"line":569,"column":22},"end":{"line":573,"column":15}},{"start":{"line":574,"column":22},"end":{"line":574,"column":24}}],"line":568},"65":{"loc":{"start":{"line":571,"column":56},"end":{"line":571,"column":87}},"type":"cond-expr","locations":[{"start":{"line":571,"column":79},"end":{"line":571,"column":81}},{"start":{"line":571,"column":84},"end":{"line":571,"column":87}}],"line":571},"66":{"loc":{"start":{"line":631,"column":8},"end":{"line":633,"column":9}},"type":"if","locations":[{"start":{"line":631,"column":8},"end":{"line":633,"column":9}},{"start":{},"end":{}}],"line":631},"67":{"loc":{"start":{"line":631,"column":12},"end":{"line":631,"column":67}},"type":"binary-expr","locations":[{"start":{"line":631,"column":12},"end":{"line":631,"column":39}},{"start":{"line":631,"column":43},"end":{"line":631,"column":67}}],"line":631},"68":{"loc":{"start":{"line":653,"column":14},"end":{"line":659,"column":16}},"type":"cond-expr","locations":[{"start":{"line":654,"column":14},"end":{"line":658,"column":13}},{"start":{"line":659,"column":14},"end":{"line":659,"column":16}}],"line":653},"69":{"loc":{"start":{"line":670,"column":8},"end":{"line":671,"column":22}},"type":"if","locations":[{"start":{"line":670,"column":8},"end":{"line":671,"column":22}},{"start":{},"end":{}}],"line":670},"70":{"loc":{"start":{"line":694,"column":8},"end":{"line":702,"column":16}},"type":"cond-expr","locations":[{"start":{"line":695,"column":14},"end":{"line":701,"column":7}},{"start":{"line":702,"column":14},"end":{"line":702,"column":16}}],"line":694},"71":{"loc":{"start":{"line":714,"column":10},"end":{"line":714,"column":61}},"type":"cond-expr","locations":[{"start":{"line":714,"column":35},"end":{"line":714,"column":56}},{"start":{"line":714,"column":59},"end":{"line":714,"column":61}}],"line":714},"72":{"loc":{"start":{"line":802,"column":8},"end":{"line":802,"column":72}},"type":"cond-expr","locations":[{"start":{"line":802,"column":33},"end":{"line":802,"column":67}},{"start":{"line":802,"column":70},"end":{"line":802,"column":72}}],"line":802},"73":{"loc":{"start":{"line":852,"column":8},"end":{"line":863,"column":9}},"type":"switch","locations":[{"start":{"line":853,"column":12},"end":{"line":854,"column":27}},{"start":{"line":855,"column":12},"end":{"line":856,"column":28}},{"start":{"line":857,"column":12},"end":{"line":858,"column":27}},{"start":{"line":859,"column":12},"end":{"line":860,"column":28}},{"start":{"line":861,"column":12},"end":{"line":862,"column":28}}],"line":852},"74":{"loc":{"start":{"line":866,"column":8},"end":{"line":877,"column":9}},"type":"switch","locations":[{"start":{"line":867,"column":12},"end":{"line":868,"column":28}},{"start":{"line":869,"column":12},"end":{"line":870,"column":27}},{"start":{"line":871,"column":12},"end":{"line":872,"column":28}},{"start":{"line":873,"column":12},"end":{"line":874,"column":28}},{"start":{"line":875,"column":12},"end":{"line":876,"column":27}}],"line":866}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0,0,0,0],"74":[0,0,0,0,0]},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/formatters/HTMLFormatter.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/formatters/HTMLFormatter.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * HTML Report Formatter\n *\n * Generates interactive HTML reports with professional styling,\n * charts, filtering capabilities, and responsive design.\n */\n\nimport { MonitoringReport, MonitoringStatus, SeverityLevel } from '../../core/types';\nimport {\n  ReportFormatter,\n  ReportOptions,\n  ReportValidationResult,\n  THEMES,\n  ChartData,\n} from '../types';\n\n/**\n * HTML formatter with interactive features\n */\nexport class HTMLFormatter implements ReportFormatter {\n  public readonly id = 'html';\n  public readonly name = 'HTML Report';\n  public readonly extension = '.html';\n  public readonly mimeType = 'text/html';\n\n  /**\n   * Format the monitoring report as interactive HTML\n   */\n  public async format(report: MonitoringReport, options?: ReportOptions): Promise<string> {\n    const theme = THEMES[options?.theme || 'light'];\n    const chartData = options?.includeCharts ? this.generateChartData(report) : undefined;\n\n    return this.generateHTMLDocument(report, options, theme, chartData);\n  }\n\n  /**\n   * Validate options for HTML formatting\n   */\n  public validateOptions(options?: ReportOptions): ReportValidationResult {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    if (options?.theme && !THEMES[options.theme] && options.theme !== 'auto') {\n      errors.push(\n        `Invalid theme: ${options.theme}. Available themes: ${Object.keys(THEMES).join(', ')}, auto`\n      );\n    }\n\n    if (options?.colorOutput === false) {\n      warnings.push('colorOutput=false is ignored for HTML format (always uses colors)');\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n      warnings,\n    };\n  }\n\n  // Private helper methods\n\n  /**\n   * Generate the complete HTML document\n   */\n  private generateHTMLDocument(\n    report: MonitoringReport,\n    options?: ReportOptions,\n    theme?: any,\n    chartData?: ChartData[]\n  ): string {\n    const title = options?.title || `Diamond Monitoring Report - ${report.diamond.name}`;\n    const description =\n      options?.description ||\n      `Monitoring report for ${report.diamond.name} on ${report.network.name}`;\n\n    return `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta name=\"description\" content=\"${description}\">\n  <title>${title}</title>\n  ${this.generateCSS(theme, options)}\n  ${options?.includeCharts ? this.generateChartJS() : ''}\n</head>\n<body>\n  <div class=\"container\">\n    ${this.generateHeader(report, options)}\n    ${this.generateSummary(report, options)}\n    ${options?.includeCharts && chartData ? this.generateCharts(chartData) : ''}\n    ${this.generateModuleResults(report, options)}\n    ${this.generateDetailedIssues(report, options)}\n    ${options?.includeRecommendations ? this.generateRecommendations(report, options) : ''}\n    ${this.generateFooter(report, options)}\n  </div>\n  \n  ${options?.interactive ? this.generateJavaScript(options) : ''}\n</body>\n</html>`;\n  }\n\n  /**\n   * Generate CSS styles\n   */\n  private generateCSS(theme?: any, options?: ReportOptions): string {\n    const customCSS = options?.customCss || '';\n\n    return `<style>\n      /* Reset and base styles */\n      * {\n        box-sizing: border-box;\n        margin: 0;\n        padding: 0;\n      }\n\n      body {\n        font-family: ${theme?.fontFamily || '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif'};\n        font-size: ${theme?.fontSize || '14px'};\n        line-height: 1.6;\n        color: ${theme?.textColor || '#212121'};\n        background: ${theme?.backgroundColor || '#f5f5f5'};\n      }\n\n      .container {\n        max-width: 1200px;\n        margin: 0 auto;\n        padding: 20px;\n        background: ${theme?.backgroundColor || '#ffffff'};\n        box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n        border-radius: 8px;\n      }\n\n      /* Header styles */\n      .header {\n        text-align: center;\n        margin-bottom: 40px;\n        padding-bottom: 20px;\n        border-bottom: 2px solid ${theme?.borderColor || '#e0e0e0'};\n      }\n\n      .title {\n        color: ${theme?.primaryColor || '#1565c0'};\n        font-size: 2.5em;\n        font-weight: 700;\n        margin-bottom: 10px;\n      }\n\n      .subtitle {\n        color: ${theme?.textColor || '#666'};\n        font-size: 1.2em;\n        margin-bottom: 20px;\n      }\n\n      /* Status badge */\n      .status {\n        display: inline-block;\n        padding: 10px 20px;\n        border-radius: 25px;\n        font-weight: bold;\n        font-size: 1.1em;\n        text-transform: uppercase;\n        letter-spacing: 1px;\n      }\n\n      .status.PASS { background: ${theme?.successColor || '#e8f5e8'}; color: #2e7d32; }\n      .status.WARNING { background: ${theme?.warningColor || '#fff3e0'}20; color: #f57c00; }\n      .status.FAIL { background: ${theme?.errorColor || '#ffebee'}; color: #c62828; }\n      .status.SKIPPED { background: #f5f5f5; color: #666; }\n\n      /* Section styles */\n      .section {\n        margin: 40px 0;\n      }\n\n      .section-title {\n        color: ${theme?.primaryColor || '#1565c0'};\n        font-size: 1.8em;\n        font-weight: 600;\n        margin-bottom: 20px;\n        padding-bottom: 10px;\n        border-bottom: 2px solid ${theme?.borderColor || '#e0e0e0'};\n        display: flex;\n        align-items: center;\n      }\n\n      .section-title .icon {\n        margin-right: 10px;\n        font-size: 1.2em;\n      }\n\n      /* Statistics grid */\n      .stats-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n        gap: 20px;\n        margin: 30px 0;\n      }\n\n      .stat-card {\n        background: ${theme?.backgroundColor || '#f8f9fa'};\n        border: 1px solid ${theme?.borderColor || '#e0e0e0'};\n        border-radius: 8px;\n        padding: 25px;\n        text-align: center;\n        transition: transform 0.2s, box-shadow 0.2s;\n      }\n\n      .stat-card:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 4px 15px rgba(0,0,0,0.1);\n      }\n\n      .stat-value {\n        font-size: 2.5em;\n        font-weight: bold;\n        color: ${theme?.primaryColor || '#1565c0'};\n        margin-bottom: 5px;\n      }\n\n      .stat-label {\n        color: ${theme?.textColor || '#666'};\n        font-size: 0.9em;\n        text-transform: uppercase;\n        letter-spacing: 1px;\n      }\n\n      /* Module cards */\n      .modules-grid {\n        display: grid;\n        gap: 20px;\n      }\n\n      .module-card {\n        border: 1px solid ${theme?.borderColor || '#e0e0e0'};\n        border-radius: 8px;\n        overflow: hidden;\n        background: ${theme?.backgroundColor || '#ffffff'};\n        transition: box-shadow 0.2s;\n      }\n\n      .module-card:hover {\n        box-shadow: 0 4px 15px rgba(0,0,0,0.1);\n      }\n\n      .module-header {\n        padding: 20px;\n        background: ${theme?.backgroundColor || '#f8f9fa'};\n        border-bottom: 1px solid ${theme?.borderColor || '#e0e0e0'};\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n      }\n\n      .module-name {\n        font-weight: bold;\n        font-size: 1.2em;\n      }\n\n      .module-duration {\n        color: ${theme?.textColor || '#666'};\n        font-size: 0.9em;\n      }\n\n      /* Issues */\n      .issues-container {\n        padding: 20px;\n      }\n\n      .issue {\n        margin: 15px 0;\n        padding: 15px;\n        border-radius: 6px;\n        border-left: 4px solid;\n        transition: transform 0.2s;\n      }\n\n      .issue:hover {\n        transform: translateX(5px);\n      }\n\n      .issue.CRITICAL { \n        border-left-color: ${theme?.criticalColor || '#d32f2f'}; \n        background: ${theme?.criticalColor || '#d32f2f'}10; \n      }\n      .issue.ERROR { \n        border-left-color: ${theme?.errorColor || '#f57c00'}; \n        background: ${theme?.errorColor || '#f57c00'}10; \n      }\n      .issue.WARNING { \n        border-left-color: ${theme?.warningColor || '#fbc02d'}; \n        background: ${theme?.warningColor || '#fbc02d'}10; \n      }\n      .issue.INFO { \n        border-left-color: ${theme?.primaryColor || '#1976d2'}; \n        background: ${theme?.primaryColor || '#1976d2'}10; \n      }\n\n      .issue-title {\n        font-weight: bold;\n        margin-bottom: 8px;\n        font-size: 1.1em;\n      }\n\n      .issue-description {\n        color: ${theme?.textColor || '#666'};\n        margin-bottom: 12px;\n        line-height: 1.5;\n      }\n\n      .issue-recommendation {\n        color: ${theme?.primaryColor || '#1976d2'};\n        font-style: italic;\n        background: ${theme?.primaryColor || '#1976d2'}10;\n        padding: 10px;\n        border-radius: 4px;\n        margin-top: 10px;\n      }\n\n      .issue-metadata {\n        margin-top: 10px;\n        font-size: 0.85em;\n        color: ${theme?.textColor || '#888'};\n        background: ${theme?.backgroundColor || '#f5f5f5'};\n        padding: 8px;\n        border-radius: 4px;\n      }\n\n      /* Filter controls */\n      .filters {\n        background: ${theme?.backgroundColor || '#f8f9fa'};\n        padding: 20px;\n        border-radius: 8px;\n        margin-bottom: 30px;\n        display: flex;\n        gap: 15px;\n        flex-wrap: wrap;\n        align-items: center;\n      }\n\n      .filter-group {\n        display: flex;\n        align-items: center;\n        gap: 8px;\n      }\n\n      .filter-label {\n        font-weight: 500;\n        color: ${theme?.textColor || '#555'};\n      }\n\n      select, input {\n        padding: 8px 12px;\n        border: 1px solid ${theme?.borderColor || '#ddd'};\n        border-radius: 4px;\n        font-size: 0.9em;\n      }\n\n      /* Charts */\n      .charts-section {\n        margin: 40px 0;\n      }\n\n      .charts-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n        gap: 30px;\n        margin-top: 20px;\n      }\n\n      .chart-container {\n        background: ${theme?.backgroundColor || '#ffffff'};\n        border: 1px solid ${theme?.borderColor || '#e0e0e0'};\n        border-radius: 8px;\n        padding: 20px;\n      }\n\n      .chart-title {\n        font-size: 1.2em;\n        font-weight: 600;\n        margin-bottom: 15px;\n        text-align: center;\n        color: ${theme?.primaryColor || '#1565c0'};\n      }\n\n      /* Responsive design */\n      @media (max-width: 768px) {\n        .container {\n          margin: 10px;\n          padding: 15px;\n        }\n\n        .title {\n          font-size: 2em;\n        }\n\n        .stats-grid {\n          grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n          gap: 15px;\n        }\n\n        .filters {\n          flex-direction: column;\n          align-items: stretch;\n        }\n\n        .filter-group {\n          justify-content: space-between;\n        }\n      }\n\n      /* Animations */\n      @keyframes fadeIn {\n        from { opacity: 0; transform: translateY(20px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n\n      .fade-in {\n        animation: fadeIn 0.5s ease-out forwards;\n      }\n\n      /* Utility classes */\n      .hidden { display: none !important; }\n      .text-center { text-align: center; }\n      .mb-20 { margin-bottom: 20px; }\n      .mt-20 { margin-top: 20px; }\n\n      /* Custom CSS */\n      ${customCSS}\n    </style>`;\n  }\n\n  /**\n   * Generate Chart.js library inclusion\n   */\n  private generateChartJS(): string {\n    return `<script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>`;\n  }\n\n  /**\n   * Generate header section\n   */\n  private generateHeader(report: MonitoringReport, options?: ReportOptions): string {\n    const title = options?.title || `Diamond Monitoring Report`;\n    const statusClass = report.summary.status;\n    const statusIcon = this.getStatusIcon(report.summary.status);\n\n    return `\n    <div class=\"header\">\n      <h1 class=\"title\">${title}</h1>\n      <p class=\"subtitle\">\n        ${report.diamond.name} on ${report.network.name}\n        ${options?.includeMetadata ? `• ${report.timestamp.toLocaleDateString()}` : ''}\n      </p>\n      <div class=\"status ${statusClass}\">\n        ${statusIcon} ${report.summary.status}\n      </div>\n    </div>`;\n  }\n\n  /**\n   * Generate summary section\n   */\n  private generateSummary(report: MonitoringReport, options?: ReportOptions): string {\n    return `\n    <div class=\"section\">\n      <h2 class=\"section-title\">\n        <span class=\"icon\">📋</span>\n        Summary\n      </h2>\n      \n      <div class=\"stats-grid\">\n        <div class=\"stat-card\">\n          <div class=\"stat-value\">${report.summary.totalChecks}</div>\n          <div class=\"stat-label\">Total Checks</div>\n        </div>\n        <div class=\"stat-card\">\n          <div class=\"stat-value\" style=\"color: #2e7d32;\">${report.summary.passed}</div>\n          <div class=\"stat-label\">Passed</div>\n        </div>\n        <div class=\"stat-card\">\n          <div class=\"stat-value\" style=\"color: #d32f2f;\">${report.summary.failed}</div>\n          <div class=\"stat-label\">Failed</div>\n        </div>\n        <div class=\"stat-card\">\n          <div class=\"stat-value\" style=\"color: #f57c00;\">${report.summary.warnings}</div>\n          <div class=\"stat-label\">Warnings</div>\n        </div>\n        ${\n          report.summary.skipped > 0\n            ? `\n        <div class=\"stat-card\">\n          <div class=\"stat-value\" style=\"color: #666;\">${report.summary.skipped}</div>\n          <div class=\"stat-label\">Skipped</div>\n        </div>`\n            : ''\n        }\n      </div>\n\n      ${\n        options?.includeMetadata\n          ? `\n      <div style=\"margin-top: 30px; padding: 20px; background: #f8f9fa; border-radius: 8px;\">\n        <h3 style=\"margin-bottom: 15px; color: #1565c0;\">Execution Details</h3>\n        <div style=\"display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px;\">\n          <div><strong>Diamond Address:</strong><br>${report.diamond.address}</div>\n          <div><strong>Network:</strong><br>${report.network.name} (Chain ID: ${report.network.chainId})</div>\n          <div><strong>Duration:</strong><br>${(report.duration / 1000).toFixed(2)} seconds</div>\n          <div><strong>Modules:</strong><br>${report.modules.length} executed</div>\n        </div>\n      </div>`\n          : ''\n      }\n    </div>`;\n  }\n\n  /**\n   * Generate charts section\n   */\n  private generateCharts(chartData: ChartData[]): string {\n    return `\n    <div class=\"section charts-section\">\n      <h2 class=\"section-title\">\n        <span class=\"icon\">📊</span>\n        Analytics\n      </h2>\n      \n      <div class=\"charts-grid\">\n        ${chartData\n          .map(\n            (chart, index) => `\n          <div class=\"chart-container\">\n            <div class=\"chart-title\">${chart.title}</div>\n            <canvas id=\"chart-${index}\" width=\"400\" height=\"300\"></canvas>\n          </div>\n        `\n          )\n          .join('')}\n      </div>\n    </div>`;\n  }\n\n  /**\n   * Generate module results section\n   */\n  private generateModuleResults(report: MonitoringReport, options?: ReportOptions): string {\n    const maxIssues = options?.maxIssuesPerModule || 10;\n\n    return `\n    <div class=\"section\">\n      <h2 class=\"section-title\">\n        <span class=\"icon\">🧩</span>\n        Module Results\n      </h2>\n      \n      ${options?.interactive ? this.generateFilters() : ''}\n      \n      <div class=\"modules-grid\">\n        ${report.modules\n          .map(moduleResult => {\n            const statusIcon = this.getStatusIcon(moduleResult.status);\n            const issues = moduleResult.result.issues.slice(0, maxIssues);\n            const remainingCount = moduleResult.result.issues.length - maxIssues;\n\n            return `\n          <div class=\"module-card\" data-module=\"${moduleResult.moduleId}\" data-status=\"${moduleResult.status}\">\n            <div class=\"module-header\">\n              <div>\n                <span class=\"status ${moduleResult.status}\">${statusIcon}</span>\n                <span class=\"module-name\">${moduleResult.moduleName}</span>\n              </div>\n              <div class=\"module-duration\">\n                ${(moduleResult.duration / 1000).toFixed(2)}s\n              </div>\n            </div>\n            \n            ${\n              issues.length > 0\n                ? `\n            <div class=\"issues-container\">\n              ${issues\n                .map(\n                  issue => `\n                <div class=\"issue ${issue.severity}\" data-severity=\"${issue.severity}\" data-category=\"${issue.category}\">\n                  <div class=\"issue-title\">\n                    ${this.getSeverityIcon(issue.severity)} ${issue.title}\n                  </div>\n                  <div class=\"issue-description\">${issue.description}</div>\n                  ${\n                    issue.recommendation\n                      ? `\n                    <div class=\"issue-recommendation\">\n                      💡 ${issue.recommendation}\n                    </div>\n                  `\n                      : ''\n                  }\n                  ${\n                    options?.includeMetadata && issue.metadata\n                      ? `\n                    <div class=\"issue-metadata\">\n                      <strong>Metadata:</strong> ${JSON.stringify(issue.metadata, null, 2)}\n                    </div>\n                  `\n                      : ''\n                  }\n                </div>\n              `\n                )\n                .join('')}\n              \n              ${\n                remainingCount > 0\n                  ? `\n                <div style=\"text-align: center; margin-top: 15px; color: #666;\">\n                  ... and ${remainingCount} more issue${remainingCount === 1 ? '' : 's'}\n                </div>\n              `\n                  : ''\n              }\n            </div>`\n                : `\n            <div class=\"issues-container\">\n              <div style=\"text-align: center; color: #2e7d32; padding: 20px;\">\n                ✅ No issues found\n              </div>\n            </div>`\n            }\n          </div>`;\n          })\n          .join('')}\n      </div>\n    </div>`;\n  }\n\n  /**\n   * Generate filters for interactive mode\n   */\n  private generateFilters(): string {\n    return `\n    <div class=\"filters\">\n      <div class=\"filter-group\">\n        <label class=\"filter-label\" for=\"severity-filter\">Severity:</label>\n        <select id=\"severity-filter\" onchange=\"filterIssues()\">\n          <option value=\"\">All Severities</option>\n          <option value=\"CRITICAL\">Critical</option>\n          <option value=\"ERROR\">Error</option>\n          <option value=\"WARNING\">Warning</option>\n          <option value=\"INFO\">Info</option>\n        </select>\n      </div>\n      \n      <div class=\"filter-group\">\n        <label class=\"filter-label\" for=\"module-filter\">Module:</label>\n        <select id=\"module-filter\" onchange=\"filterIssues()\">\n          <option value=\"\">All Modules</option>\n        </select>\n      </div>\n      \n      <div class=\"filter-group\">\n        <label class=\"filter-label\" for=\"search-filter\">Search:</label>\n        <input type=\"text\" id=\"search-filter\" placeholder=\"Search issues...\" oninput=\"filterIssues()\">\n      </div>\n      \n      <div class=\"filter-group\">\n        <button onclick=\"resetFilters()\" style=\"padding: 8px 16px; background: #1565c0; color: white; border: none; border-radius: 4px; cursor: pointer;\">\n          Reset Filters\n        </button>\n      </div>\n    </div>`;\n  }\n\n  /**\n   * Generate detailed issues section\n   */\n  private generateDetailedIssues(report: MonitoringReport, options?: ReportOptions): string {\n    const allIssues = report.modules.flatMap(m =>\n      m.result.issues.map(issue => ({ ...issue, module: m.moduleName }))\n    );\n    const criticalIssues = allIssues.filter(i => i.severity === SeverityLevel.CRITICAL);\n    const errorIssues = allIssues.filter(i => i.severity === SeverityLevel.ERROR);\n\n    if (criticalIssues.length === 0 && errorIssues.length === 0) {\n      return '';\n    }\n\n    const highPriorityIssues = [...criticalIssues, ...errorIssues];\n\n    return `\n    <div class=\"section\">\n      <h2 class=\"section-title\">\n        <span class=\"icon\">🚨</span>\n        High Priority Issues\n      </h2>\n      \n      <div style=\"margin-top: 20px;\">\n        ${highPriorityIssues\n          .map(\n            (issue, index) => `\n          <div class=\"issue ${issue.severity}\" style=\"margin-bottom: 20px;\">\n            <div class=\"issue-title\">\n              ${index + 1}. ${this.getSeverityIcon(issue.severity)} ${issue.title}\n            </div>\n            <div style=\"margin: 10px 0; font-size: 0.9em; color: #666;\">\n              <strong>Module:</strong> ${issue.module} • <strong>Category:</strong> ${issue.category}\n            </div>\n            <div class=\"issue-description\">${issue.description}</div>\n            ${\n              issue.recommendation\n                ? `\n              <div class=\"issue-recommendation\">\n                💡 <strong>Recommendation:</strong> ${issue.recommendation}\n              </div>\n            `\n                : ''\n            }\n          </div>\n        `\n          )\n          .join('')}\n      </div>\n    </div>`;\n  }\n\n  /**\n   * Generate recommendations section\n   */\n  private generateRecommendations(report: MonitoringReport, options?: ReportOptions): string {\n    if (!report.recommendations?.length) return '';\n\n    return `\n    <div class=\"section\">\n      <h2 class=\"section-title\">\n        <span class=\"icon\">💡</span>\n        Recommendations\n      </h2>\n      \n      <div style=\"background: #e3f2fd; padding: 20px; border-radius: 8px; border-left: 4px solid #1976d2;\">\n        <ol style=\"margin-left: 20px;\">\n          ${report.recommendations.map(rec => `<li style=\"margin-bottom: 10px;\">${rec}</li>`).join('')}\n        </ol>\n      </div>\n    </div>`;\n  }\n\n  /**\n   * Generate footer section\n   */\n  private generateFooter(report: MonitoringReport, options?: ReportOptions): string {\n    return `\n    <div style=\"margin-top: 50px; padding-top: 30px; border-top: 2px solid #e0e0e0; text-align: center; color: #666;\">\n      <p>Generated by Diamond Monitoring System v1.0.0</p>\n      <p>Report generated at ${new Date().toLocaleString()}</p>\n      ${\n        options?.includeMetadata\n          ? `\n        <p style=\"margin-top: 10px; font-size: 0.9em;\">\n          Execution time: ${(report.duration / 1000).toFixed(2)}s • \n          Modules: ${report.modules.length} • \n          Total issues: ${report.modules.reduce((sum, m) => sum + m.result.issues.length, 0)}\n        </p>\n      `\n          : ''\n      }\n    </div>`;\n  }\n\n  /**\n   * Generate JavaScript for interactivity\n   */\n  private generateJavaScript(options?: ReportOptions): string {\n    return `\n    <script>\n      // Initialize when DOM is loaded\n      document.addEventListener('DOMContentLoaded', function() {\n        initializeFilters();\n        ${options?.includeCharts ? 'initializeCharts();' : ''}\n        addAnimations();\n      });\n\n      function initializeFilters() {\n        // Populate module filter\n        const moduleFilter = document.getElementById('module-filter');\n        const modules = [...new Set(Array.from(document.querySelectorAll('[data-module]')).map(el => el.dataset.module))];\n        modules.forEach(module => {\n          const option = document.createElement('option');\n          option.value = module;\n          option.textContent = module.replace(/([A-Z])/g, ' $1').trim();\n          moduleFilter.appendChild(option);\n        });\n      }\n\n      function filterIssues() {\n        const severityFilter = document.getElementById('severity-filter').value;\n        const moduleFilter = document.getElementById('module-filter').value;\n        const searchFilter = document.getElementById('search-filter').value.toLowerCase();\n\n        document.querySelectorAll('.module-card').forEach(card => {\n          let showCard = true;\n\n          // Module filter\n          if (moduleFilter && card.dataset.module !== moduleFilter) {\n            showCard = false;\n          }\n\n          // Show/hide card\n          card.style.display = showCard ? 'block' : 'none';\n\n          // Filter issues within visible cards\n          if (showCard) {\n            const issues = card.querySelectorAll('.issue');\n            let visibleIssues = 0;\n\n            issues.forEach(issue => {\n              let showIssue = true;\n\n              // Severity filter\n              if (severityFilter && issue.dataset.severity !== severityFilter) {\n                showIssue = false;\n              }\n\n              // Search filter\n              if (searchFilter && !issue.textContent.toLowerCase().includes(searchFilter)) {\n                showIssue = false;\n              }\n\n              issue.style.display = showIssue ? 'block' : 'none';\n              if (showIssue) visibleIssues++;\n            });\n\n            // Update issues container message\n            const issuesContainer = card.querySelector('.issues-container');\n            if (visibleIssues === 0 && issues.length > 0) {\n              if (!issuesContainer.querySelector('.no-results')) {\n                const noResults = document.createElement('div');\n                noResults.className = 'no-results';\n                noResults.style.cssText = 'text-align: center; color: #666; padding: 20px;';\n                noResults.textContent = 'No issues match the current filters';\n                issuesContainer.appendChild(noResults);\n              }\n            } else {\n              const noResults = issuesContainer.querySelector('.no-results');\n              if (noResults) noResults.remove();\n            }\n          }\n        });\n      }\n\n      function resetFilters() {\n        document.getElementById('severity-filter').value = '';\n        document.getElementById('module-filter').value = '';\n        document.getElementById('search-filter').value = '';\n        filterIssues();\n      }\n\n      function addAnimations() {\n        // Add fade-in animation to cards\n        const cards = document.querySelectorAll('.module-card, .stat-card');\n        cards.forEach((card, index) => {\n          card.style.animationDelay = (index * 0.1) + 's';\n          card.classList.add('fade-in');\n        });\n      }\n\n      ${options?.includeCharts ? this.generateChartInitialization() : ''}\n    </script>`;\n  }\n\n  /**\n   * Generate chart initialization JavaScript\n   */\n  private generateChartInitialization(): string {\n    return `\n      function initializeCharts() {\n        // Chart configurations will be injected here based on chart data\n        // This is a placeholder for the actual chart initialization\n      }`;\n  }\n\n  /**\n   * Generate chart data for visualizations\n   */\n  private generateChartData(report: MonitoringReport): ChartData[] {\n    const charts: ChartData[] = [];\n    const allIssues = report.modules.flatMap(m => m.result.issues);\n\n    // Severity distribution chart\n    const severityCounts = {\n      critical: allIssues.filter(i => i.severity === 'critical').length,\n      error: allIssues.filter(i => i.severity === 'error').length,\n      warning: allIssues.filter(i => i.severity === 'warning').length,\n      info: allIssues.filter(i => i.severity === 'info').length,\n    };\n\n    charts.push({\n      type: 'doughnut',\n      title: 'Issues by Severity',\n      labels: ['Critical', 'Error', 'Warning', 'Info'],\n      data: [\n        severityCounts.critical,\n        severityCounts.error,\n        severityCounts.warning,\n        severityCounts.info,\n      ],\n      backgroundColor: ['#d32f2f', '#f57c00', '#fbc02d', '#1976d2'],\n    });\n\n    // Module performance chart\n    charts.push({\n      type: 'bar',\n      title: 'Module Execution Time',\n      labels: report.modules.map(m => m.moduleName.replace(/([A-Z])/g, ' $1').trim()),\n      data: report.modules.map(m => m.duration),\n      backgroundColor: ['#42a5f5'],\n    });\n\n    return charts;\n  }\n\n  // Utility methods\n\n  private getStatusIcon(status: MonitoringStatus): string {\n    switch (status) {\n      case MonitoringStatus.PASS:\n        return '✅';\n      case MonitoringStatus.WARNING:\n        return '⚠️';\n      case MonitoringStatus.FAIL:\n        return '❌';\n      case MonitoringStatus.SKIPPED:\n        return '⏭️';\n      default:\n        return 'ℹ️';\n    }\n  }\n\n  private getSeverityIcon(severity: SeverityLevel): string {\n    switch (severity) {\n      case SeverityLevel.CRITICAL:\n        return '🚨';\n      case SeverityLevel.ERROR:\n        return '❌';\n      case SeverityLevel.WARNING:\n        return '⚠️';\n      case SeverityLevel.INFO:\n        return 'ℹ️';\n      default:\n        return '•';\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7f71bc823159a59feb6284ffeffdc489c657d6f4","contentHash":"d35a74603ccc80d816f4531d75f96d8ff9bab1dcab601176a4fe485a0c5582b4"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/formatters/MarkdownFormatter.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/formatters/MarkdownFormatter.ts","statementMap":{"0":{"start":{"line":8,"column":0},"end":{"line":8,"column":62}},"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}},"2":{"start":{"line":10,"column":16},"end":{"line":10,"column":43}},"3":{"start":{"line":16,"column":8},"end":{"line":16,"column":29}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":38}},"5":{"start":{"line":18,"column":8},"end":{"line":18,"column":31}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":40}},"7":{"start":{"line":25,"column":25},"end":{"line":25,"column":27}},"8":{"start":{"line":27,"column":8},"end":{"line":27,"column":59}},"9":{"start":{"line":28,"column":8},"end":{"line":28,"column":57}},"10":{"start":{"line":29,"column":8},"end":{"line":29,"column":61}},"11":{"start":{"line":30,"column":8},"end":{"line":30,"column":62}},"12":{"start":{"line":32,"column":8},"end":{"line":32,"column":67}},"13":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"14":{"start":{"line":35,"column":12},"end":{"line":35,"column":72}},"15":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"16":{"start":{"line":39,"column":12},"end":{"line":39,"column":73}},"17":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"18":{"start":{"line":43,"column":12},"end":{"line":43,"column":66}},"19":{"start":{"line":45,"column":8},"end":{"line":45,"column":71}},"20":{"start":{"line":45,"column":42},"end":{"line":45,"column":56}},"21":{"start":{"line":51,"column":23},"end":{"line":51,"column":25}},"22":{"start":{"line":52,"column":25},"end":{"line":52,"column":27}},"23":{"start":{"line":54,"column":34},"end":{"line":54,"column":103}},"24":{"start":{"line":55,"column":8},"end":{"line":59,"column":11}},"25":{"start":{"line":56,"column":12},"end":{"line":58,"column":13}},"26":{"start":{"line":57,"column":16},"end":{"line":57,"column":81}},"27":{"start":{"line":60,"column":8},"end":{"line":64,"column":10}},"28":{"start":{"line":71,"column":22},"end":{"line":71,"column":67}},"29":{"start":{"line":72,"column":28},"end":{"line":72,"column":70}},"30":{"start":{"line":73,"column":26},"end":{"line":73,"column":103}},"31":{"start":{"line":74,"column":8},"end":{"line":83,"column":5}},"32":{"start":{"line":89,"column":25},"end":{"line":93,"column":9}},"33":{"start":{"line":94,"column":8},"end":{"line":96,"column":9}},"34":{"start":{"line":95,"column":12},"end":{"line":95,"column":67}},"35":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"36":{"start":{"line":98,"column":12},"end":{"line":98,"column":67}},"37":{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},"38":{"start":{"line":101,"column":12},"end":{"line":101,"column":71}},"39":{"start":{"line":103,"column":8},"end":{"line":107,"column":5}},"40":{"start":{"line":113,"column":25},"end":{"line":115,"column":17}},"41":{"start":{"line":116,"column":8},"end":{"line":128,"column":51}},"42":{"start":{"line":134,"column":26},"end":{"line":134,"column":70}},"43":{"start":{"line":134,"column":54},"end":{"line":134,"column":69}},"44":{"start":{"line":135,"column":31},"end":{"line":135,"column":106}},"45":{"start":{"line":135,"column":53},"end":{"line":135,"column":98}},"46":{"start":{"line":136,"column":28},"end":{"line":136,"column":100}},"47":{"start":{"line":136,"column":50},"end":{"line":136,"column":92}},"48":{"start":{"line":137,"column":30},"end":{"line":137,"column":104}},"49":{"start":{"line":137,"column":52},"end":{"line":137,"column":96}},"50":{"start":{"line":138,"column":27},"end":{"line":138,"column":98}},"51":{"start":{"line":138,"column":49},"end":{"line":138,"column":90}},"52":{"start":{"line":139,"column":23},"end":{"line":145,"column":1}},"53":{"start":{"line":146,"column":8},"end":{"line":148,"column":9}},"54":{"start":{"line":147,"column":12},"end":{"line":147,"column":134}},"55":{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},"56":{"start":{"line":150,"column":12},"end":{"line":150,"column":113}},"57":{"start":{"line":152,"column":8},"end":{"line":154,"column":9}},"58":{"start":{"line":153,"column":12},"end":{"line":153,"column":113}},"59":{"start":{"line":155,"column":8},"end":{"line":157,"column":9}},"60":{"start":{"line":156,"column":12},"end":{"line":156,"column":100}},"61":{"start":{"line":158,"column":8},"end":{"line":160,"column":9}},"62":{"start":{"line":159,"column":12},"end":{"line":159,"column":73}},"63":{"start":{"line":162,"column":28},"end":{"line":162,"column":71}},"64":{"start":{"line":163,"column":8},"end":{"line":163,"column":65}},"65":{"start":{"line":164,"column":8},"end":{"line":164,"column":24}},"66":{"start":{"line":170,"column":26},"end":{"line":170,"column":59}},"67":{"start":{"line":171,"column":22},"end":{"line":175,"column":1}},"68":{"start":{"line":176,"column":8},"end":{"line":254,"column":9}},"69":{"start":{"line":177,"column":31},"end":{"line":177,"column":70}},"70":{"start":{"line":178,"column":29},"end":{"line":178,"column":70}},"71":{"start":{"line":179,"column":31},"end":{"line":179,"column":64}},"72":{"start":{"line":180,"column":12},"end":{"line":186,"column":2}},"73":{"start":{"line":187,"column":12},"end":{"line":240,"column":13}},"74":{"start":{"line":188,"column":31},"end":{"line":188,"column":77}},"75":{"start":{"line":189,"column":16},"end":{"line":189,"column":45}},"76":{"start":{"line":190,"column":16},"end":{"line":214,"column":17}},"77":{"start":{"line":190,"column":29},"end":{"line":190,"column":30}},"78":{"start":{"line":191,"column":34},"end":{"line":191,"column":43}},"79":{"start":{"line":192,"column":41},"end":{"line":192,"column":77}},"80":{"start":{"line":193,"column":20},"end":{"line":197,"column":2}},"81":{"start":{"line":198,"column":20},"end":{"line":202,"column":21}},"82":{"start":{"line":199,"column":24},"end":{"line":201,"column":2}},"83":{"start":{"line":203,"column":20},"end":{"line":213,"column":21}},"84":{"start":{"line":204,"column":24},"end":{"line":212,"column":2}},"85":{"start":{"line":215,"column":16},"end":{"line":234,"column":17}},"86":{"start":{"line":216,"column":38},"end":{"line":216,"column":83}},"87":{"start":{"line":217,"column":20},"end":{"line":233,"column":2}},"88":{"start":{"line":223,"column":45},"end":{"line":223,"column":81}},"89":{"start":{"line":224,"column":24},"end":{"line":228,"column":90}},"90":{"start":{"line":237,"column":16},"end":{"line":239,"column":2}},"91":{"start":{"line":242,"column":12},"end":{"line":252,"column":13}},"92":{"start":{"line":243,"column":16},"end":{"line":251,"column":2}},"93":{"start":{"line":253,"column":12},"end":{"line":253,"column":33}},"94":{"start":{"line":255,"column":8},"end":{"line":255,"column":23}},"95":{"start":{"line":261,"column":26},"end":{"line":261,"column":121}},"96":{"start":{"line":261,"column":54},"end":{"line":261,"column":120}},"97":{"start":{"line":261,"column":84},"end":{"line":261,"column":118}},"98":{"start":{"line":262,"column":8},"end":{"line":266,"column":9}},"99":{"start":{"line":263,"column":12},"end":{"line":265,"column":62}},"100":{"start":{"line":268,"column":31},"end":{"line":273,"column":9}},"101":{"start":{"line":269,"column":68},"end":{"line":269,"column":113}},"102":{"start":{"line":270,"column":65},"end":{"line":270,"column":107}},"103":{"start":{"line":271,"column":67},"end":{"line":271,"column":111}},"104":{"start":{"line":272,"column":64},"end":{"line":272,"column":105}},"105":{"start":{"line":274,"column":22},"end":{"line":278,"column":1}},"106":{"start":{"line":279,"column":8},"end":{"line":319,"column":9}},"107":{"start":{"line":280,"column":12},"end":{"line":281,"column":25}},"108":{"start":{"line":281,"column":16},"end":{"line":281,"column":25}},"109":{"start":{"line":282,"column":33},"end":{"line":282,"column":63}},"110":{"start":{"line":283,"column":33},"end":{"line":283,"column":99}},"111":{"start":{"line":284,"column":12},"end":{"line":286,"column":2}},"112":{"start":{"line":288,"column":33},"end":{"line":288,"column":73}},"113":{"start":{"line":289,"column":12},"end":{"line":318,"column":13}},"114":{"start":{"line":289,"column":25},"end":{"line":289,"column":26}},"115":{"start":{"line":290,"column":30},"end":{"line":290,"column":45}},"116":{"start":{"line":291,"column":16},"end":{"line":299,"column":2}},"117":{"start":{"line":300,"column":16},"end":{"line":305,"column":17}},"118":{"start":{"line":301,"column":20},"end":{"line":304,"column":2}},"119":{"start":{"line":306,"column":16},"end":{"line":316,"column":17}},"120":{"start":{"line":307,"column":20},"end":{"line":315,"column":2}},"121":{"start":{"line":317,"column":16},"end":{"line":317,"column":37}},"122":{"start":{"line":320,"column":8},"end":{"line":320,"column":23}},"123":{"start":{"line":326,"column":8},"end":{"line":327,"column":22}},"124":{"start":{"line":327,"column":12},"end":{"line":327,"column":22}},"125":{"start":{"line":328,"column":22},"end":{"line":332,"column":1}},"126":{"start":{"line":333,"column":8},"end":{"line":335,"column":11}},"127":{"start":{"line":334,"column":12},"end":{"line":334,"column":61}},"128":{"start":{"line":336,"column":8},"end":{"line":336,"column":23}},"129":{"start":{"line":342,"column":8},"end":{"line":377,"column":87}},"130":{"start":{"line":361,"column":65},"end":{"line":361,"column":81}},"131":{"start":{"line":384,"column":21},"end":{"line":389,"column":10}},"132":{"start":{"line":385,"column":31},"end":{"line":385,"column":59}},"133":{"start":{"line":386,"column":29},"end":{"line":386,"column":59}},"134":{"start":{"line":387,"column":27},"end":{"line":387,"column":49}},"135":{"start":{"line":388,"column":12},"end":{"line":388,"column":96}},"136":{"start":{"line":390,"column":8},"end":{"line":392,"column":20}},"137":{"start":{"line":398,"column":23},"end":{"line":398,"column":61}},"138":{"start":{"line":399,"column":22},"end":{"line":399,"column":36}},"139":{"start":{"line":400,"column":20},"end":{"line":400,"column":58}},"140":{"start":{"line":401,"column":8},"end":{"line":403,"column":8}},"141":{"start":{"line":409,"column":8},"end":{"line":420,"column":9}},"142":{"start":{"line":411,"column":16},"end":{"line":411,"column":87}},"143":{"start":{"line":413,"column":16},"end":{"line":413,"column":88}},"144":{"start":{"line":415,"column":16},"end":{"line":415,"column":79}},"145":{"start":{"line":417,"column":16},"end":{"line":417,"column":91}},"146":{"start":{"line":419,"column":16},"end":{"line":419,"column":91}},"147":{"start":{"line":426,"column":8},"end":{"line":437,"column":9}},"148":{"start":{"line":428,"column":16},"end":{"line":428,"column":89}},"149":{"start":{"line":430,"column":16},"end":{"line":430,"column":86}},"150":{"start":{"line":432,"column":16},"end":{"line":432,"column":90}},"151":{"start":{"line":434,"column":16},"end":{"line":434,"column":82}},"152":{"start":{"line":436,"column":16},"end":{"line":436,"column":93}},"153":{"start":{"line":443,"column":8},"end":{"line":454,"column":9}},"154":{"start":{"line":445,"column":16},"end":{"line":445,"column":27}},"155":{"start":{"line":447,"column":16},"end":{"line":447,"column":28}},"156":{"start":{"line":449,"column":16},"end":{"line":449,"column":27}},"157":{"start":{"line":451,"column":16},"end":{"line":451,"column":28}},"158":{"start":{"line":453,"column":16},"end":{"line":453,"column":28}},"159":{"start":{"line":460,"column":8},"end":{"line":471,"column":9}},"160":{"start":{"line":462,"column":16},"end":{"line":462,"column":28}},"161":{"start":{"line":464,"column":16},"end":{"line":464,"column":27}},"162":{"start":{"line":466,"column":16},"end":{"line":466,"column":28}},"163":{"start":{"line":468,"column":16},"end":{"line":468,"column":28}},"164":{"start":{"line":470,"column":16},"end":{"line":470,"column":27}},"165":{"start":{"line":477,"column":23},"end":{"line":477,"column":34}},"166":{"start":{"line":478,"column":8},"end":{"line":494,"column":9}},"167":{"start":{"line":480,"column":38},"end":{"line":485,"column":17}},"168":{"start":{"line":486,"column":16},"end":{"line":486,"column":111}},"169":{"start":{"line":486,"column":38},"end":{"line":486,"column":109}},"170":{"start":{"line":487,"column":16},"end":{"line":487,"column":22}},"171":{"start":{"line":489,"column":16},"end":{"line":489,"column":76}},"172":{"start":{"line":489,"column":38},"end":{"line":489,"column":74}},"173":{"start":{"line":490,"column":16},"end":{"line":490,"column":22}},"174":{"start":{"line":492,"column":16},"end":{"line":492,"column":72}},"175":{"start":{"line":492,"column":38},"end":{"line":492,"column":70}},"176":{"start":{"line":493,"column":16},"end":{"line":493,"column":22}},"177":{"start":{"line":495,"column":8},"end":{"line":495,"column":22}},"178":{"start":{"line":501,"column":24},"end":{"line":501,"column":96}},"179":{"start":{"line":501,"column":59},"end":{"line":501,"column":94}},"180":{"start":{"line":502,"column":8},"end":{"line":502,"column":82}},"181":{"start":{"line":508,"column":24},"end":{"line":508,"column":96}},"182":{"start":{"line":508,"column":59},"end":{"line":508,"column":94}},"183":{"start":{"line":509,"column":8},"end":{"line":509,"column":82}},"184":{"start":{"line":512,"column":0},"end":{"line":512,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":18},"end":{"line":20,"column":5}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":34},"end":{"line":46,"column":5}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":45,"column":31},"end":{"line":45,"column":32}},"loc":{"start":{"line":45,"column":42},"end":{"line":45,"column":56}},"line":45},"3":{"name":"(anonymous_3)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":29},"end":{"line":65,"column":5}},"line":50},"4":{"name":"(anonymous_4)","decl":{"start":{"line":55,"column":34},"end":{"line":55,"column":35}},"loc":{"start":{"line":55,"column":44},"end":{"line":59,"column":9}},"line":55},"5":{"name":"(anonymous_5)","decl":{"start":{"line":70,"column":4},"end":{"line":70,"column":5}},"loc":{"start":{"line":70,"column":35},"end":{"line":84,"column":5}},"line":70},"6":{"name":"(anonymous_6)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":33},"end":{"line":108,"column":5}},"line":88},"7":{"name":"(anonymous_7)","decl":{"start":{"line":112,"column":4},"end":{"line":112,"column":5}},"loc":{"start":{"line":112,"column":37},"end":{"line":129,"column":5}},"line":112},"8":{"name":"(anonymous_8)","decl":{"start":{"line":133,"column":4},"end":{"line":133,"column":5}},"loc":{"start":{"line":133,"column":38},"end":{"line":165,"column":5}},"line":133},"9":{"name":"(anonymous_9)","decl":{"start":{"line":134,"column":49},"end":{"line":134,"column":50}},"loc":{"start":{"line":134,"column":54},"end":{"line":134,"column":69}},"line":134},"10":{"name":"(anonymous_10)","decl":{"start":{"line":135,"column":48},"end":{"line":135,"column":49}},"loc":{"start":{"line":135,"column":53},"end":{"line":135,"column":98}},"line":135},"11":{"name":"(anonymous_11)","decl":{"start":{"line":136,"column":45},"end":{"line":136,"column":46}},"loc":{"start":{"line":136,"column":50},"end":{"line":136,"column":92}},"line":136},"12":{"name":"(anonymous_12)","decl":{"start":{"line":137,"column":47},"end":{"line":137,"column":48}},"loc":{"start":{"line":137,"column":52},"end":{"line":137,"column":96}},"line":137},"13":{"name":"(anonymous_13)","decl":{"start":{"line":138,"column":44},"end":{"line":138,"column":45}},"loc":{"start":{"line":138,"column":49},"end":{"line":138,"column":90}},"line":138},"14":{"name":"(anonymous_14)","decl":{"start":{"line":169,"column":4},"end":{"line":169,"column":5}},"loc":{"start":{"line":169,"column":43},"end":{"line":256,"column":5}},"line":169},"15":{"name":"(anonymous_15)","decl":{"start":{"line":222,"column":29},"end":{"line":222,"column":30}},"loc":{"start":{"line":222,"column":47},"end":{"line":229,"column":21}},"line":222},"16":{"name":"(anonymous_16)","decl":{"start":{"line":260,"column":4},"end":{"line":260,"column":5}},"loc":{"start":{"line":260,"column":44},"end":{"line":321,"column":5}},"line":260},"17":{"name":"(anonymous_17)","decl":{"start":{"line":261,"column":49},"end":{"line":261,"column":50}},"loc":{"start":{"line":261,"column":54},"end":{"line":261,"column":120}},"line":261},"18":{"name":"(anonymous_18)","decl":{"start":{"line":261,"column":74},"end":{"line":261,"column":75}},"loc":{"start":{"line":261,"column":84},"end":{"line":261,"column":118}},"line":261},"19":{"name":"(anonymous_19)","decl":{"start":{"line":269,"column":63},"end":{"line":269,"column":64}},"loc":{"start":{"line":269,"column":68},"end":{"line":269,"column":113}},"line":269},"20":{"name":"(anonymous_20)","decl":{"start":{"line":270,"column":60},"end":{"line":270,"column":61}},"loc":{"start":{"line":270,"column":65},"end":{"line":270,"column":107}},"line":270},"21":{"name":"(anonymous_21)","decl":{"start":{"line":271,"column":62},"end":{"line":271,"column":63}},"loc":{"start":{"line":271,"column":67},"end":{"line":271,"column":111}},"line":271},"22":{"name":"(anonymous_22)","decl":{"start":{"line":272,"column":59},"end":{"line":272,"column":60}},"loc":{"start":{"line":272,"column":64},"end":{"line":272,"column":105}},"line":272},"23":{"name":"(anonymous_23)","decl":{"start":{"line":325,"column":4},"end":{"line":325,"column":5}},"loc":{"start":{"line":325,"column":45},"end":{"line":337,"column":5}},"line":325},"24":{"name":"(anonymous_24)","decl":{"start":{"line":333,"column":39},"end":{"line":333,"column":40}},"loc":{"start":{"line":333,"column":66},"end":{"line":335,"column":9}},"line":333},"25":{"name":"(anonymous_25)","decl":{"start":{"line":341,"column":4},"end":{"line":341,"column":5}},"loc":{"start":{"line":341,"column":38},"end":{"line":378,"column":5}},"line":341},"26":{"name":"(anonymous_26)","decl":{"start":{"line":361,"column":53},"end":{"line":361,"column":54}},"loc":{"start":{"line":361,"column":65},"end":{"line":361,"column":81}},"line":361},"27":{"name":"(anonymous_27)","decl":{"start":{"line":383,"column":4},"end":{"line":383,"column":5}},"loc":{"start":{"line":383,"column":43},"end":{"line":393,"column":5}},"line":383},"28":{"name":"(anonymous_28)","decl":{"start":{"line":384,"column":40},"end":{"line":384,"column":41}},"loc":{"start":{"line":384,"column":45},"end":{"line":389,"column":9}},"line":384},"29":{"name":"(anonymous_29)","decl":{"start":{"line":397,"column":4},"end":{"line":397,"column":5}},"loc":{"start":{"line":397,"column":48},"end":{"line":404,"column":5}},"line":397},"30":{"name":"(anonymous_30)","decl":{"start":{"line":408,"column":4},"end":{"line":408,"column":5}},"loc":{"start":{"line":408,"column":27},"end":{"line":421,"column":5}},"line":408},"31":{"name":"(anonymous_31)","decl":{"start":{"line":425,"column":4},"end":{"line":425,"column":5}},"loc":{"start":{"line":425,"column":31},"end":{"line":438,"column":5}},"line":425},"32":{"name":"(anonymous_32)","decl":{"start":{"line":442,"column":4},"end":{"line":442,"column":5}},"loc":{"start":{"line":442,"column":26},"end":{"line":455,"column":5}},"line":442},"33":{"name":"(anonymous_33)","decl":{"start":{"line":459,"column":4},"end":{"line":459,"column":5}},"loc":{"start":{"line":459,"column":30},"end":{"line":472,"column":5}},"line":459},"34":{"name":"(anonymous_34)","decl":{"start":{"line":476,"column":4},"end":{"line":476,"column":5}},"loc":{"start":{"line":476,"column":31},"end":{"line":496,"column":5}},"line":476},"35":{"name":"(anonymous_35)","decl":{"start":{"line":486,"column":28},"end":{"line":486,"column":29}},"loc":{"start":{"line":486,"column":38},"end":{"line":486,"column":109}},"line":486},"36":{"name":"(anonymous_36)","decl":{"start":{"line":489,"column":28},"end":{"line":489,"column":29}},"loc":{"start":{"line":489,"column":38},"end":{"line":489,"column":74}},"line":489},"37":{"name":"(anonymous_37)","decl":{"start":{"line":492,"column":28},"end":{"line":492,"column":29}},"loc":{"start":{"line":492,"column":38},"end":{"line":492,"column":70}},"line":492},"38":{"name":"(anonymous_38)","decl":{"start":{"line":500,"column":4},"end":{"line":500,"column":5}},"loc":{"start":{"line":500,"column":29},"end":{"line":503,"column":5}},"line":500},"39":{"name":"(anonymous_39)","decl":{"start":{"line":501,"column":46},"end":{"line":501,"column":47}},"loc":{"start":{"line":501,"column":59},"end":{"line":501,"column":94}},"line":501},"40":{"name":"(anonymous_40)","decl":{"start":{"line":507,"column":4},"end":{"line":507,"column":5}},"loc":{"start":{"line":507,"column":29},"end":{"line":510,"column":5}},"line":507},"41":{"name":"(anonymous_41)","decl":{"start":{"line":508,"column":46},"end":{"line":508,"column":47}},"loc":{"start":{"line":508,"column":59},"end":{"line":508,"column":94}},"line":508}},"branchMap":{"0":{"loc":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},{"start":{},"end":{}}],"line":34},"1":{"loc":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},{"start":{},"end":{}}],"line":38},"2":{"loc":{"start":{"line":38,"column":12},"end":{"line":38,"column":77}},"type":"binary-expr","locations":[{"start":{"line":38,"column":12},"end":{"line":38,"column":43}},{"start":{"line":38,"column":47},"end":{"line":38,"column":77}}],"line":38},"3":{"loc":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},{"start":{},"end":{}}],"line":42},"4":{"loc":{"start":{"line":56,"column":12},"end":{"line":58,"column":13}},"type":"if","locations":[{"start":{"line":56,"column":12},"end":{"line":58,"column":13}},{"start":{},"end":{}}],"line":56},"5":{"loc":{"start":{"line":56,"column":16},"end":{"line":56,"column":42}},"type":"binary-expr","locations":[{"start":{"line":56,"column":16},"end":{"line":56,"column":23}},{"start":{"line":56,"column":27},"end":{"line":56,"column":42}}],"line":56},"6":{"loc":{"start":{"line":71,"column":22},"end":{"line":71,"column":67}},"type":"binary-expr","locations":[{"start":{"line":71,"column":22},"end":{"line":71,"column":36}},{"start":{"line":71,"column":40},"end":{"line":71,"column":67}}],"line":71},"7":{"loc":{"start":{"line":73,"column":26},"end":{"line":73,"column":103}},"type":"cond-expr","locations":[{"start":{"line":73,"column":53},"end":{"line":73,"column":98}},{"start":{"line":73,"column":101},"end":{"line":73,"column":103}}],"line":73},"8":{"loc":{"start":{"line":81,"column":2},"end":{"line":81,"column":135}},"type":"cond-expr","locations":[{"start":{"line":81,"column":29},"end":{"line":81,"column":130}},{"start":{"line":81,"column":133},"end":{"line":81,"column":135}}],"line":81},"9":{"loc":{"start":{"line":94,"column":8},"end":{"line":96,"column":9}},"type":"if","locations":[{"start":{"line":94,"column":8},"end":{"line":96,"column":9}},{"start":{},"end":{}}],"line":94},"10":{"loc":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"type":"if","locations":[{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},{"start":{},"end":{}}],"line":97},"11":{"loc":{"start":{"line":97,"column":12},"end":{"line":97,"column":77}},"type":"binary-expr","locations":[{"start":{"line":97,"column":12},"end":{"line":97,"column":43}},{"start":{"line":97,"column":47},"end":{"line":97,"column":77}}],"line":97},"12":{"loc":{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},{"start":{},"end":{}}],"line":100},"13":{"loc":{"start":{"line":113,"column":25},"end":{"line":115,"column":17}},"type":"cond-expr","locations":[{"start":{"line":114,"column":14},"end":{"line":114,"column":85}},{"start":{"line":115,"column":14},"end":{"line":115,"column":17}}],"line":113},"14":{"loc":{"start":{"line":146,"column":8},"end":{"line":148,"column":9}},"type":"if","locations":[{"start":{"line":146,"column":8},"end":{"line":148,"column":9}},{"start":{},"end":{}}],"line":146},"15":{"loc":{"start":{"line":147,"column":66},"end":{"line":147,"column":97}},"type":"cond-expr","locations":[{"start":{"line":147,"column":89},"end":{"line":147,"column":91}},{"start":{"line":147,"column":94},"end":{"line":147,"column":97}}],"line":147},"16":{"loc":{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},"type":"if","locations":[{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},{"start":{},"end":{}}],"line":149},"17":{"loc":{"start":{"line":150,"column":53},"end":{"line":150,"column":81}},"type":"cond-expr","locations":[{"start":{"line":150,"column":73},"end":{"line":150,"column":75}},{"start":{"line":150,"column":78},"end":{"line":150,"column":81}}],"line":150},"18":{"loc":{"start":{"line":152,"column":8},"end":{"line":154,"column":9}},"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":154,"column":9}},{"start":{},"end":{}}],"line":152},"19":{"loc":{"start":{"line":153,"column":58},"end":{"line":153,"column":88}},"type":"cond-expr","locations":[{"start":{"line":153,"column":80},"end":{"line":153,"column":82}},{"start":{"line":153,"column":85},"end":{"line":153,"column":88}}],"line":153},"20":{"loc":{"start":{"line":155,"column":8},"end":{"line":157,"column":9}},"type":"if","locations":[{"start":{"line":155,"column":8},"end":{"line":157,"column":9}},{"start":{},"end":{}}],"line":155},"21":{"loc":{"start":{"line":156,"column":66},"end":{"line":156,"column":93}},"type":"cond-expr","locations":[{"start":{"line":156,"column":85},"end":{"line":156,"column":87}},{"start":{"line":156,"column":90},"end":{"line":156,"column":93}}],"line":156},"22":{"loc":{"start":{"line":158,"column":8},"end":{"line":160,"column":9}},"type":"if","locations":[{"start":{"line":158,"column":8},"end":{"line":160,"column":9}},{"start":{},"end":{}}],"line":158},"23":{"loc":{"start":{"line":158,"column":12},"end":{"line":158,"column":53}},"type":"binary-expr","locations":[{"start":{"line":158,"column":12},"end":{"line":158,"column":32}},{"start":{"line":158,"column":36},"end":{"line":158,"column":53}}],"line":158},"24":{"loc":{"start":{"line":170,"column":26},"end":{"line":170,"column":59}},"type":"binary-expr","locations":[{"start":{"line":170,"column":26},"end":{"line":170,"column":53}},{"start":{"line":170,"column":57},"end":{"line":170,"column":59}}],"line":170},"25":{"loc":{"start":{"line":187,"column":12},"end":{"line":240,"column":13}},"type":"if","locations":[{"start":{"line":187,"column":12},"end":{"line":240,"column":13}},{"start":{"line":236,"column":17},"end":{"line":240,"column":13}}],"line":187},"26":{"loc":{"start":{"line":198,"column":20},"end":{"line":202,"column":21}},"type":"if","locations":[{"start":{"line":198,"column":20},"end":{"line":202,"column":21}},{"start":{},"end":{}}],"line":198},"27":{"loc":{"start":{"line":203,"column":20},"end":{"line":213,"column":21}},"type":"if","locations":[{"start":{"line":203,"column":20},"end":{"line":213,"column":21}},{"start":{},"end":{}}],"line":203},"28":{"loc":{"start":{"line":203,"column":24},"end":{"line":203,"column":66}},"type":"binary-expr","locations":[{"start":{"line":203,"column":24},"end":{"line":203,"column":48}},{"start":{"line":203,"column":52},"end":{"line":203,"column":66}}],"line":203},"29":{"loc":{"start":{"line":215,"column":16},"end":{"line":234,"column":17}},"type":"if","locations":[{"start":{"line":215,"column":16},"end":{"line":234,"column":17}},{"start":{},"end":{}}],"line":215},"30":{"loc":{"start":{"line":218,"column":39},"end":{"line":218,"column":65}},"type":"cond-expr","locations":[{"start":{"line":218,"column":57},"end":{"line":218,"column":59}},{"start":{"line":218,"column":62},"end":{"line":218,"column":65}}],"line":218},"31":{"loc":{"start":{"line":228,"column":5},"end":{"line":228,"column":87}},"type":"cond-expr","locations":[{"start":{"line":228,"column":28},"end":{"line":228,"column":82}},{"start":{"line":228,"column":85},"end":{"line":228,"column":87}}],"line":228},"32":{"loc":{"start":{"line":242,"column":12},"end":{"line":252,"column":13}},"type":"if","locations":[{"start":{"line":242,"column":12},"end":{"line":252,"column":13}},{"start":{},"end":{}}],"line":242},"33":{"loc":{"start":{"line":242,"column":16},"end":{"line":242,"column":72}},"type":"binary-expr","locations":[{"start":{"line":242,"column":16},"end":{"line":242,"column":40}},{"start":{"line":242,"column":44},"end":{"line":242,"column":72}}],"line":242},"34":{"loc":{"start":{"line":262,"column":8},"end":{"line":266,"column":9}},"type":"if","locations":[{"start":{"line":262,"column":8},"end":{"line":266,"column":9}},{"start":{},"end":{}}],"line":262},"35":{"loc":{"start":{"line":280,"column":12},"end":{"line":281,"column":25}},"type":"if","locations":[{"start":{"line":280,"column":12},"end":{"line":281,"column":25}},{"start":{},"end":{}}],"line":280},"36":{"loc":{"start":{"line":300,"column":16},"end":{"line":305,"column":17}},"type":"if","locations":[{"start":{"line":300,"column":16},"end":{"line":305,"column":17}},{"start":{},"end":{}}],"line":300},"37":{"loc":{"start":{"line":306,"column":16},"end":{"line":316,"column":17}},"type":"if","locations":[{"start":{"line":306,"column":16},"end":{"line":316,"column":17}},{"start":{},"end":{}}],"line":306},"38":{"loc":{"start":{"line":306,"column":20},"end":{"line":306,"column":62}},"type":"binary-expr","locations":[{"start":{"line":306,"column":20},"end":{"line":306,"column":44}},{"start":{"line":306,"column":48},"end":{"line":306,"column":62}}],"line":306},"39":{"loc":{"start":{"line":326,"column":8},"end":{"line":327,"column":22}},"type":"if","locations":[{"start":{"line":326,"column":8},"end":{"line":327,"column":22}},{"start":{},"end":{}}],"line":326},"40":{"loc":{"start":{"line":350,"column":20},"end":{"line":350,"column":50}},"type":"binary-expr","locations":[{"start":{"line":350,"column":20},"end":{"line":350,"column":41}},{"start":{"line":350,"column":45},"end":{"line":350,"column":50}}],"line":350},"41":{"loc":{"start":{"line":351,"column":25},"end":{"line":351,"column":65}},"type":"binary-expr","locations":[{"start":{"line":351,"column":25},"end":{"line":351,"column":56}},{"start":{"line":351,"column":60},"end":{"line":351,"column":65}}],"line":351},"42":{"loc":{"start":{"line":352,"column":27},"end":{"line":352,"column":66}},"type":"binary-expr","locations":[{"start":{"line":352,"column":27},"end":{"line":352,"column":57}},{"start":{"line":352,"column":61},"end":{"line":352,"column":66}}],"line":352},"43":{"loc":{"start":{"line":353,"column":24},"end":{"line":353,"column":58}},"type":"binary-expr","locations":[{"start":{"line":353,"column":24},"end":{"line":353,"column":49}},{"start":{"line":353,"column":53},"end":{"line":353,"column":58}}],"line":353},"44":{"loc":{"start":{"line":397,"column":36},"end":{"line":397,"column":46}},"type":"default-arg","locations":[{"start":{"line":397,"column":44},"end":{"line":397,"column":46}}],"line":397},"45":{"loc":{"start":{"line":409,"column":8},"end":{"line":420,"column":9}},"type":"switch","locations":[{"start":{"line":410,"column":12},"end":{"line":411,"column":87}},{"start":{"line":412,"column":12},"end":{"line":413,"column":88}},{"start":{"line":414,"column":12},"end":{"line":415,"column":79}},{"start":{"line":416,"column":12},"end":{"line":417,"column":91}},{"start":{"line":418,"column":12},"end":{"line":419,"column":91}}],"line":409},"46":{"loc":{"start":{"line":426,"column":8},"end":{"line":437,"column":9}},"type":"switch","locations":[{"start":{"line":427,"column":12},"end":{"line":428,"column":89}},{"start":{"line":429,"column":12},"end":{"line":430,"column":86}},{"start":{"line":431,"column":12},"end":{"line":432,"column":90}},{"start":{"line":433,"column":12},"end":{"line":434,"column":82}},{"start":{"line":435,"column":12},"end":{"line":436,"column":93}}],"line":426},"47":{"loc":{"start":{"line":443,"column":8},"end":{"line":454,"column":9}},"type":"switch","locations":[{"start":{"line":444,"column":12},"end":{"line":445,"column":27}},{"start":{"line":446,"column":12},"end":{"line":447,"column":28}},{"start":{"line":448,"column":12},"end":{"line":449,"column":27}},{"start":{"line":450,"column":12},"end":{"line":451,"column":28}},{"start":{"line":452,"column":12},"end":{"line":453,"column":28}}],"line":443},"48":{"loc":{"start":{"line":460,"column":8},"end":{"line":471,"column":9}},"type":"switch","locations":[{"start":{"line":461,"column":12},"end":{"line":462,"column":28}},{"start":{"line":463,"column":12},"end":{"line":464,"column":27}},{"start":{"line":465,"column":12},"end":{"line":466,"column":28}},{"start":{"line":467,"column":12},"end":{"line":468,"column":28}},{"start":{"line":469,"column":12},"end":{"line":470,"column":27}}],"line":460},"49":{"loc":{"start":{"line":478,"column":8},"end":{"line":494,"column":9}},"type":"switch","locations":[{"start":{"line":479,"column":12},"end":{"line":487,"column":22}},{"start":{"line":488,"column":12},"end":{"line":490,"column":22}},{"start":{"line":491,"column":12},"end":{"line":493,"column":22}}],"line":478},"50":{"loc":{"start":{"line":486,"column":39},"end":{"line":486,"column":71}},"type":"binary-expr","locations":[{"start":{"line":486,"column":39},"end":{"line":486,"column":64}},{"start":{"line":486,"column":68},"end":{"line":486,"column":71}}],"line":486},"51":{"loc":{"start":{"line":486,"column":76},"end":{"line":486,"column":108}},"type":"binary-expr","locations":[{"start":{"line":486,"column":76},"end":{"line":486,"column":101}},{"start":{"line":486,"column":105},"end":{"line":486,"column":108}}],"line":486},"52":{"loc":{"start":{"line":501,"column":59},"end":{"line":501,"column":94}},"type":"cond-expr","locations":[{"start":{"line":501,"column":87},"end":{"line":501,"column":88}},{"start":{"line":501,"column":91},"end":{"line":501,"column":94}}],"line":501},"53":{"loc":{"start":{"line":508,"column":59},"end":{"line":508,"column":94}},"type":"cond-expr","locations":[{"start":{"line":508,"column":87},"end":{"line":508,"column":88}},{"start":{"line":508,"column":91},"end":{"line":508,"column":94}}],"line":508}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0],"45":[0,0,0,0,0],"46":[0,0,0,0,0],"47":[0,0,0,0,0],"48":[0,0,0,0,0],"49":[0,0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0]},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/formatters/MarkdownFormatter.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/formatters/MarkdownFormatter.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Markdown Report Formatter\n *\n * Generates GitHub-compatible Markdown reports with proper formatting,\n * tables, code blocks, and documentation-friendly structure.\n */\n\nimport { MonitoringReport, MonitoringStatus, SeverityLevel } from '../../core/types';\nimport { ReportFormatter, ReportOptions, ReportValidationResult } from '../types';\n\n/**\n * Markdown formatter for documentation-friendly reports\n */\nexport class MarkdownFormatter implements ReportFormatter {\n  public readonly id = 'markdown';\n  public readonly name = 'Markdown Report';\n  public readonly extension = '.md';\n  public readonly mimeType = 'text/markdown';\n\n  /**\n   * Format the monitoring report as Markdown\n   */\n  public async format(report: MonitoringReport, options?: ReportOptions): Promise<string> {\n    const sections: string[] = [];\n\n    // Title and metadata\n    sections.push(this.generateTitle(report, options));\n    sections.push(this.generateTOC(report, options));\n    sections.push(this.generateSummary(report, options));\n    sections.push(this.generateOverview(report, options));\n\n    // Module results\n    sections.push(this.generateModuleResults(report, options));\n\n    // Detailed issues\n    if (options?.includeDetails) {\n      sections.push(this.generateDetailedIssues(report, options));\n    }\n\n    // Recommendations\n    if (options?.includeRecommendations && report.recommendations?.length) {\n      sections.push(this.generateRecommendations(report, options));\n    }\n\n    // Appendix\n    if (options?.includeMetadata) {\n      sections.push(this.generateAppendix(report, options));\n    }\n\n    return sections.filter(section => section.trim()).join('\\n\\n');\n  }\n\n  /**\n   * Validate options for Markdown formatting\n   */\n  public validateOptions(options?: ReportOptions): ReportValidationResult {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    // Warn about options that don't apply to Markdown\n    const irrelevantOptions = ['colorOutput', 'interactive', 'theme', 'includeCharts', 'customCss'];\n    irrelevantOptions.forEach(option => {\n      if (options && (options as any)[option]) {\n        warnings.push(`${option} option is ignored for Markdown format`);\n      }\n    });\n\n    return {\n      isValid: true,\n      errors,\n      warnings,\n    };\n  }\n\n  // Private helper methods\n\n  /**\n   * Generate title and header\n   */\n  private generateTitle(report: MonitoringReport, options?: ReportOptions): string {\n    const title = options?.title || `Diamond Monitoring Report`;\n    const statusBadge = this.getStatusBadge(report.summary.status);\n    const timestamp = options?.includeMetadata ? ` - ${report.timestamp.toLocaleDateString()}` : '';\n\n    return `# ${title}${timestamp}\n\n${statusBadge}\n\n**Diamond:** ${report.diamond.name}  \n**Address:** \\`${report.diamond.address}\\`  \n**Network:** ${report.network.name} (Chain ID: ${report.network.chainId})  \n${options?.includeMetadata ? `**Generated:** ${new Date().toISOString()}  \\n**Duration:** ${(report.duration / 1000).toFixed(2)}s` : ''}\n\n---`;\n  }\n\n  /**\n   * Generate table of contents\n   */\n  private generateTOC(report: MonitoringReport, options?: ReportOptions): string {\n    const sections: string[] = [\n      '- [Summary](#summary)',\n      '- [Overview](#overview)',\n      '- [Module Results](#module-results)',\n    ];\n\n    if (options?.includeDetails) {\n      sections.push('- [Detailed Issues](#detailed-issues)');\n    }\n\n    if (options?.includeRecommendations && report.recommendations?.length) {\n      sections.push('- [Recommendations](#recommendations)');\n    }\n\n    if (options?.includeMetadata) {\n      sections.push('- [Technical Details](#technical-details)');\n    }\n\n    return `## Table of Contents\n\n${sections.join('\\n')}\n\n---`;\n  }\n\n  /**\n   * Generate summary section\n   */\n  private generateSummary(report: MonitoringReport, options?: ReportOptions): string {\n    const passRate =\n      report.summary.totalChecks > 0\n        ? ((report.summary.passed / report.summary.totalChecks) * 100).toFixed(1)\n        : '0';\n\n    return `## Summary\n\n| Metric | Value |\n|--------|-------|\n| **Overall Status** | ${this.getStatusBadge(report.summary.status)} |\n| **Total Checks** | ${report.summary.totalChecks} |\n| **Passed** | ${report.summary.passed} ✅ |\n| **Failed** | ${report.summary.failed} ❌ |\n| **Warnings** | ${report.summary.warnings} ⚠️ |\n| **Skipped** | ${report.summary.skipped} ⏭️ |\n| **Pass Rate** | ${passRate}% |\n\n${this.generateProgressBar(parseFloat(passRate))}`;\n  }\n\n  /**\n   * Generate overview section\n   */\n  private generateOverview(report: MonitoringReport, options?: ReportOptions): string {\n    const allIssues = report.modules.flatMap(m => m.result.issues);\n    const criticalIssues = allIssues.filter(i => i.severity === SeverityLevel.CRITICAL).length;\n    const errorIssues = allIssues.filter(i => i.severity === SeverityLevel.ERROR).length;\n    const warningIssues = allIssues.filter(i => i.severity === SeverityLevel.WARNING).length;\n    const infoIssues = allIssues.filter(i => i.severity === SeverityLevel.INFO).length;\n\n    let overview = `## Overview\n\nThis report provides a comprehensive analysis of the ${report.diamond.name} diamond contract deployed on ${report.network.name}.\n\n### Key Findings\n\n`;\n\n    if (criticalIssues > 0) {\n      overview += `- 🚨 **${criticalIssues} Critical Issue${criticalIssues === 1 ? '' : 's'}** requiring immediate attention\\n`;\n    }\n\n    if (errorIssues > 0) {\n      overview += `- ❌ **${errorIssues} Error${errorIssues === 1 ? '' : 's'}** that should be addressed\\n`;\n    }\n\n    if (warningIssues > 0) {\n      overview += `- ⚠️ **${warningIssues} Warning${warningIssues === 1 ? '' : 's'}** for consideration\\n`;\n    }\n\n    if (infoIssues > 0) {\n      overview += `- ℹ️ **${infoIssues} Informational item${infoIssues === 1 ? '' : 's'}**\\n`;\n    }\n\n    if (criticalIssues === 0 && errorIssues === 0) {\n      overview += `- ✅ **No critical or error issues detected**\\n`;\n    }\n\n    // Module performance summary\n    const moduleTable = this.generateModulePerformanceTable(report);\n    overview += `\\n### Module Performance\\n\\n${moduleTable}`;\n\n    return overview;\n  }\n\n  /**\n   * Generate module results section\n   */\n  private generateModuleResults(report: MonitoringReport, options?: ReportOptions): string {\n    const maxIssues = options?.maxIssuesPerModule || 10;\n    let content = `## Module Results\n\nEach module performs specific monitoring tasks. Below are the detailed results:\n\n`;\n\n    for (const moduleResult of report.modules) {\n      const statusIcon = this.getStatusIcon(moduleResult.status);\n      const duration = (moduleResult.duration / 1000).toFixed(2);\n      const issueCount = moduleResult.result.issues.length;\n\n      content += `### ${statusIcon} ${moduleResult.moduleName}\n\n**Status:** ${this.getStatusBadge(moduleResult.status)}  \n**Duration:** ${duration}s  \n**Issues Found:** ${issueCount}\n\n`;\n\n      if (issueCount > 0) {\n        const issues = moduleResult.result.issues.slice(0, maxIssues);\n\n        content += `#### Issues\\n\\n`;\n\n        for (let i = 0; i < issues.length; i++) {\n          const issue = issues[i];\n          const severityIcon = this.getSeverityIcon(issue.severity);\n\n          content += `${i + 1}. **${severityIcon} ${issue.title}** (\\`${issue.severity}\\`)\n   \n   ${issue.description}\n   \n`;\n\n          if (issue.recommendation) {\n            content += `   > 💡 **Recommendation:** ${issue.recommendation}\n   \n`;\n          }\n\n          if (options?.includeMetadata && issue.metadata) {\n            content += `   <details>\n   <summary>Technical Details</summary>\n   \n   \\`\\`\\`json\n   ${JSON.stringify(issue.metadata, null, 2)}\n   \\`\\`\\`\n   </details>\n   \n`;\n          }\n        }\n\n        if (moduleResult.result.issues.length > maxIssues) {\n          const remaining = moduleResult.result.issues.length - maxIssues;\n          content += `<details>\n<summary>Show ${remaining} more issue${remaining === 1 ? '' : 's'}...</summary>\n\n${moduleResult.result.issues\n  .slice(maxIssues)\n  .map((issue, index) => {\n    const severityIcon = this.getSeverityIcon(issue.severity);\n    return `${maxIssues + index + 1}. **${severityIcon} ${issue.title}** (\\`${issue.severity}\\`)\n   \n   ${issue.description}\n   \n   ${issue.recommendation ? `> 💡 **Recommendation:** ${issue.recommendation}\\n\\n` : ''}`;\n  })\n  .join('')}\n</details>\n\n`;\n        }\n      } else {\n        content += `✅ No issues detected in this module.\n\n`;\n      }\n\n      // Module metadata\n      if (options?.includeMetadata && moduleResult.result.metadata) {\n        content += `<details>\n<summary>Module Metadata</summary>\n\n\\`\\`\\`json\n${JSON.stringify(moduleResult.result.metadata, null, 2)}\n\\`\\`\\`\n</details>\n\n`;\n      }\n\n      content += '---\\n\\n';\n    }\n\n    return content;\n  }\n\n  /**\n   * Generate detailed issues section\n   */\n  private generateDetailedIssues(report: MonitoringReport, options?: ReportOptions): string {\n    const allIssues = report.modules.flatMap(m =>\n      m.result.issues.map(issue => ({ ...issue, module: m.moduleName }))\n    );\n\n    if (allIssues.length === 0) {\n      return `## Detailed Issues\n\n✅ **No issues were detected during the monitoring process.**`;\n    }\n\n    // Group by severity\n    const severityGroups = {\n      [SeverityLevel.CRITICAL]: allIssues.filter(i => i.severity === SeverityLevel.CRITICAL),\n      [SeverityLevel.ERROR]: allIssues.filter(i => i.severity === SeverityLevel.ERROR),\n      [SeverityLevel.WARNING]: allIssues.filter(i => i.severity === SeverityLevel.WARNING),\n      [SeverityLevel.INFO]: allIssues.filter(i => i.severity === SeverityLevel.INFO),\n    };\n\n    let content = `## Detailed Issues\n\nThis section provides comprehensive details about all identified issues, organized by severity level.\n\n`;\n\n    for (const [severity, issues] of Object.entries(severityGroups)) {\n      if (issues.length === 0) continue;\n\n      const severityIcon = this.getSeverityIcon(severity as SeverityLevel);\n      const severityName = severity.charAt(0).toUpperCase() + severity.slice(1).toLowerCase();\n\n      content += `### ${severityIcon} ${severityName} Issues (${issues.length})\n\n`;\n\n      // Sort issues by module\n      const sortedIssues = this.sortIssues(issues, options?.sortBy);\n\n      for (let i = 0; i < sortedIssues.length; i++) {\n        const issue = sortedIssues[i];\n\n        content += `#### ${i + 1}. ${issue.title}\n\n**Module:** ${issue.module}  \n**Category:** \\`${issue.category}\\`  \n**Severity:** ${this.getSeverityBadge(issue.severity)}\n\n${issue.description}\n\n`;\n\n        if (issue.recommendation) {\n          content += `> **💡 Recommendation**  \n> ${issue.recommendation}\n\n`;\n        }\n\n        if (options?.includeMetadata && issue.metadata) {\n          content += `<details>\n<summary>Technical Metadata</summary>\n\n\\`\\`\\`json\n${JSON.stringify(issue.metadata, null, 2)}\n\\`\\`\\`\n</details>\n\n`;\n        }\n\n        content += '---\\n\\n';\n      }\n    }\n\n    return content;\n  }\n\n  /**\n   * Generate recommendations section\n   */\n  private generateRecommendations(report: MonitoringReport, options?: ReportOptions): string {\n    if (!report.recommendations?.length) return '';\n\n    let content = `## Recommendations\n\nBased on the monitoring analysis, the following recommendations are suggested:\n\n`;\n\n    report.recommendations.forEach((recommendation, index) => {\n      content += `${index + 1}. ${recommendation}\\n\\n`;\n    });\n\n    return content;\n  }\n\n  /**\n   * Generate appendix with technical details\n   */\n  private generateAppendix(report: MonitoringReport, options?: ReportOptions): string {\n    return `## Technical Details\n\n### Execution Environment\n\n| Property | Value |\n|----------|-------|\n| **Diamond Contract** | \\`${report.diamond.address}\\` |\n| **Network** | ${report.network.name} (${report.network.chainId}) |\n| **RPC URL** | \\`${report.network.rpcUrl || 'N/A'}\\` |\n| **Block Explorer** | ${report.network.blockExplorerUrl || 'N/A'} |\n| **Deployment Block** | ${report.diamond.deploymentBlock || 'N/A'} |\n| **Config Path** | \\`${report.diamond.configPath || 'N/A'}\\` |\n\n### Execution Statistics\n\n| Metric | Value |\n|--------|-------|\n| **Total Execution Time** | ${(report.duration / 1000).toFixed(2)}s |\n| **Modules Executed** | ${report.modules.length} |\n| **Average Module Time** | ${(report.modules.reduce((sum, m) => sum + m.duration, 0) / report.modules.length / 1000).toFixed(2)}s |\n| **Fastest Module** | ${this.getFastestModule(report)} |\n| **Slowest Module** | ${this.getSlowestModule(report)} |\n\n### Module Configuration\n\n<details>\n<summary>Show configuration details</summary>\n\n\\`\\`\\`json\n${JSON.stringify(report.config, null, 2)}\n\\`\\`\\`\n</details>\n\n---\n\n*Report generated by Diamond Monitoring System v1.0.0 on ${new Date().toISOString()}*`;\n  }\n\n  // Utility methods\n\n  /**\n   * Generate module performance table\n   */\n  private generateModulePerformanceTable(report: MonitoringReport): string {\n    const rows = report.modules.map(m => {\n      const statusIcon = this.getStatusIcon(m.status);\n      const duration = (m.duration / 1000).toFixed(2);\n      const issues = m.result.issues.length;\n\n      return `| ${statusIcon} ${m.moduleName} | ${m.status} | ${duration}s | ${issues} |`;\n    });\n\n    return `| Module | Status | Duration | Issues |\n|--------|--------|----------|--------|\n${rows.join('\\n')}`;\n  }\n\n  /**\n   * Generate ASCII progress bar\n   */\n  private generateProgressBar(percentage: number, width: number = 20): string {\n    const filled = Math.round((percentage / 100) * width);\n    const empty = width - filled;\n    const bar = '█'.repeat(filled) + '░'.repeat(empty);\n\n    return `\\`\\`\\`\nProgress: [${bar}] ${percentage.toFixed(1)}%\n\\`\\`\\``;\n  }\n\n  /**\n   * Get status badge\n   */\n  private getStatusBadge(status: MonitoringStatus): string {\n    switch (status) {\n      case MonitoringStatus.PASS:\n        return '![PASS](https://img.shields.io/badge/Status-PASS-brightgreen)';\n      case MonitoringStatus.WARNING:\n        return '![WARNING](https://img.shields.io/badge/Status-WARNING-yellow)';\n      case MonitoringStatus.FAIL:\n        return '![FAIL](https://img.shields.io/badge/Status-FAIL-red)';\n      case MonitoringStatus.SKIPPED:\n        return '![SKIPPED](https://img.shields.io/badge/Status-SKIPPED-lightgrey)';\n      default:\n        return '![UNKNOWN](https://img.shields.io/badge/Status-UNKNOWN-lightgrey)';\n    }\n  }\n\n  /**\n   * Get severity badge\n   */\n  private getSeverityBadge(severity: SeverityLevel): string {\n    switch (severity) {\n      case SeverityLevel.CRITICAL:\n        return '![CRITICAL](https://img.shields.io/badge/Severity-CRITICAL-red)';\n      case SeverityLevel.ERROR:\n        return '![ERROR](https://img.shields.io/badge/Severity-ERROR-orange)';\n      case SeverityLevel.WARNING:\n        return '![WARNING](https://img.shields.io/badge/Severity-WARNING-yellow)';\n      case SeverityLevel.INFO:\n        return '![INFO](https://img.shields.io/badge/Severity-INFO-blue)';\n      default:\n        return '![UNKNOWN](https://img.shields.io/badge/Severity-UNKNOWN-lightgrey)';\n    }\n  }\n\n  /**\n   * Get status icon\n   */\n  private getStatusIcon(status: MonitoringStatus): string {\n    switch (status) {\n      case MonitoringStatus.PASS:\n        return '✅';\n      case MonitoringStatus.WARNING:\n        return '⚠️';\n      case MonitoringStatus.FAIL:\n        return '❌';\n      case MonitoringStatus.SKIPPED:\n        return '⏭️';\n      default:\n        return 'ℹ️';\n    }\n  }\n\n  /**\n   * Get severity icon\n   */\n  private getSeverityIcon(severity: SeverityLevel): string {\n    switch (severity) {\n      case SeverityLevel.CRITICAL:\n        return '🚨';\n      case SeverityLevel.ERROR:\n        return '❌';\n      case SeverityLevel.WARNING:\n        return '⚠️';\n      case SeverityLevel.INFO:\n        return 'ℹ️';\n      default:\n        return '•';\n    }\n  }\n\n  /**\n   * Sort issues by specified criteria\n   */\n  private sortIssues(issues: any[], sortBy?: string): any[] {\n    const sorted = [...issues];\n\n    switch (sortBy) {\n      case 'severity':\n        const severityOrder: Record<string, number> = {\n          [SeverityLevel.CRITICAL]: 0,\n          [SeverityLevel.ERROR]: 1,\n          [SeverityLevel.WARNING]: 2,\n          [SeverityLevel.INFO]: 3,\n        };\n        sorted.sort(\n          (a, b) => (severityOrder[a.severity] || 999) - (severityOrder[b.severity] || 999)\n        );\n        break;\n      case 'category':\n        sorted.sort((a, b) => a.category.localeCompare(b.category));\n        break;\n      case 'module':\n        sorted.sort((a, b) => a.module.localeCompare(b.module));\n        break;\n    }\n\n    return sorted;\n  }\n\n  /**\n   * Get fastest module\n   */\n  private getFastestModule(report: MonitoringReport): string {\n    const fastest = report.modules.reduce((min, m) => (m.duration < min.duration ? m : min));\n    return `${fastest.moduleName} (${(fastest.duration / 1000).toFixed(2)}s)`;\n  }\n\n  /**\n   * Get slowest module\n   */\n  private getSlowestModule(report: MonitoringReport): string {\n    const slowest = report.modules.reduce((max, m) => (m.duration > max.duration ? m : max));\n    return `${slowest.moduleName} (${(slowest.duration / 1000).toFixed(2)}s)`;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"09ecb8023721c2ec4817dd0456ace9d37abe9ee9","contentHash":"74a74619e80126bd668ede9343d35274248494076ba9257df622b6a797741ecf"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/formatters/CSVFormatter.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/formatters/CSVFormatter.ts","statementMap":{"0":{"start":{"line":8,"column":0},"end":{"line":8,"column":62}},"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":30}},"2":{"start":{"line":10,"column":16},"end":{"line":10,"column":43}},"3":{"start":{"line":16,"column":8},"end":{"line":16,"column":24}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":33}},"5":{"start":{"line":18,"column":8},"end":{"line":18,"column":32}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":35}},"7":{"start":{"line":25,"column":8},"end":{"line":30,"column":9}},"8":{"start":{"line":26,"column":12},"end":{"line":26,"column":60}},"9":{"start":{"line":29,"column":12},"end":{"line":29,"column":61}},"10":{"start":{"line":36,"column":23},"end":{"line":36,"column":25}},"11":{"start":{"line":37,"column":25},"end":{"line":37,"column":27}},"12":{"start":{"line":39,"column":34},"end":{"line":39,"column":103}},"13":{"start":{"line":40,"column":8},"end":{"line":44,"column":11}},"14":{"start":{"line":41,"column":12},"end":{"line":43,"column":13}},"15":{"start":{"line":42,"column":16},"end":{"line":42,"column":76}},"16":{"start":{"line":45,"column":8},"end":{"line":49,"column":10}},"17":{"start":{"line":56,"column":21},"end":{"line":56,"column":23}},"18":{"start":{"line":58,"column":24},"end":{"line":85,"column":9}},"19":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"20":{"start":{"line":87,"column":12},"end":{"line":87,"column":44}},"21":{"start":{"line":89,"column":8},"end":{"line":89,"column":27}},"22":{"start":{"line":91,"column":8},"end":{"line":140,"column":9}},"23":{"start":{"line":92,"column":28},"end":{"line":112,"column":13}},"24":{"start":{"line":113,"column":12},"end":{"line":139,"column":13}},"25":{"start":{"line":115,"column":28},"end":{"line":115,"column":68}},"26":{"start":{"line":116,"column":16},"end":{"line":118,"column":17}},"27":{"start":{"line":117,"column":20},"end":{"line":117,"column":83}},"28":{"start":{"line":119,"column":16},"end":{"line":119,"column":31}},"29":{"start":{"line":123,"column":16},"end":{"line":138,"column":17}},"30":{"start":{"line":124,"column":32},"end":{"line":133,"column":21}},"31":{"start":{"line":134,"column":20},"end":{"line":136,"column":21}},"32":{"start":{"line":135,"column":24},"end":{"line":135,"column":87}},"33":{"start":{"line":137,"column":20},"end":{"line":137,"column":35}},"34":{"start":{"line":141,"column":8},"end":{"line":141,"column":40}},"35":{"start":{"line":147,"column":25},"end":{"line":147,"column":27}},"36":{"start":{"line":149,"column":8},"end":{"line":149,"column":35}},"37":{"start":{"line":150,"column":8},"end":{"line":150,"column":55}},"38":{"start":{"line":152,"column":8},"end":{"line":152,"column":48}},"39":{"start":{"line":153,"column":8},"end":{"line":153,"column":65}},"40":{"start":{"line":155,"column":26},"end":{"line":155,"column":121}},"41":{"start":{"line":155,"column":54},"end":{"line":155,"column":120}},"42":{"start":{"line":155,"column":84},"end":{"line":155,"column":118}},"43":{"start":{"line":156,"column":8},"end":{"line":159,"column":9}},"44":{"start":{"line":157,"column":12},"end":{"line":157,"column":40}},"45":{"start":{"line":158,"column":12},"end":{"line":158,"column":70}},"46":{"start":{"line":161,"column":8},"end":{"line":164,"column":9}},"47":{"start":{"line":162,"column":12},"end":{"line":162,"column":44}},"48":{"start":{"line":163,"column":12},"end":{"line":163,"column":62}},"49":{"start":{"line":165,"column":8},"end":{"line":165,"column":35}},"50":{"start":{"line":171,"column":24},"end":{"line":171,"column":43}},"51":{"start":{"line":172,"column":21},"end":{"line":186,"column":9}},"52":{"start":{"line":187,"column":8},"end":{"line":187,"column":40}},"53":{"start":{"line":193,"column":24},"end":{"line":202,"column":9}},"54":{"start":{"line":203,"column":21},"end":{"line":203,"column":30}},"55":{"start":{"line":204,"column":8},"end":{"line":215,"column":9}},"56":{"start":{"line":205,"column":12},"end":{"line":214,"column":15}},"57":{"start":{"line":216,"column":8},"end":{"line":216,"column":40}},"58":{"start":{"line":222,"column":24},"end":{"line":231,"column":9}},"59":{"start":{"line":232,"column":8},"end":{"line":234,"column":9}},"60":{"start":{"line":233,"column":12},"end":{"line":233,"column":37}},"61":{"start":{"line":235,"column":21},"end":{"line":235,"column":30}},"62":{"start":{"line":237,"column":29},"end":{"line":237,"column":69}},"63":{"start":{"line":239,"column":29},"end":{"line":239,"column":41}},"64":{"start":{"line":240,"column":8},"end":{"line":242,"column":9}},"65":{"start":{"line":241,"column":12},"end":{"line":241,"column":109}},"66":{"start":{"line":241,"column":60},"end":{"line":241,"column":107}},"67":{"start":{"line":243,"column":8},"end":{"line":258,"column":9}},"68":{"start":{"line":244,"column":24},"end":{"line":253,"column":13}},"69":{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},"70":{"start":{"line":255,"column":16},"end":{"line":255,"column":65}},"71":{"start":{"line":257,"column":12},"end":{"line":257,"column":27}},"72":{"start":{"line":259,"column":8},"end":{"line":259,"column":40}},"73":{"start":{"line":265,"column":26},"end":{"line":265,"column":70}},"74":{"start":{"line":265,"column":54},"end":{"line":265,"column":69}},"75":{"start":{"line":267,"column":30},"end":{"line":280,"column":9}},"76":{"start":{"line":272,"column":38},"end":{"line":272,"column":83}},"77":{"start":{"line":274,"column":51},"end":{"line":274,"column":93}},"78":{"start":{"line":277,"column":38},"end":{"line":277,"column":82}},"79":{"start":{"line":279,"column":50},"end":{"line":279,"column":91}},"80":{"start":{"line":282,"column":28},"end":{"line":282,"column":37}},"81":{"start":{"line":283,"column":8},"end":{"line":285,"column":11}},"82":{"start":{"line":284,"column":12},"end":{"line":284,"column":88}},"83":{"start":{"line":286,"column":30},"end":{"line":290,"column":9}},"84":{"start":{"line":291,"column":8},"end":{"line":294,"column":9}},"85":{"start":{"line":292,"column":26},"end":{"line":292,"column":51}},"86":{"start":{"line":293,"column":12},"end":{"line":293,"column":61}},"87":{"start":{"line":296,"column":28},"end":{"line":300,"column":9}},"88":{"start":{"line":301,"column":8},"end":{"line":311,"column":9}},"89":{"start":{"line":302,"column":36},"end":{"line":304,"column":21}},"90":{"start":{"line":305,"column":12},"end":{"line":310,"column":15}},"91":{"start":{"line":312,"column":8},"end":{"line":312,"column":88}},"92":{"start":{"line":318,"column":23},"end":{"line":318,"column":34}},"93":{"start":{"line":319,"column":8},"end":{"line":339,"column":9}},"94":{"start":{"line":321,"column":38},"end":{"line":326,"column":17}},"95":{"start":{"line":327,"column":16},"end":{"line":327,"column":111}},"96":{"start":{"line":327,"column":38},"end":{"line":327,"column":109}},"97":{"start":{"line":328,"column":16},"end":{"line":328,"column":22}},"98":{"start":{"line":330,"column":16},"end":{"line":330,"column":76}},"99":{"start":{"line":330,"column":38},"end":{"line":330,"column":74}},"100":{"start":{"line":331,"column":16},"end":{"line":331,"column":22}},"101":{"start":{"line":333,"column":16},"end":{"line":333,"column":72}},"102":{"start":{"line":333,"column":38},"end":{"line":333,"column":70}},"103":{"start":{"line":334,"column":16},"end":{"line":334,"column":22}},"104":{"start":{"line":337,"column":16},"end":{"line":337,"column":64}},"105":{"start":{"line":337,"column":38},"end":{"line":337,"column":62}},"106":{"start":{"line":338,"column":16},"end":{"line":338,"column":22}},"107":{"start":{"line":340,"column":8},"end":{"line":340,"column":22}},"108":{"start":{"line":346,"column":8},"end":{"line":346,"column":95}},"109":{"start":{"line":346,"column":31},"end":{"line":346,"column":82}},"110":{"start":{"line":346,"column":47},"end":{"line":346,"column":71}},"111":{"start":{"line":353,"column":8},"end":{"line":354,"column":22}},"112":{"start":{"line":354,"column":12},"end":{"line":354,"column":22}},"113":{"start":{"line":355,"column":20},"end":{"line":355,"column":32}},"114":{"start":{"line":357,"column":8},"end":{"line":359,"column":9}},"115":{"start":{"line":358,"column":12},"end":{"line":358,"column":50}},"116":{"start":{"line":360,"column":8},"end":{"line":360,"column":19}},"117":{"start":{"line":366,"column":8},"end":{"line":367,"column":22}},"118":{"start":{"line":367,"column":12},"end":{"line":367,"column":22}},"119":{"start":{"line":369,"column":8},"end":{"line":369,"column":89}},"120":{"start":{"line":375,"column":8},"end":{"line":376,"column":22}},"121":{"start":{"line":376,"column":12},"end":{"line":376,"column":22}},"122":{"start":{"line":377,"column":8},"end":{"line":382,"column":9}},"123":{"start":{"line":378,"column":12},"end":{"line":378,"column":64}},"124":{"start":{"line":381,"column":12},"end":{"line":381,"column":56}},"125":{"start":{"line":385,"column":0},"end":{"line":385,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":18},"end":{"line":20,"column":5}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":34},"end":{"line":31,"column":5}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":29},"end":{"line":50,"column":5}},"line":35},"3":{"name":"(anonymous_3)","decl":{"start":{"line":40,"column":34},"end":{"line":40,"column":35}},"loc":{"start":{"line":40,"column":44},"end":{"line":44,"column":9}},"line":40},"4":{"name":"(anonymous_4)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":41},"end":{"line":142,"column":5}},"line":55},"5":{"name":"(anonymous_5)","decl":{"start":{"line":146,"column":4},"end":{"line":146,"column":5}},"loc":{"start":{"line":146,"column":40},"end":{"line":166,"column":5}},"line":146},"6":{"name":"(anonymous_6)","decl":{"start":{"line":155,"column":49},"end":{"line":155,"column":50}},"loc":{"start":{"line":155,"column":54},"end":{"line":155,"column":120}},"line":155},"7":{"name":"(anonymous_7)","decl":{"start":{"line":155,"column":74},"end":{"line":155,"column":75}},"loc":{"start":{"line":155,"column":84},"end":{"line":155,"column":118}},"line":155},"8":{"name":"(anonymous_8)","decl":{"start":{"line":170,"column":4},"end":{"line":170,"column":5}},"loc":{"start":{"line":170,"column":31},"end":{"line":188,"column":5}},"line":170},"9":{"name":"(anonymous_9)","decl":{"start":{"line":192,"column":4},"end":{"line":192,"column":5}},"loc":{"start":{"line":192,"column":41},"end":{"line":217,"column":5}},"line":192},"10":{"name":"(anonymous_10)","decl":{"start":{"line":221,"column":4},"end":{"line":221,"column":5}},"loc":{"start":{"line":221,"column":39},"end":{"line":260,"column":5}},"line":221},"11":{"name":"(anonymous_11)","decl":{"start":{"line":241,"column":51},"end":{"line":241,"column":52}},"loc":{"start":{"line":241,"column":60},"end":{"line":241,"column":107}},"line":241},"12":{"name":"(anonymous_12)","decl":{"start":{"line":264,"column":4},"end":{"line":264,"column":5}},"loc":{"start":{"line":264,"column":34},"end":{"line":313,"column":5}},"line":264},"13":{"name":"(anonymous_13)","decl":{"start":{"line":265,"column":49},"end":{"line":265,"column":50}},"loc":{"start":{"line":265,"column":54},"end":{"line":265,"column":69}},"line":265},"14":{"name":"(anonymous_14)","decl":{"start":{"line":272,"column":33},"end":{"line":272,"column":34}},"loc":{"start":{"line":272,"column":38},"end":{"line":272,"column":83}},"line":272},"15":{"name":"(anonymous_15)","decl":{"start":{"line":274,"column":46},"end":{"line":274,"column":47}},"loc":{"start":{"line":274,"column":51},"end":{"line":274,"column":93}},"line":274},"16":{"name":"(anonymous_16)","decl":{"start":{"line":277,"column":33},"end":{"line":277,"column":34}},"loc":{"start":{"line":277,"column":38},"end":{"line":277,"column":82}},"line":277},"17":{"name":"(anonymous_17)","decl":{"start":{"line":279,"column":45},"end":{"line":279,"column":46}},"loc":{"start":{"line":279,"column":50},"end":{"line":279,"column":91}},"line":279},"18":{"name":"(anonymous_18)","decl":{"start":{"line":283,"column":26},"end":{"line":283,"column":27}},"loc":{"start":{"line":283,"column":35},"end":{"line":285,"column":9}},"line":283},"19":{"name":"(anonymous_19)","decl":{"start":{"line":317,"column":4},"end":{"line":317,"column":5}},"loc":{"start":{"line":317,"column":31},"end":{"line":341,"column":5}},"line":317},"20":{"name":"(anonymous_20)","decl":{"start":{"line":327,"column":28},"end":{"line":327,"column":29}},"loc":{"start":{"line":327,"column":38},"end":{"line":327,"column":109}},"line":327},"21":{"name":"(anonymous_21)","decl":{"start":{"line":330,"column":28},"end":{"line":330,"column":29}},"loc":{"start":{"line":330,"column":38},"end":{"line":330,"column":74}},"line":330},"22":{"name":"(anonymous_22)","decl":{"start":{"line":333,"column":28},"end":{"line":333,"column":29}},"loc":{"start":{"line":333,"column":38},"end":{"line":333,"column":70}},"line":333},"23":{"name":"(anonymous_23)","decl":{"start":{"line":337,"column":28},"end":{"line":337,"column":29}},"loc":{"start":{"line":337,"column":38},"end":{"line":337,"column":62}},"line":337},"24":{"name":"(anonymous_24)","decl":{"start":{"line":345,"column":4},"end":{"line":345,"column":5}},"loc":{"start":{"line":345,"column":24},"end":{"line":347,"column":5}},"line":345},"25":{"name":"(anonymous_25)","decl":{"start":{"line":346,"column":24},"end":{"line":346,"column":25}},"loc":{"start":{"line":346,"column":31},"end":{"line":346,"column":82}},"line":346},"26":{"name":"(anonymous_26)","decl":{"start":{"line":346,"column":39},"end":{"line":346,"column":40}},"loc":{"start":{"line":346,"column":47},"end":{"line":346,"column":71}},"line":346},"27":{"name":"(anonymous_27)","decl":{"start":{"line":351,"column":4},"end":{"line":351,"column":5}},"loc":{"start":{"line":351,"column":24},"end":{"line":361,"column":5}},"line":351},"28":{"name":"(anonymous_28)","decl":{"start":{"line":365,"column":4},"end":{"line":365,"column":5}},"loc":{"start":{"line":365,"column":25},"end":{"line":370,"column":5}},"line":365},"29":{"name":"(anonymous_29)","decl":{"start":{"line":374,"column":4},"end":{"line":374,"column":5}},"loc":{"start":{"line":374,"column":32},"end":{"line":383,"column":5}},"line":374}},"branchMap":{"0":{"loc":{"start":{"line":25,"column":8},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":30,"column":9}},{"start":{"line":28,"column":13},"end":{"line":30,"column":9}}],"line":25},"1":{"loc":{"start":{"line":41,"column":12},"end":{"line":43,"column":13}},"type":"if","locations":[{"start":{"line":41,"column":12},"end":{"line":43,"column":13}},{"start":{},"end":{}}],"line":41},"2":{"loc":{"start":{"line":41,"column":16},"end":{"line":41,"column":42}},"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":23}},{"start":{"line":41,"column":27},"end":{"line":41,"column":42}}],"line":41},"3":{"loc":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},{"start":{},"end":{}}],"line":86},"4":{"loc":{"start":{"line":113,"column":12},"end":{"line":139,"column":13}},"type":"if","locations":[{"start":{"line":113,"column":12},"end":{"line":139,"column":13}},{"start":{"line":121,"column":17},"end":{"line":139,"column":13}}],"line":113},"5":{"loc":{"start":{"line":116,"column":16},"end":{"line":118,"column":17}},"type":"if","locations":[{"start":{"line":116,"column":16},"end":{"line":118,"column":17}},{"start":{},"end":{}}],"line":116},"6":{"loc":{"start":{"line":131,"column":44},"end":{"line":131,"column":70}},"type":"binary-expr","locations":[{"start":{"line":131,"column":44},"end":{"line":131,"column":64}},{"start":{"line":131,"column":68},"end":{"line":131,"column":70}}],"line":131},"7":{"loc":{"start":{"line":134,"column":20},"end":{"line":136,"column":21}},"type":"if","locations":[{"start":{"line":134,"column":20},"end":{"line":136,"column":21}},{"start":{},"end":{}}],"line":134},"8":{"loc":{"start":{"line":156,"column":8},"end":{"line":159,"column":9}},"type":"if","locations":[{"start":{"line":156,"column":8},"end":{"line":159,"column":9}},{"start":{},"end":{}}],"line":156},"9":{"loc":{"start":{"line":161,"column":8},"end":{"line":164,"column":9}},"type":"if","locations":[{"start":{"line":161,"column":8},"end":{"line":164,"column":9}},{"start":{},"end":{}}],"line":161},"10":{"loc":{"start":{"line":232,"column":8},"end":{"line":234,"column":9}},"type":"if","locations":[{"start":{"line":232,"column":8},"end":{"line":234,"column":9}},{"start":{},"end":{}}],"line":232},"11":{"loc":{"start":{"line":240,"column":8},"end":{"line":242,"column":9}},"type":"if","locations":[{"start":{"line":240,"column":8},"end":{"line":242,"column":9}},{"start":{},"end":{}}],"line":240},"12":{"loc":{"start":{"line":251,"column":36},"end":{"line":251,"column":62}},"type":"binary-expr","locations":[{"start":{"line":251,"column":36},"end":{"line":251,"column":56}},{"start":{"line":251,"column":60},"end":{"line":251,"column":62}}],"line":251},"13":{"loc":{"start":{"line":252,"column":16},"end":{"line":252,"column":49}},"type":"cond-expr","locations":[{"start":{"line":252,"column":33},"end":{"line":252,"column":39}},{"start":{"line":252,"column":42},"end":{"line":252,"column":49}}],"line":252},"14":{"loc":{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},"type":"if","locations":[{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},{"start":{},"end":{}}],"line":254},"15":{"loc":{"start":{"line":284,"column":45},"end":{"line":284,"column":81}},"type":"binary-expr","locations":[{"start":{"line":284,"column":45},"end":{"line":284,"column":76}},{"start":{"line":284,"column":80},"end":{"line":284,"column":81}}],"line":284},"16":{"loc":{"start":{"line":302,"column":36},"end":{"line":304,"column":21}},"type":"cond-expr","locations":[{"start":{"line":303,"column":18},"end":{"line":303,"column":97}},{"start":{"line":304,"column":18},"end":{"line":304,"column":21}}],"line":302},"17":{"loc":{"start":{"line":319,"column":8},"end":{"line":339,"column":9}},"type":"switch","locations":[{"start":{"line":320,"column":12},"end":{"line":328,"column":22}},{"start":{"line":329,"column":12},"end":{"line":331,"column":22}},{"start":{"line":332,"column":12},"end":{"line":334,"column":22}},{"start":{"line":335,"column":12},"end":{"line":338,"column":22}}],"line":319},"18":{"loc":{"start":{"line":327,"column":39},"end":{"line":327,"column":71}},"type":"binary-expr","locations":[{"start":{"line":327,"column":39},"end":{"line":327,"column":64}},{"start":{"line":327,"column":68},"end":{"line":327,"column":71}}],"line":327},"19":{"loc":{"start":{"line":327,"column":76},"end":{"line":327,"column":108}},"type":"binary-expr","locations":[{"start":{"line":327,"column":76},"end":{"line":327,"column":101}},{"start":{"line":327,"column":105},"end":{"line":327,"column":108}}],"line":327},"20":{"loc":{"start":{"line":353,"column":8},"end":{"line":354,"column":22}},"type":"if","locations":[{"start":{"line":353,"column":8},"end":{"line":354,"column":22}},{"start":{},"end":{}}],"line":353},"21":{"loc":{"start":{"line":357,"column":8},"end":{"line":359,"column":9}},"type":"if","locations":[{"start":{"line":357,"column":8},"end":{"line":359,"column":9}},{"start":{},"end":{}}],"line":357},"22":{"loc":{"start":{"line":357,"column":12},"end":{"line":357,"column":94}},"type":"binary-expr","locations":[{"start":{"line":357,"column":12},"end":{"line":357,"column":29}},{"start":{"line":357,"column":33},"end":{"line":357,"column":51}},{"start":{"line":357,"column":55},"end":{"line":357,"column":73}},{"start":{"line":357,"column":77},"end":{"line":357,"column":94}}],"line":357},"23":{"loc":{"start":{"line":366,"column":8},"end":{"line":367,"column":22}},"type":"if","locations":[{"start":{"line":366,"column":8},"end":{"line":367,"column":22}},{"start":{},"end":{}}],"line":366},"24":{"loc":{"start":{"line":375,"column":8},"end":{"line":376,"column":22}},"type":"if","locations":[{"start":{"line":375,"column":8},"end":{"line":376,"column":22}},{"start":{},"end":{}}],"line":375}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0,0],"23":[0,0],"24":[0,0]},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/formatters/CSVFormatter.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/reports/formatters/CSVFormatter.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * CSV Report Formatter\n *\n * Generates CSV reports suitable for data analysis, spreadsheet import,\n * and statistical processing with flattened data structure.\n */\n\nimport { MonitoringReport, MonitoringStatus, SeverityLevel } from '../../core/types';\nimport { ReportFormatter, ReportOptions, ReportValidationResult } from '../types';\n\n/**\n * CSV formatter for data analysis\n */\nexport class CSVFormatter implements ReportFormatter {\n  public readonly id = 'csv';\n  public readonly name = 'CSV Report';\n  public readonly extension = '.csv';\n  public readonly mimeType = 'text/csv';\n\n  /**\n   * Format the monitoring report as CSV\n   */\n  public async format(report: MonitoringReport, options?: ReportOptions): Promise<string> {\n    if (options?.compact) {\n      return this.generateCompactCSV(report, options);\n    } else {\n      return this.generateDetailedCSV(report, options);\n    }\n  }\n\n  /**\n   * Validate options for CSV formatting\n   */\n  public validateOptions(options?: ReportOptions): ReportValidationResult {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    // Warn about options that don't apply to CSV\n    const irrelevantOptions = ['colorOutput', 'interactive', 'theme', 'includeCharts', 'customCss'];\n    irrelevantOptions.forEach(option => {\n      if (options && (options as any)[option]) {\n        warnings.push(`${option} option is ignored for CSV format`);\n      }\n    });\n\n    return {\n      isValid: true,\n      errors,\n      warnings,\n    };\n  }\n\n  // Private helper methods\n\n  /**\n   * Generate detailed CSV with all information\n   */\n  private generateDetailedCSV(report: MonitoringReport, options?: ReportOptions): string {\n    const rows: string[][] = [];\n\n    // Headers\n    const headers = [\n      'Report_Timestamp',\n      'Diamond_Name',\n      'Diamond_Address',\n      'Network_Name',\n      'Network_ChainId',\n      'Overall_Status',\n      'Total_Checks',\n      'Passed',\n      'Failed',\n      'Warnings',\n      'Skipped',\n      'Total_Duration_Ms',\n      'Module_Id',\n      'Module_Name',\n      'Module_Status',\n      'Module_Start_Time',\n      'Module_End_Time',\n      'Module_Duration_Ms',\n      'Issue_Count',\n      'Issue_Id',\n      'Issue_Title',\n      'Issue_Description',\n      'Issue_Severity',\n      'Issue_Category',\n      'Issue_Recommendation',\n      'Issue_Metadata',\n    ];\n\n    if (options?.includeMetadata) {\n      headers.push('Module_Metadata');\n    }\n\n    rows.push(headers);\n\n    // Data rows\n    for (const moduleResult of report.modules) {\n      const baseRow = [\n        report.timestamp.toISOString(),\n        report.diamond.name,\n        report.diamond.address,\n        report.network.name,\n        report.network.chainId.toString(),\n        report.summary.status,\n        report.summary.totalChecks.toString(),\n        report.summary.passed.toString(),\n        report.summary.failed.toString(),\n        report.summary.warnings.toString(),\n        report.summary.skipped.toString(),\n        report.duration.toString(),\n        moduleResult.moduleId,\n        moduleResult.moduleName,\n        moduleResult.status,\n        moduleResult.startTime.toISOString(),\n        moduleResult.endTime.toISOString(),\n        moduleResult.duration.toString(),\n        moduleResult.result.issues.length.toString(),\n      ];\n\n      if (moduleResult.result.issues.length === 0) {\n        // No issues - add a row with empty issue fields\n        const row = [...baseRow, '', '', '', '', '', '', ''];\n        if (options?.includeMetadata) {\n          row.push(this.stringifyMetadata(moduleResult.result.metadata));\n        }\n        rows.push(row);\n      } else {\n        // Add one row per issue\n        for (const issue of moduleResult.result.issues) {\n          const row = [\n            ...baseRow,\n            issue.id,\n            issue.title,\n            this.escapeCsvField(issue.description),\n            issue.severity,\n            issue.category,\n            this.escapeCsvField(issue.recommendation || ''),\n            this.stringifyMetadata(issue.metadata),\n          ];\n\n          if (options?.includeMetadata) {\n            row.push(this.stringifyMetadata(moduleResult.result.metadata));\n          }\n\n          rows.push(row);\n        }\n      }\n    }\n\n    return this.formatCSVRows(rows);\n  }\n\n  /**\n   * Generate compact CSV focused on issues\n   */\n  private generateCompactCSV(report: MonitoringReport, options?: ReportOptions): string {\n    const sections: string[] = [];\n\n    // Summary section\n    sections.push('# SUMMARY');\n    sections.push(this.generateSummaryCSV(report));\n\n    // Module performance section\n    sections.push('\\n# MODULE_PERFORMANCE');\n    sections.push(this.generateModulePerformanceCSV(report));\n\n    // Issues section\n    const allIssues = report.modules.flatMap(m =>\n      m.result.issues.map(issue => ({ ...issue, module: m.moduleName }))\n    );\n\n    if (allIssues.length > 0) {\n      sections.push('\\n# ISSUES');\n      sections.push(this.generateIssuesCSV(allIssues, options));\n    }\n\n    // Statistics section\n    if (options?.includeMetadata) {\n      sections.push('\\n# STATISTICS');\n      sections.push(this.generateStatisticsCSV(report));\n    }\n\n    return sections.join('\\n');\n  }\n\n  /**\n   * Generate summary CSV section\n   */\n  private generateSummaryCSV(report: MonitoringReport): string {\n    const headers = ['Metric', 'Value'];\n    const rows = [\n      headers,\n      ['Diamond_Name', report.diamond.name],\n      ['Diamond_Address', report.diamond.address],\n      ['Network', report.network.name],\n      ['Chain_ID', report.network.chainId.toString()],\n      ['Status', report.summary.status],\n      ['Total_Checks', report.summary.totalChecks.toString()],\n      ['Passed', report.summary.passed.toString()],\n      ['Failed', report.summary.failed.toString()],\n      ['Warnings', report.summary.warnings.toString()],\n      ['Skipped', report.summary.skipped.toString()],\n      ['Duration_Seconds', (report.duration / 1000).toFixed(2)],\n      ['Timestamp', report.timestamp.toISOString()],\n    ];\n\n    return this.formatCSVRows(rows);\n  }\n\n  /**\n   * Generate module performance CSV section\n   */\n  private generateModulePerformanceCSV(report: MonitoringReport): string {\n    const headers = [\n      'Module_Name',\n      'Module_ID',\n      'Status',\n      'Duration_Ms',\n      'Duration_Seconds',\n      'Issue_Count',\n      'Start_Time',\n      'End_Time',\n    ];\n    const rows = [headers];\n\n    for (const moduleResult of report.modules) {\n      rows.push([\n        moduleResult.moduleName,\n        moduleResult.moduleId,\n        moduleResult.status,\n        moduleResult.duration.toString(),\n        (moduleResult.duration / 1000).toFixed(2),\n        moduleResult.result.issues.length.toString(),\n        moduleResult.startTime.toISOString(),\n        moduleResult.endTime.toISOString(),\n      ]);\n    }\n\n    return this.formatCSVRows(rows);\n  }\n\n  /**\n   * Generate issues CSV section\n   */\n  private generateIssuesCSV(issues: any[], options?: ReportOptions): string {\n    const headers = [\n      'Module',\n      'Issue_ID',\n      'Title',\n      'Severity',\n      'Category',\n      'Description',\n      'Recommendation',\n      'Has_Metadata',\n    ];\n\n    if (options?.includeMetadata) {\n      headers.push('Metadata');\n    }\n\n    const rows = [headers];\n\n    // Sort issues if specified\n    const sortedIssues = this.sortIssues(issues, options?.sortBy);\n\n    // Apply filters\n    let filteredIssues = sortedIssues;\n    if (options?.severityFilter?.length) {\n      filteredIssues = filteredIssues.filter(issue =>\n        options.severityFilter!.includes(issue.severity)\n      );\n    }\n\n    for (const issue of filteredIssues) {\n      const row = [\n        issue.module,\n        issue.id,\n        this.escapeCsvField(issue.title),\n        issue.severity,\n        issue.category,\n        this.escapeCsvField(issue.description),\n        this.escapeCsvField(issue.recommendation || ''),\n        issue.metadata ? 'true' : 'false',\n      ];\n\n      if (options?.includeMetadata) {\n        row.push(this.stringifyMetadata(issue.metadata));\n      }\n\n      rows.push(row);\n    }\n\n    return this.formatCSVRows(rows);\n  }\n\n  /**\n   * Generate statistics CSV section\n   */\n  private generateStatisticsCSV(report: MonitoringReport): string {\n    const allIssues = report.modules.flatMap(m => m.result.issues);\n\n    // Severity distribution\n    const severityStats = [\n      ['Statistic', 'Value'],\n      ['Total_Issues', allIssues.length.toString()],\n      [\n        'Critical_Issues',\n        allIssues.filter(i => i.severity === SeverityLevel.CRITICAL).length.toString(),\n      ],\n      ['Error_Issues', allIssues.filter(i => i.severity === SeverityLevel.ERROR).length.toString()],\n      [\n        'Warning_Issues',\n        allIssues.filter(i => i.severity === SeverityLevel.WARNING).length.toString(),\n      ],\n      ['Info_Issues', allIssues.filter(i => i.severity === SeverityLevel.INFO).length.toString()],\n    ];\n\n    // Category distribution\n    const categoryMap = new Map<string, number>();\n    allIssues.forEach(issue => {\n      categoryMap.set(issue.category, (categoryMap.get(issue.category) || 0) + 1);\n    });\n\n    const categoryStats: string[][] = [\n      ['', ''],\n      ['# CATEGORY_DISTRIBUTION', ''],\n      ['Category', 'Count'],\n    ];\n\n    for (const category of Array.from(categoryMap.keys())) {\n      const count = categoryMap.get(category)!;\n      categoryStats.push([category, count.toString()]);\n    }\n\n    // Module statistics\n    const moduleStats: string[][] = [\n      ['', ''],\n      ['# MODULE_STATISTICS', ''],\n      ['Module', 'Duration_Ms', 'Issue_Count', 'Issues_Per_Second'],\n    ];\n\n    for (const moduleResult of report.modules) {\n      const issuesPerSecond =\n        moduleResult.duration > 0\n          ? (moduleResult.result.issues.length / (moduleResult.duration / 1000)).toFixed(3)\n          : '0';\n\n      moduleStats.push([\n        moduleResult.moduleName,\n        moduleResult.duration.toString(),\n        moduleResult.result.issues.length.toString(),\n        issuesPerSecond,\n      ]);\n    }\n\n    return this.formatCSVRows([...severityStats, ...categoryStats, ...moduleStats]);\n  }\n\n  /**\n   * Sort issues by specified criteria\n   */\n  private sortIssues(issues: any[], sortBy?: string): any[] {\n    const sorted = [...issues];\n\n    switch (sortBy) {\n      case 'severity':\n        const severityOrder: Record<string, number> = {\n          [SeverityLevel.CRITICAL]: 0,\n          [SeverityLevel.ERROR]: 1,\n          [SeverityLevel.WARNING]: 2,\n          [SeverityLevel.INFO]: 3,\n        };\n        sorted.sort(\n          (a, b) => (severityOrder[a.severity] || 999) - (severityOrder[b.severity] || 999)\n        );\n        break;\n      case 'category':\n        sorted.sort((a, b) => a.category.localeCompare(b.category));\n        break;\n      case 'module':\n        sorted.sort((a, b) => a.module.localeCompare(b.module));\n        break;\n      case 'timestamp':\n        // Sort by issue ID as proxy for timestamp if no actual timestamp\n        sorted.sort((a, b) => a.id.localeCompare(b.id));\n        break;\n    }\n\n    return sorted;\n  }\n\n  /**\n   * Format rows as CSV\n   */\n  private formatCSVRows(rows: string[][]): string {\n    return rows.map(row => row.map(cell => this.escapeCSVCell(cell)).join(',')).join('\\n');\n  }\n\n  /**\n   * Escape CSV cell content\n   */\n  private escapeCSVCell(cell: string): string {\n    // Handle null/undefined\n    if (cell == null) return '';\n\n    const str = String(cell);\n\n    // If cell contains comma, newline, or double quote, wrap in quotes and escape quotes\n    if (str.includes(',') || str.includes('\\n') || str.includes('\\r') || str.includes('\"')) {\n      return `\"${str.replace(/\"/g, '\"\"')}\"`;\n    }\n\n    return str;\n  }\n\n  /**\n   * Escape CSV field content (for description and recommendation fields)\n   */\n  private escapeCsvField(text: string): string {\n    if (!text) return '';\n\n    // Replace newlines with spaces and limit length\n    return text.replace(/\\r?\\n/g, ' ').replace(/\\s+/g, ' ').trim().substring(0, 500); // Limit field length for CSV compatibility\n  }\n\n  /**\n   * Convert metadata object to string\n   */\n  private stringifyMetadata(metadata: any): string {\n    if (!metadata) return '';\n\n    try {\n      return JSON.stringify(metadata).replace(/\"/g, '\"\"');\n    } catch {\n      return String(metadata).replace(/\"/g, '\"\"');\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a399e1d7eaf33888f739667b49cc2c596e61fb09","contentHash":"c6b1ceb06c10287e50e6d9445a0aa6a9a5da49ae533230d5ffa4f1c9b6db98dc"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/tasks/list-modules.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/tasks/list-modules.ts","statementMap":{"0":{"start":{"line":7,"column":0},"end":{"line":7,"column":62}},"1":{"start":{"line":8,"column":16},"end":{"line":8,"column":32}},"2":{"start":{"line":9,"column":17},"end":{"line":9,"column":42}},"3":{"start":{"line":10,"column":16},"end":{"line":10,"column":57}},"4":{"start":{"line":11,"column":11},"end":{"line":11,"column":46}},"5":{"start":{"line":12,"column":13},"end":{"line":12,"column":50}},"6":{"start":{"line":13,"column":0},"end":{"line":74,"column":3}},"7":{"start":{"line":23,"column":4},"end":{"line":73,"column":5}},"8":{"start":{"line":25,"column":8},"end":{"line":25,"column":92}},"9":{"start":{"line":26,"column":8},"end":{"line":26,"column":58}},"10":{"start":{"line":28,"column":132},"end":{"line":28,"column":211}},"11":{"start":{"line":28,"column":167},"end":{"line":28,"column":210}},"12":{"start":{"line":29,"column":32},"end":{"line":35,"column":9}},"13":{"start":{"line":37,"column":27},"end":{"line":37,"column":42}},"14":{"start":{"line":38,"column":8},"end":{"line":42,"column":9}},"15":{"start":{"line":39,"column":12},"end":{"line":39,"column":83}},"16":{"start":{"line":40,"column":12},"end":{"line":40,"column":119}},"17":{"start":{"line":41,"column":12},"end":{"line":41,"column":19}},"18":{"start":{"line":44,"column":30},"end":{"line":44,"column":65}},"19":{"start":{"line":46,"column":8},"end":{"line":46,"column":82}},"20":{"start":{"line":48,"column":8},"end":{"line":57,"column":9}},"21":{"start":{"line":50,"column":16},"end":{"line":50,"column":68}},"22":{"start":{"line":51,"column":16},"end":{"line":51,"column":22}},"23":{"start":{"line":53,"column":16},"end":{"line":53,"column":63}},"24":{"start":{"line":54,"column":16},"end":{"line":54,"column":22}},"25":{"start":{"line":56,"column":16},"end":{"line":56,"column":65}},"26":{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},"27":{"start":{"line":60,"column":12},"end":{"line":60,"column":63}},"28":{"start":{"line":63,"column":8},"end":{"line":63,"column":62}},"29":{"start":{"line":66,"column":8},"end":{"line":66,"column":79}},"30":{"start":{"line":67,"column":8},"end":{"line":67,"column":68}},"31":{"start":{"line":68,"column":8},"end":{"line":71,"column":9}},"32":{"start":{"line":69,"column":12},"end":{"line":69,"column":64}},"33":{"start":{"line":70,"column":12},"end":{"line":70,"column":61}},"34":{"start":{"line":72,"column":8},"end":{"line":72,"column":20}},"35":{"start":{"line":82,"column":19},"end":{"line":82,"column":31}},"36":{"start":{"line":84,"column":4},"end":{"line":87,"column":5}},"37":{"start":{"line":85,"column":22},"end":{"line":85,"column":50}},"38":{"start":{"line":86,"column":8},"end":{"line":86,"column":129}},"39":{"start":{"line":86,"column":45},"end":{"line":86,"column":127}},"40":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"41":{"start":{"line":90,"column":8},"end":{"line":90,"column":109}},"42":{"start":{"line":90,"column":45},"end":{"line":90,"column":107}},"43":{"start":{"line":92,"column":4},"end":{"line":92,"column":20}},"44":{"start":{"line":98,"column":4},"end":{"line":108,"column":7}},"45":{"start":{"line":99,"column":8},"end":{"line":107,"column":9}},"46":{"start":{"line":101,"column":34},"end":{"line":101,"column":50}},"47":{"start":{"line":102,"column":34},"end":{"line":102,"column":50}},"48":{"start":{"line":103,"column":16},"end":{"line":103,"column":58}},"49":{"start":{"line":106,"column":16},"end":{"line":106,"column":52}},"50":{"start":{"line":114,"column":4},"end":{"line":117,"column":5}},"51":{"start":{"line":115,"column":8},"end":{"line":115,"column":91}},"52":{"start":{"line":116,"column":8},"end":{"line":116,"column":15}},"53":{"start":{"line":118,"column":4},"end":{"line":118,"column":83}},"54":{"start":{"line":119,"column":4},"end":{"line":148,"column":7}},"55":{"start":{"line":121,"column":8},"end":{"line":121,"column":80}},"56":{"start":{"line":122,"column":8},"end":{"line":122,"column":65}},"57":{"start":{"line":123,"column":8},"end":{"line":123,"column":70}},"58":{"start":{"line":125,"column":8},"end":{"line":127,"column":9}},"59":{"start":{"line":126,"column":12},"end":{"line":126,"column":81}},"60":{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},"61":{"start":{"line":129,"column":12},"end":{"line":129,"column":79}},"62":{"start":{"line":132,"column":8},"end":{"line":146,"column":9}},"63":{"start":{"line":133,"column":12},"end":{"line":145,"column":13}},"64":{"start":{"line":134,"column":35},"end":{"line":134,"column":61}},"65":{"start":{"line":135,"column":16},"end":{"line":141,"column":17}},"66":{"start":{"line":136,"column":20},"end":{"line":136,"column":78}},"67":{"start":{"line":137,"column":20},"end":{"line":140,"column":23}},"68":{"start":{"line":138,"column":41},"end":{"line":138,"column":86}},"69":{"start":{"line":139,"column":24},"end":{"line":139,"column":126}},"70":{"start":{"line":144,"column":16},"end":{"line":144,"column":85}},"71":{"start":{"line":147,"column":8},"end":{"line":147,"column":22}},"72":{"start":{"line":154,"column":4},"end":{"line":157,"column":5}},"73":{"start":{"line":155,"column":8},"end":{"line":155,"column":91}},"74":{"start":{"line":156,"column":8},"end":{"line":156,"column":15}},"75":{"start":{"line":158,"column":4},"end":{"line":158,"column":22}},"76":{"start":{"line":160,"column":22},"end":{"line":160,"column":84}},"77":{"start":{"line":160,"column":64},"end":{"line":160,"column":77}},"78":{"start":{"line":161,"column":26},"end":{"line":161,"column":100}},"79":{"start":{"line":161,"column":68},"end":{"line":161,"column":93}},"80":{"start":{"line":162,"column":20},"end":{"line":162,"column":80}},"81":{"start":{"line":162,"column":62},"end":{"line":162,"column":73}},"82":{"start":{"line":163,"column":25},"end":{"line":163,"column":236}},"83":{"start":{"line":164,"column":4},"end":{"line":164,"column":30}},"84":{"start":{"line":165,"column":4},"end":{"line":165,"column":70}},"85":{"start":{"line":167,"column":4},"end":{"line":173,"column":7}},"86":{"start":{"line":168,"column":21},"end":{"line":168,"column":50}},"87":{"start":{"line":169,"column":25},"end":{"line":169,"column":73}},"88":{"start":{"line":170,"column":19},"end":{"line":170,"column":44}},"89":{"start":{"line":171,"column":28},"end":{"line":171,"column":111}},"90":{"start":{"line":172,"column":8},"end":{"line":172,"column":151}},"91":{"start":{"line":174,"column":4},"end":{"line":174,"column":18}},"92":{"start":{"line":180,"column":19},"end":{"line":207,"column":5}},"93":{"start":{"line":189,"column":30},"end":{"line":195,"column":13}},"94":{"start":{"line":196,"column":12},"end":{"line":204,"column":13}},"95":{"start":{"line":197,"column":16},"end":{"line":203,"column":17}},"96":{"start":{"line":198,"column":39},"end":{"line":198,"column":65}},"97":{"start":{"line":199,"column":20},"end":{"line":199,"column":76}},"98":{"start":{"line":202,"column":20},"end":{"line":202,"column":70}},"99":{"start":{"line":205,"column":12},"end":{"line":205,"column":29}},"100":{"start":{"line":208,"column":4},"end":{"line":208,"column":49}},"101":{"start":{"line":214,"column":4},"end":{"line":215,"column":15}},"102":{"start":{"line":215,"column":8},"end":{"line":215,"column":15}},"103":{"start":{"line":216,"column":4},"end":{"line":239,"column":5}},"104":{"start":{"line":217,"column":23},"end":{"line":232,"column":9}},"105":{"start":{"line":225,"column":44},"end":{"line":231,"column":13}},"106":{"start":{"line":233,"column":27},"end":{"line":233,"column":56}},"107":{"start":{"line":234,"column":8},"end":{"line":234,"column":89}},"108":{"start":{"line":235,"column":8},"end":{"line":235,"column":85}},"109":{"start":{"line":238,"column":8},"end":{"line":238,"column":89}},"110":{"start":{"line":245,"column":4},"end":{"line":245,"column":55}},"111":{"start":{"line":246,"column":4},"end":{"line":246,"column":54}},"112":{"start":{"line":247,"column":4},"end":{"line":247,"column":90}},"113":{"start":{"line":248,"column":4},"end":{"line":250,"column":5}},"114":{"start":{"line":249,"column":8},"end":{"line":249,"column":100}},"115":{"start":{"line":252,"column":23},"end":{"line":256,"column":10}},"116":{"start":{"line":253,"column":25},"end":{"line":253,"column":59}},"117":{"start":{"line":254,"column":8},"end":{"line":254,"column":49}},"118":{"start":{"line":255,"column":8},"end":{"line":255,"column":19}},"119":{"start":{"line":257,"column":4},"end":{"line":264,"column":5}},"120":{"start":{"line":258,"column":8},"end":{"line":258,"column":63}},"121":{"start":{"line":259,"column":8},"end":{"line":263,"column":11}},"122":{"start":{"line":260,"column":36},"end":{"line":260,"column":41}},"123":{"start":{"line":262,"column":12},"end":{"line":262,"column":74}},"124":{"start":{"line":266,"column":26},"end":{"line":266,"column":87}},"125":{"start":{"line":266,"column":58},"end":{"line":266,"column":68}},"126":{"start":{"line":267,"column":4},"end":{"line":269,"column":5}},"127":{"start":{"line":268,"column":8},"end":{"line":268,"column":102}},"128":{"start":{"line":270,"column":4},"end":{"line":270,"column":18}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":22,"column":15},"end":{"line":22,"column":16}},"loc":{"start":{"line":22,"column":40},"end":{"line":74,"column":1}},"line":22},"1":{"name":"(anonymous_1)","decl":{"start":{"line":28,"column":161},"end":{"line":28,"column":162}},"loc":{"start":{"line":28,"column":167},"end":{"line":28,"column":210}},"line":28},"2":{"name":"filterModules","decl":{"start":{"line":81,"column":9},"end":{"line":81,"column":22}},"loc":{"start":{"line":81,"column":38},"end":{"line":93,"column":1}},"line":81},"3":{"name":"(anonymous_3)","decl":{"start":{"line":86,"column":35},"end":{"line":86,"column":36}},"loc":{"start":{"line":86,"column":45},"end":{"line":86,"column":127}},"line":86},"4":{"name":"(anonymous_4)","decl":{"start":{"line":90,"column":35},"end":{"line":90,"column":36}},"loc":{"start":{"line":90,"column":45},"end":{"line":90,"column":107}},"line":90},"5":{"name":"sortModules","decl":{"start":{"line":97,"column":9},"end":{"line":97,"column":20}},"loc":{"start":{"line":97,"column":38},"end":{"line":109,"column":1}},"line":97},"6":{"name":"(anonymous_6)","decl":{"start":{"line":98,"column":24},"end":{"line":98,"column":25}},"loc":{"start":{"line":98,"column":34},"end":{"line":108,"column":5}},"line":98},"7":{"name":"displayModulesConsole","decl":{"start":{"line":113,"column":9},"end":{"line":113,"column":30}},"loc":{"start":{"line":113,"column":46},"end":{"line":149,"column":1}},"line":113},"8":{"name":"(anonymous_8)","decl":{"start":{"line":119,"column":20},"end":{"line":119,"column":21}},"loc":{"start":{"line":119,"column":39},"end":{"line":148,"column":5}},"line":119},"9":{"name":"(anonymous_9)","decl":{"start":{"line":137,"column":39},"end":{"line":137,"column":40}},"loc":{"start":{"line":137,"column":46},"end":{"line":140,"column":21}},"line":137},"10":{"name":"displayModulesTable","decl":{"start":{"line":153,"column":9},"end":{"line":153,"column":28}},"loc":{"start":{"line":153,"column":44},"end":{"line":175,"column":1}},"line":153},"11":{"name":"(anonymous_11)","decl":{"start":{"line":160,"column":59},"end":{"line":160,"column":60}},"loc":{"start":{"line":160,"column":64},"end":{"line":160,"column":77}},"line":160},"12":{"name":"(anonymous_12)","decl":{"start":{"line":161,"column":63},"end":{"line":161,"column":64}},"loc":{"start":{"line":161,"column":68},"end":{"line":161,"column":93}},"line":161},"13":{"name":"(anonymous_13)","decl":{"start":{"line":162,"column":57},"end":{"line":162,"column":58}},"loc":{"start":{"line":162,"column":62},"end":{"line":162,"column":73}},"line":162},"14":{"name":"(anonymous_14)","decl":{"start":{"line":167,"column":20},"end":{"line":167,"column":21}},"loc":{"start":{"line":167,"column":30},"end":{"line":173,"column":5}},"line":167},"15":{"name":"displayModulesJSON","decl":{"start":{"line":179,"column":15},"end":{"line":179,"column":33}},"loc":{"start":{"line":179,"column":49},"end":{"line":209,"column":1}},"line":179},"16":{"name":"(anonymous_16)","decl":{"start":{"line":188,"column":29},"end":{"line":188,"column":30}},"loc":{"start":{"line":188,"column":39},"end":{"line":206,"column":9}},"line":188},"17":{"name":"saveModulesToFile","decl":{"start":{"line":213,"column":15},"end":{"line":213,"column":32}},"loc":{"start":{"line":213,"column":48},"end":{"line":240,"column":1}},"line":213},"18":{"name":"(anonymous_18)","decl":{"start":{"line":225,"column":33},"end":{"line":225,"column":34}},"loc":{"start":{"line":225,"column":44},"end":{"line":231,"column":13}},"line":225},"19":{"name":"displaySummary","decl":{"start":{"line":244,"column":9},"end":{"line":244,"column":23}},"loc":{"start":{"line":244,"column":59},"end":{"line":271,"column":1}},"line":244},"20":{"name":"(anonymous_20)","decl":{"start":{"line":252,"column":41},"end":{"line":252,"column":42}},"loc":{"start":{"line":252,"column":58},"end":{"line":256,"column":5}},"line":252},"21":{"name":"(anonymous_21)","decl":{"start":{"line":260,"column":18},"end":{"line":260,"column":19}},"loc":{"start":{"line":260,"column":36},"end":{"line":260,"column":41}},"line":260},"22":{"name":"(anonymous_22)","decl":{"start":{"line":261,"column":21},"end":{"line":261,"column":22}},"loc":{"start":{"line":261,"column":44},"end":{"line":263,"column":9}},"line":261},"23":{"name":"(anonymous_23)","decl":{"start":{"line":266,"column":53},"end":{"line":266,"column":54}},"loc":{"start":{"line":266,"column":58},"end":{"line":266,"column":68}},"line":266}},"branchMap":{"0":{"loc":{"start":{"line":38,"column":8},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":42,"column":9}},{"start":{},"end":{}}],"line":38},"1":{"loc":{"start":{"line":46,"column":55},"end":{"line":46,"column":80}},"type":"binary-expr","locations":[{"start":{"line":46,"column":55},"end":{"line":46,"column":70}},{"start":{"line":46,"column":74},"end":{"line":46,"column":80}}],"line":46},"2":{"loc":{"start":{"line":48,"column":8},"end":{"line":57,"column":9}},"type":"switch","locations":[{"start":{"line":49,"column":12},"end":{"line":51,"column":22}},{"start":{"line":52,"column":12},"end":{"line":54,"column":22}},{"start":{"line":55,"column":12},"end":{"line":56,"column":65}}],"line":48},"3":{"loc":{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},{"start":{},"end":{}}],"line":59},"4":{"loc":{"start":{"line":68,"column":8},"end":{"line":71,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":71,"column":9}},{"start":{},"end":{}}],"line":68},"5":{"loc":{"start":{"line":84,"column":4},"end":{"line":87,"column":5}},"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":87,"column":5}},{"start":{},"end":{}}],"line":84},"6":{"loc":{"start":{"line":86,"column":45},"end":{"line":86,"column":127}},"type":"binary-expr","locations":[{"start":{"line":86,"column":45},"end":{"line":86,"column":68}},{"start":{"line":86,"column":72},"end":{"line":86,"column":102}},{"start":{"line":86,"column":106},"end":{"line":86,"column":127}}],"line":86},"7":{"loc":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},{"start":{},"end":{}}],"line":89},"8":{"loc":{"start":{"line":99,"column":8},"end":{"line":107,"column":9}},"type":"switch","locations":[{"start":{"line":100,"column":12},"end":{"line":103,"column":58}},{"start":{"line":104,"column":12},"end":{"line":104,"column":24}},{"start":{"line":105,"column":12},"end":{"line":106,"column":52}}],"line":99},"9":{"loc":{"start":{"line":101,"column":34},"end":{"line":101,"column":50}},"type":"binary-expr","locations":[{"start":{"line":101,"column":34},"end":{"line":101,"column":44}},{"start":{"line":101,"column":48},"end":{"line":101,"column":50}}],"line":101},"10":{"loc":{"start":{"line":102,"column":34},"end":{"line":102,"column":50}},"type":"binary-expr","locations":[{"start":{"line":102,"column":34},"end":{"line":102,"column":44}},{"start":{"line":102,"column":48},"end":{"line":102,"column":50}}],"line":102},"11":{"loc":{"start":{"line":114,"column":4},"end":{"line":117,"column":5}},"type":"if","locations":[{"start":{"line":114,"column":4},"end":{"line":117,"column":5}},{"start":{},"end":{}}],"line":114},"12":{"loc":{"start":{"line":125,"column":8},"end":{"line":127,"column":9}},"type":"if","locations":[{"start":{"line":125,"column":8},"end":{"line":127,"column":9}},{"start":{},"end":{}}],"line":125},"13":{"loc":{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},"type":"if","locations":[{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},{"start":{},"end":{}}],"line":128},"14":{"loc":{"start":{"line":132,"column":8},"end":{"line":146,"column":9}},"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":146,"column":9}},{"start":{},"end":{}}],"line":132},"15":{"loc":{"start":{"line":135,"column":16},"end":{"line":141,"column":17}},"type":"if","locations":[{"start":{"line":135,"column":16},"end":{"line":141,"column":17}},{"start":{},"end":{}}],"line":135},"16":{"loc":{"start":{"line":135,"column":20},"end":{"line":135,"column":55}},"type":"binary-expr","locations":[{"start":{"line":135,"column":20},"end":{"line":135,"column":30}},{"start":{"line":135,"column":34},"end":{"line":135,"column":55}}],"line":135},"17":{"loc":{"start":{"line":138,"column":41},"end":{"line":138,"column":86}},"type":"cond-expr","locations":[{"start":{"line":138,"column":56},"end":{"line":138,"column":80}},{"start":{"line":138,"column":83},"end":{"line":138,"column":86}}],"line":138},"18":{"loc":{"start":{"line":154,"column":4},"end":{"line":157,"column":5}},"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":157,"column":5}},{"start":{},"end":{}}],"line":154},"19":{"loc":{"start":{"line":161,"column":69},"end":{"line":161,"column":85}},"type":"binary-expr","locations":[{"start":{"line":161,"column":69},"end":{"line":161,"column":79}},{"start":{"line":161,"column":83},"end":{"line":161,"column":85}}],"line":161},"20":{"loc":{"start":{"line":169,"column":26},"end":{"line":169,"column":50}},"type":"binary-expr","locations":[{"start":{"line":169,"column":26},"end":{"line":169,"column":41}},{"start":{"line":169,"column":45},"end":{"line":169,"column":50}}],"line":169},"21":{"loc":{"start":{"line":171,"column":67},"end":{"line":171,"column":110}},"type":"cond-expr","locations":[{"start":{"line":171,"column":100},"end":{"line":171,"column":105}},{"start":{"line":171,"column":108},"end":{"line":171,"column":110}}],"line":171},"22":{"loc":{"start":{"line":196,"column":12},"end":{"line":204,"column":13}},"type":"if","locations":[{"start":{"line":196,"column":12},"end":{"line":204,"column":13}},{"start":{},"end":{}}],"line":196},"23":{"loc":{"start":{"line":214,"column":4},"end":{"line":215,"column":15}},"type":"if","locations":[{"start":{"line":214,"column":4},"end":{"line":215,"column":15}},{"start":{},"end":{}}],"line":214},"24":{"loc":{"start":{"line":248,"column":4},"end":{"line":250,"column":5}},"type":"if","locations":[{"start":{"line":248,"column":4},"end":{"line":250,"column":5}},{"start":{},"end":{}}],"line":248},"25":{"loc":{"start":{"line":248,"column":8},"end":{"line":248,"column":36}},"type":"binary-expr","locations":[{"start":{"line":248,"column":8},"end":{"line":248,"column":19}},{"start":{"line":248,"column":23},"end":{"line":248,"column":36}}],"line":248},"26":{"loc":{"start":{"line":253,"column":25},"end":{"line":253,"column":59}},"type":"binary-expr","locations":[{"start":{"line":253,"column":25},"end":{"line":253,"column":40}},{"start":{"line":253,"column":44},"end":{"line":253,"column":59}}],"line":253},"27":{"loc":{"start":{"line":254,"column":25},"end":{"line":254,"column":43}},"type":"binary-expr","locations":[{"start":{"line":254,"column":25},"end":{"line":254,"column":38}},{"start":{"line":254,"column":42},"end":{"line":254,"column":43}}],"line":254},"28":{"loc":{"start":{"line":257,"column":4},"end":{"line":264,"column":5}},"type":"if","locations":[{"start":{"line":257,"column":4},"end":{"line":264,"column":5}},{"start":{},"end":{}}],"line":257},"29":{"loc":{"start":{"line":267,"column":4},"end":{"line":269,"column":5}},"type":"if","locations":[{"start":{"line":267,"column":4},"end":{"line":269,"column":5}},{"start":{},"end":{}}],"line":267}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0]},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/tasks/list-modules.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/tasks/list-modules.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Enhanced list modules task for Hardhat\n *\n * Provides comprehensive module listing with filtering, detailed information, and professional output\n */\n\nimport { task } from 'hardhat/config';\nimport { HardhatRuntimeEnvironment } from 'hardhat/types';\nimport chalk from 'chalk';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nimport { DiamondMonitoringSystem } from '../core/DiamondMonitoringSystem';\nimport { MonitoringModule } from '../core/types';\n\n/**\n * Extended task arguments for enhanced module listing\n */\ninterface EnhancedListModulesArgs {\n  filter?: string;\n  category?: string;\n  debug?: boolean;\n  format?: string;\n  outputFile?: string;\n  showDependencies?: boolean;\n  showConfig?: boolean;\n  sortBy?: string;\n}\n\ntask(\n  'list-modules',\n  'List available diamond monitoring modules with enhanced filtering and information'\n)\n  .addOptionalParam('filter', 'Filter modules by name or description (regex supported)')\n  .addOptionalParam('category', 'Filter modules by category')\n  .addOptionalParam('format', 'Output format (console|json|table)', 'console')\n  .addOptionalParam('outputFile', 'Save output to file')\n  .addOptionalParam('sortBy', 'Sort modules by (name|category)', 'name')\n  .addFlag('debug', 'Show detailed module information')\n  .addFlag('showDependencies', 'Show module dependencies')\n  .addFlag('showConfig', 'Show module configuration requirements')\n  .setAction(async (taskArgs: EnhancedListModulesArgs, hre: HardhatRuntimeEnvironment) => {\n    try {\n      // Print header\n      console.log(chalk.blue.bold('\\n📦 Available Diamond Monitoring Modules'));\n      console.log(chalk.blue('═'.repeat(45)));\n\n      // Import and instantiate modules directly\n      const {\n        FunctionSelectorModule,\n        DiamondStructureModule,\n        AccessControlModule,\n        TokenSupplyModule,\n        ERC165ComplianceModule,\n      } = await import('../modules');\n\n      const moduleInstances: MonitoringModule[] = [\n        new FunctionSelectorModule(),\n        new DiamondStructureModule(),\n        new AccessControlModule(),\n        new TokenSupplyModule(),\n        new ERC165ComplianceModule(),\n      ];\n\n      // Get all available modules\n      const allModules = moduleInstances;\n\n      if (allModules.length === 0) {\n        console.log(chalk.yellow('⚠️  No monitoring modules found'));\n        console.log(\n          chalk.blue('💡 Make sure monitoring modules are properly installed and registered')\n        );\n        return;\n      }\n\n      // Apply filters\n      let filteredModules = filterModules(allModules, taskArgs);\n\n      // Sort modules\n      filteredModules = sortModules(filteredModules, taskArgs.sortBy || 'name');\n\n      // Display results based on format\n      switch (taskArgs.format) {\n        case 'json':\n          await displayModulesJSON(filteredModules, taskArgs);\n          break;\n        case 'table':\n          displayModulesTable(filteredModules, taskArgs);\n          break;\n        default:\n          displayModulesConsole(filteredModules, taskArgs);\n      }\n\n      // Save to file if requested\n      if (taskArgs.outputFile) {\n        await saveModulesToFile(filteredModules, taskArgs);\n      }\n\n      // Display summary\n      displaySummary(allModules, filteredModules, taskArgs);\n    } catch (error) {\n      console.error(chalk.red.bold('\\n❌ Failed to list modules:'));\n      console.error(chalk.red(`   ${(error as Error).message}\\n`));\n\n      if (taskArgs.debug) {\n        console.error(chalk.gray('Stack trace:'));\n        console.error(chalk.gray((error as Error).stack));\n      }\n\n      throw error;\n    }\n  });\n\n// ========================================\n// Implementation Functions\n// ========================================\n\n/**\n * Filter modules based on criteria\n */\nfunction filterModules(\n  modules: MonitoringModule[],\n  args: EnhancedListModulesArgs\n): MonitoringModule[] {\n  let filtered = [...modules];\n\n  // Filter by name/description\n  if (args.filter) {\n    const regex = new RegExp(args.filter, 'i');\n    filtered = filtered.filter(\n      module => regex.test(module.name) || regex.test(module.description) || regex.test(module.id)\n    );\n  }\n\n  // Filter by category\n  if (args.category) {\n    filtered = filtered.filter(\n      module => module.category?.toLowerCase() === args.category!.toLowerCase()\n    );\n  }\n\n  return filtered;\n}\n\n/**\n * Sort modules by specified criteria\n */\nfunction sortModules(modules: MonitoringModule[], sortBy: string): MonitoringModule[] {\n  return modules.sort((a, b) => {\n    switch (sortBy) {\n      case 'category':\n        const categoryA = a.category || '';\n        const categoryB = b.category || '';\n        return categoryA.localeCompare(categoryB);\n\n      case 'name':\n      default:\n        return a.name.localeCompare(b.name);\n    }\n  });\n}\n\n/**\n * Display modules in console format\n */\nfunction displayModulesConsole(modules: MonitoringModule[], args: EnhancedListModulesArgs): void {\n  if (modules.length === 0) {\n    console.log(chalk.yellow('🔍 No modules match the specified filters\\n'));\n    return;\n  }\n\n  console.log(chalk.blue(`\\n📋 Found ${modules.length} module(s):\\n`));\n\n  modules.forEach((module, index) => {\n    // Module header\n    console.log(chalk.green.bold(`${index + 1}. ${module.name}`));\n    console.log(chalk.blue(`   ID: ${module.id}`));\n    console.log(chalk.gray(`   ${module.description}`));\n\n    // Category and version\n    if (module.category) {\n      console.log(chalk.cyan(`   Category: ${module.category}`));\n    }\n    if (module.version) {\n      console.log(chalk.cyan(`   Version: ${module.version}`));\n    }\n\n    // Configuration requirements (if available)\n    if (args.showConfig) {\n      try {\n        const configReqs = module.getRequiredConfig();\n        if (configReqs && configReqs.length > 0) {\n          console.log(chalk.magenta('   Configuration:'));\n          configReqs.forEach(req => {\n            const required = req.required ? chalk.red('*') : ' ';\n            console.log(\n              chalk.magenta(`     ${required} ${req.key} (${req.type}): ${req.description}`)\n            );\n          });\n        }\n      } catch (error) {\n        console.log(chalk.gray('   Configuration: Not available'));\n      }\n    }\n\n    console.log(); // Empty line between modules\n  });\n}\n\n/**\n * Display modules in table format\n */\nfunction displayModulesTable(modules: MonitoringModule[], args: EnhancedListModulesArgs): void {\n  if (modules.length === 0) {\n    console.log(chalk.yellow('🔍 No modules match the specified filters\\n'));\n    return;\n  }\n\n  console.log('\\n');\n\n  // Header\n  const nameWidth = Math.max(20, Math.max(...modules.map(m => m.name.length)) + 2);\n  const categoryWidth = Math.max(12, Math.max(...modules.map(m => (m.category || '').length)) + 2);\n  const idWidth = Math.max(15, Math.max(...modules.map(m => m.id.length)) + 2);\n\n  const headerFormat = `${chalk.blue.bold('Name'.padEnd(nameWidth))}${chalk.blue.bold('Category'.padEnd(categoryWidth))}${chalk.blue.bold('ID'.padEnd(idWidth))}${chalk.blue.bold('Description')}`;\n  console.log(headerFormat);\n  console.log('─'.repeat(nameWidth + categoryWidth + idWidth + 30));\n\n  // Rows\n  modules.forEach(module => {\n    const name = module.name.padEnd(nameWidth);\n    const category = (module.category || 'N/A').padEnd(categoryWidth);\n    const id = module.id.padEnd(idWidth);\n    const description =\n      module.description.substring(0, 50) + (module.description.length > 50 ? '...' : '');\n\n    console.log(\n      `${chalk.green(name)}${chalk.cyan(category)}${chalk.gray(id)}${chalk.white(description)}`\n    );\n  });\n\n  console.log();\n}\n\n/**\n * Display modules in JSON format\n */\nasync function displayModulesJSON(\n  modules: MonitoringModule[],\n  args: EnhancedListModulesArgs\n): Promise<void> {\n  const output = {\n    timestamp: new Date().toISOString(),\n    total: modules.length,\n    filters: {\n      filter: args.filter,\n      category: args.category,\n      sortBy: args.sortBy,\n    },\n    modules: modules.map(module => {\n      const basicInfo = {\n        id: module.id,\n        name: module.name,\n        description: module.description,\n        category: module.category,\n        version: module.version,\n      };\n\n      if (args.showConfig) {\n        try {\n          const configReqs = module.getRequiredConfig();\n          return { ...basicInfo, configRequirements: configReqs };\n        } catch (error) {\n          return { ...basicInfo, configRequirements: null };\n        }\n      }\n\n      return basicInfo;\n    }),\n  };\n\n  console.log(JSON.stringify(output, null, 2));\n}\n\n/**\n * Save modules information to file\n */\nasync function saveModulesToFile(\n  modules: MonitoringModule[],\n  args: EnhancedListModulesArgs\n): Promise<void> {\n  if (!args.outputFile) return;\n\n  try {\n    const output = {\n      timestamp: new Date().toISOString(),\n      total: modules.length,\n      filters: {\n        filter: args.filter,\n        category: args.category,\n        sortBy: args.sortBy,\n      },\n      modules: modules.map(module => ({\n        id: module.id,\n        name: module.name,\n        description: module.description,\n        category: module.category,\n        version: module.version,\n      })),\n    };\n\n    const outputPath = path.resolve(args.outputFile);\n    await fs.promises.writeFile(outputPath, JSON.stringify(output, null, 2), 'utf8');\n\n    console.log(chalk.green(`📄 Module list saved to: ${outputPath}`));\n  } catch (error) {\n    console.error(chalk.red(`❌ Failed to save to file: ${(error as Error).message}`));\n  }\n}\n\n/**\n * Display summary information\n */\nfunction displaySummary(\n  allModules: MonitoringModule[],\n  filteredModules: MonitoringModule[],\n  args: EnhancedListModulesArgs\n): void {\n  console.log(chalk.blue('\\n📊 Summary:'));\n  console.log(chalk.blue('═'.repeat(20)));\n\n  console.log(chalk.blue(`📦 Total modules available: ${allModules.length}`));\n\n  if (args.filter || args.category) {\n    console.log(chalk.blue(`🔍 Modules matching filters: ${filteredModules.length}`));\n  }\n\n  // Category breakdown\n  const categories = allModules.reduce(\n    (acc, module) => {\n      const category = module.category || 'Uncategorized';\n      acc[category] = (acc[category] || 0) + 1;\n      return acc;\n    },\n    {} as Record<string, number>\n  );\n\n  if (Object.keys(categories).length > 1) {\n    console.log(chalk.blue('\\n📋 By Category:'));\n    Object.entries(categories)\n      .sort(([, a], [, b]) => b - a)\n      .forEach(([category, count]) => {\n        console.log(chalk.cyan(`   ${category}: ${count}`));\n      });\n  }\n\n  // Show available filters\n  const allCategories = [...new Set(allModules.map(m => m.category).filter(Boolean))];\n  if (allCategories.length > 0) {\n    console.log(chalk.blue(`\\n🏷️  Available categories: ${allCategories.join(', ')}`));\n  }\n\n  console.log();\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"21a178209a8dbb49829e94f02d32d9023e27b40a","contentHash":"0076a2a0ec3378c4f3a360bc63675d51a817bf0b42be179275dc8bfa7cee0a8a"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/tasks/monitor-continuous.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/tasks/monitor-continuous.ts","statementMap":{"0":{"start":{"line":7,"column":0},"end":{"line":7,"column":62}},"1":{"start":{"line":8,"column":16},"end":{"line":8,"column":32}},"2":{"start":{"line":9,"column":17},"end":{"line":9,"column":42}},"3":{"start":{"line":10,"column":14},"end":{"line":10,"column":52}},"4":{"start":{"line":11,"column":11},"end":{"line":11,"column":46}},"5":{"start":{"line":12,"column":13},"end":{"line":12,"column":50}},"6":{"start":{"line":13,"column":34},"end":{"line":13,"column":76}},"7":{"start":{"line":14,"column":26},"end":{"line":14,"column":63}},"8":{"start":{"line":15,"column":0},"end":{"line":54,"column":3}},"9":{"start":{"line":31,"column":22},"end":{"line":31,"column":32}},"10":{"start":{"line":32,"column":4},"end":{"line":53,"column":5}},"11":{"start":{"line":34,"column":8},"end":{"line":34,"column":84}},"12":{"start":{"line":35,"column":8},"end":{"line":35,"column":48}},"13":{"start":{"line":37,"column":8},"end":{"line":37,"column":52}},"14":{"start":{"line":38,"column":23},"end":{"line":38,"column":71}},"15":{"start":{"line":39,"column":24},"end":{"line":39,"column":60}},"16":{"start":{"line":41,"column":33},"end":{"line":41,"column":88}},"17":{"start":{"line":43,"column":8},"end":{"line":43,"column":90}},"18":{"start":{"line":46,"column":8},"end":{"line":46,"column":81}},"19":{"start":{"line":47,"column":8},"end":{"line":47,"column":58}},"20":{"start":{"line":48,"column":8},"end":{"line":51,"column":9}},"21":{"start":{"line":49,"column":12},"end":{"line":49,"column":54}},"22":{"start":{"line":50,"column":12},"end":{"line":50,"column":51}},"23":{"start":{"line":52,"column":8},"end":{"line":52,"column":24}},"24":{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},"25":{"start":{"line":63,"column":8},"end":{"line":63,"column":84}},"26":{"start":{"line":66,"column":21},"end":{"line":66,"column":57}},"27":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"28":{"start":{"line":68,"column":8},"end":{"line":68,"column":75}},"29":{"start":{"line":71,"column":4},"end":{"line":76,"column":5}},"30":{"start":{"line":72,"column":24},"end":{"line":72,"column":50}},"31":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"32":{"start":{"line":74,"column":12},"end":{"line":74,"column":70}},"33":{"start":{"line":78,"column":28},"end":{"line":78,"column":65}},"34":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"35":{"start":{"line":80,"column":8},"end":{"line":80,"column":126}},"36":{"start":{"line":83,"column":4},"end":{"line":88,"column":5}},"37":{"start":{"line":84,"column":8},"end":{"line":87,"column":9}},"38":{"start":{"line":85,"column":12},"end":{"line":85,"column":66}},"39":{"start":{"line":86,"column":12},"end":{"line":86,"column":91}},"40":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"41":{"start":{"line":90,"column":8},"end":{"line":90,"column":71}},"42":{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},"43":{"start":{"line":98,"column":8},"end":{"line":98,"column":86}},"44":{"start":{"line":100,"column":17},"end":{"line":100,"column":19}},"45":{"start":{"line":102,"column":4},"end":{"line":110,"column":5}},"46":{"start":{"line":103,"column":8},"end":{"line":109,"column":9}},"47":{"start":{"line":104,"column":34},"end":{"line":104,"column":78}},"48":{"start":{"line":105,"column":12},"end":{"line":105,"column":47}},"49":{"start":{"line":108,"column":12},"end":{"line":108,"column":106}},"50":{"start":{"line":112,"column":24},"end":{"line":117,"column":12}},"51":{"start":{"line":115,"column":22},"end":{"line":115,"column":30}},"52":{"start":{"line":116,"column":25},"end":{"line":116,"column":26}},"53":{"start":{"line":119,"column":29},"end":{"line":139,"column":5}},"54":{"start":{"line":141,"column":4},"end":{"line":148,"column":5}},"55":{"start":{"line":142,"column":8},"end":{"line":147,"column":11}},"56":{"start":{"line":143,"column":12},"end":{"line":146,"column":14}},"57":{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},"58":{"start":{"line":150,"column":8},"end":{"line":150,"column":85}},"59":{"start":{"line":152,"column":4},"end":{"line":152,"column":28}},"60":{"start":{"line":158,"column":4},"end":{"line":160,"column":5}},"61":{"start":{"line":159,"column":8},"end":{"line":159,"column":69}},"62":{"start":{"line":161,"column":24},"end":{"line":161,"column":66}},"63":{"start":{"line":162,"column":27},"end":{"line":162,"column":114}},"64":{"start":{"line":164,"column":26},"end":{"line":169,"column":5}},"65":{"start":{"line":170,"column":28},"end":{"line":170,"column":32}},"66":{"start":{"line":171,"column":29},"end":{"line":171,"column":31}},"67":{"start":{"line":172,"column":4},"end":{"line":185,"column":5}},"68":{"start":{"line":173,"column":8},"end":{"line":184,"column":9}},"69":{"start":{"line":174,"column":12},"end":{"line":183,"column":13}},"70":{"start":{"line":175,"column":16},"end":{"line":175,"column":82}},"71":{"start":{"line":176,"column":16},"end":{"line":176,"column":46}},"72":{"start":{"line":177,"column":16},"end":{"line":177,"column":22}},"73":{"start":{"line":180,"column":16},"end":{"line":182,"column":17}},"74":{"start":{"line":181,"column":20},"end":{"line":181,"column":99}},"75":{"start":{"line":186,"column":4},"end":{"line":188,"column":5}},"76":{"start":{"line":187,"column":8},"end":{"line":187,"column":114}},"77":{"start":{"line":190,"column":26},"end":{"line":190,"column":58}},"78":{"start":{"line":191,"column":17},"end":{"line":191,"column":19}},"79":{"start":{"line":192,"column":18},"end":{"line":192,"column":19}},"80":{"start":{"line":193,"column":4},"end":{"line":195,"column":5}},"81":{"start":{"line":194,"column":8},"end":{"line":194,"column":41}},"82":{"start":{"line":196,"column":4},"end":{"line":205,"column":5}},"83":{"start":{"line":197,"column":25},"end":{"line":197,"column":44}},"84":{"start":{"line":198,"column":24},"end":{"line":198,"column":51}},"85":{"start":{"line":199,"column":8},"end":{"line":199,"column":42}},"86":{"start":{"line":202,"column":8},"end":{"line":204,"column":9}},"87":{"start":{"line":203,"column":12},"end":{"line":203,"column":86}},"88":{"start":{"line":206,"column":20},"end":{"line":216,"column":5}},"89":{"start":{"line":217,"column":4},"end":{"line":219,"column":5}},"90":{"start":{"line":218,"column":8},"end":{"line":218,"column":95}},"91":{"start":{"line":220,"column":4},"end":{"line":222,"column":5}},"92":{"start":{"line":221,"column":8},"end":{"line":221,"column":92}},"93":{"start":{"line":223,"column":4},"end":{"line":223,"column":19}},"94":{"start":{"line":229,"column":21},"end":{"line":229,"column":64}},"95":{"start":{"line":230,"column":20},"end":{"line":230,"column":53}},"96":{"start":{"line":231,"column":4},"end":{"line":231,"column":76}},"97":{"start":{"line":232,"column":4},"end":{"line":232,"column":82}},"98":{"start":{"line":233,"column":4},"end":{"line":233,"column":108}},"99":{"start":{"line":234,"column":4},"end":{"line":234,"column":73}},"100":{"start":{"line":235,"column":4},"end":{"line":235,"column":87}},"101":{"start":{"line":236,"column":4},"end":{"line":236,"column":80}},"102":{"start":{"line":237,"column":4},"end":{"line":237,"column":57}},"103":{"start":{"line":238,"column":4},"end":{"line":238,"column":46}},"104":{"start":{"line":239,"column":19},"end":{"line":239,"column":20}},"105":{"start":{"line":240,"column":30},"end":{"line":240,"column":31}},"106":{"start":{"line":241,"column":35},"end":{"line":241,"column":36}},"107":{"start":{"line":243,"column":25},"end":{"line":243,"column":30}},"108":{"start":{"line":244,"column":4},"end":{"line":252,"column":7}},"109":{"start":{"line":245,"column":8},"end":{"line":251,"column":9}},"110":{"start":{"line":246,"column":12},"end":{"line":246,"column":34}},"111":{"start":{"line":247,"column":12},"end":{"line":247,"column":79}},"112":{"start":{"line":248,"column":12},"end":{"line":248,"column":87}},"113":{"start":{"line":249,"column":12},"end":{"line":249,"column":64}},"114":{"start":{"line":250,"column":12},"end":{"line":250,"column":28}},"115":{"start":{"line":253,"column":4},"end":{"line":259,"column":7}},"116":{"start":{"line":254,"column":8},"end":{"line":258,"column":9}},"117":{"start":{"line":255,"column":12},"end":{"line":255,"column":34}},"118":{"start":{"line":256,"column":12},"end":{"line":256,"column":79}},"119":{"start":{"line":257,"column":12},"end":{"line":257,"column":28}},"120":{"start":{"line":261,"column":26},"end":{"line":299,"column":5}},"121":{"start":{"line":262,"column":8},"end":{"line":263,"column":19}},"122":{"start":{"line":263,"column":12},"end":{"line":263,"column":19}},"123":{"start":{"line":264,"column":8},"end":{"line":264,"column":19}},"124":{"start":{"line":265,"column":26},"end":{"line":265,"column":50}},"125":{"start":{"line":266,"column":8},"end":{"line":266,"column":80}},"126":{"start":{"line":267,"column":8},"end":{"line":267,"column":48}},"127":{"start":{"line":268,"column":8},"end":{"line":298,"column":9}},"128":{"start":{"line":269,"column":29},"end":{"line":269,"column":48}},"129":{"start":{"line":270,"column":30},"end":{"line":270,"column":110}},"130":{"start":{"line":272,"column":27},"end":{"line":272,"column":91}},"131":{"start":{"line":274,"column":12},"end":{"line":274,"column":70}},"132":{"start":{"line":276,"column":12},"end":{"line":276,"column":48}},"133":{"start":{"line":278,"column":12},"end":{"line":278,"column":36}},"134":{"start":{"line":279,"column":12},"end":{"line":279,"column":82}},"135":{"start":{"line":282,"column":12},"end":{"line":282,"column":34}},"136":{"start":{"line":283,"column":12},"end":{"line":283,"column":84}},"137":{"start":{"line":284,"column":12},"end":{"line":286,"column":13}},"138":{"start":{"line":285,"column":16},"end":{"line":285,"column":55}},"139":{"start":{"line":288,"column":12},"end":{"line":297,"column":13}},"140":{"start":{"line":289,"column":16},"end":{"line":296,"column":17}},"141":{"start":{"line":290,"column":20},"end":{"line":290,"column":124}},"142":{"start":{"line":291,"column":20},"end":{"line":291,"column":44}},"143":{"start":{"line":294,"column":20},"end":{"line":294,"column":118}},"144":{"start":{"line":295,"column":20},"end":{"line":295,"column":36}},"145":{"start":{"line":301,"column":4},"end":{"line":301,"column":26}},"146":{"start":{"line":303,"column":4},"end":{"line":306,"column":5}},"147":{"start":{"line":304,"column":8},"end":{"line":304,"column":60}},"148":{"start":{"line":305,"column":8},"end":{"line":305,"column":15}},"149":{"start":{"line":308,"column":23},"end":{"line":320,"column":16}},"150":{"start":{"line":309,"column":8},"end":{"line":312,"column":9}},"151":{"start":{"line":310,"column":12},"end":{"line":310,"column":38}},"152":{"start":{"line":311,"column":12},"end":{"line":311,"column":19}},"153":{"start":{"line":313,"column":8},"end":{"line":318,"column":9}},"154":{"start":{"line":314,"column":12},"end":{"line":314,"column":38}},"155":{"start":{"line":315,"column":12},"end":{"line":315,"column":77}},"156":{"start":{"line":316,"column":12},"end":{"line":316,"column":28}},"157":{"start":{"line":317,"column":12},"end":{"line":317,"column":19}},"158":{"start":{"line":319,"column":8},"end":{"line":319,"column":30}},"159":{"start":{"line":322,"column":4},"end":{"line":322,"column":34}},"160":{"start":{"line":329,"column":4},"end":{"line":349,"column":5}},"161":{"start":{"line":330,"column":26},"end":{"line":330,"column":72}},"162":{"start":{"line":331,"column":25},"end":{"line":331,"column":132}},"163":{"start":{"line":332,"column":27},"end":{"line":332,"column":66}},"164":{"start":{"line":333,"column":8},"end":{"line":348,"column":9}},"165":{"start":{"line":334,"column":27},"end":{"line":334,"column":48}},"166":{"start":{"line":335,"column":28},"end":{"line":340,"column":13}},"167":{"start":{"line":341,"column":12},"end":{"line":341,"column":104}},"168":{"start":{"line":342,"column":12},"end":{"line":344,"column":13}},"169":{"start":{"line":343,"column":16},"end":{"line":343,"column":75}},"170":{"start":{"line":347,"column":12},"end":{"line":347,"column":82}},"171":{"start":{"line":351,"column":4},"end":{"line":351,"column":56}},"172":{"start":{"line":357,"column":22},"end":{"line":357,"column":55}},"173":{"start":{"line":358,"column":27},"end":{"line":358,"column":127}},"174":{"start":{"line":358,"column":55},"end":{"line":358,"column":126}},"175":{"start":{"line":358,"column":87},"end":{"line":358,"column":125}},"176":{"start":{"line":359,"column":4},"end":{"line":366,"column":5}},"177":{"start":{"line":360,"column":8},"end":{"line":360,"column":104}},"178":{"start":{"line":361,"column":8},"end":{"line":363,"column":11}},"179":{"start":{"line":362,"column":12},"end":{"line":362,"column":78}},"180":{"start":{"line":372,"column":27},"end":{"line":372,"column":73}},"181":{"start":{"line":373,"column":28},"end":{"line":373,"column":71}},"182":{"start":{"line":374,"column":26},"end":{"line":374,"column":69}},"183":{"start":{"line":375,"column":27},"end":{"line":375,"column":72}},"184":{"start":{"line":376,"column":4},"end":{"line":376,"column":43}},"185":{"start":{"line":382,"column":24},"end":{"line":382,"column":30}},"186":{"start":{"line":384,"column":21},"end":{"line":384,"column":24}},"187":{"start":{"line":385,"column":22},"end":{"line":385,"column":33}},"188":{"start":{"line":386,"column":4},"end":{"line":393,"column":5}},"189":{"start":{"line":387,"column":8},"end":{"line":387,"column":25}},"190":{"start":{"line":388,"column":8},"end":{"line":388,"column":32}},"191":{"start":{"line":390,"column":9},"end":{"line":393,"column":5}},"192":{"start":{"line":391,"column":8},"end":{"line":391,"column":26}},"193":{"start":{"line":392,"column":8},"end":{"line":392,"column":35}},"194":{"start":{"line":394,"column":4},"end":{"line":394,"column":105}},"195":{"start":{"line":395,"column":4},"end":{"line":395,"column":153}},"196":{"start":{"line":397,"column":4},"end":{"line":403,"column":5}},"197":{"start":{"line":398,"column":8},"end":{"line":402,"column":11}},"198":{"start":{"line":399,"column":12},"end":{"line":401,"column":13}},"199":{"start":{"line":400,"column":16},"end":{"line":400,"column":108}},"200":{"start":{"line":409,"column":4},"end":{"line":420,"column":5}},"201":{"start":{"line":411,"column":12},"end":{"line":411,"column":26}},"202":{"start":{"line":413,"column":12},"end":{"line":413,"column":26}},"203":{"start":{"line":415,"column":12},"end":{"line":415,"column":24}},"204":{"start":{"line":417,"column":12},"end":{"line":417,"column":25}},"205":{"start":{"line":419,"column":12},"end":{"line":419,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":30,"column":15},"end":{"line":30,"column":16}},"loc":{"start":{"line":30,"column":40},"end":{"line":54,"column":1}},"line":30},"1":{"name":"validateContinuousArgs","decl":{"start":{"line":61,"column":15},"end":{"line":61,"column":37}},"loc":{"start":{"line":61,"column":53},"end":{"line":92,"column":1}},"line":61},"2":{"name":"loadContinuousConfiguration","decl":{"start":{"line":96,"column":15},"end":{"line":96,"column":42}},"loc":{"start":{"line":96,"column":58},"end":{"line":153,"column":1}},"line":96},"3":{"name":"(anonymous_3)","decl":{"start":{"line":115,"column":17},"end":{"line":115,"column":18}},"loc":{"start":{"line":115,"column":22},"end":{"line":115,"column":30}},"line":115},"4":{"name":"(anonymous_4)","decl":{"start":{"line":116,"column":20},"end":{"line":116,"column":21}},"loc":{"start":{"line":116,"column":25},"end":{"line":116,"column":26}},"line":116},"5":{"name":"(anonymous_5)","decl":{"start":{"line":142,"column":28},"end":{"line":142,"column":29}},"loc":{"start":{"line":142,"column":40},"end":{"line":147,"column":9}},"line":142},"6":{"name":"loadDiamondInfo","decl":{"start":{"line":157,"column":15},"end":{"line":157,"column":30}},"loc":{"start":{"line":157,"column":46},"end":{"line":224,"column":1}},"line":157},"7":{"name":"setupContinuousMonitoring","decl":{"start":{"line":228,"column":15},"end":{"line":228,"column":40}},"loc":{"start":{"line":228,"column":81},"end":{"line":323,"column":1}},"line":228},"8":{"name":"(anonymous_8)","decl":{"start":{"line":244,"column":25},"end":{"line":244,"column":26}},"loc":{"start":{"line":244,"column":31},"end":{"line":252,"column":5}},"line":244},"9":{"name":"(anonymous_9)","decl":{"start":{"line":253,"column":26},"end":{"line":253,"column":27}},"loc":{"start":{"line":253,"column":32},"end":{"line":259,"column":5}},"line":253},"10":{"name":"(anonymous_10)","decl":{"start":{"line":261,"column":26},"end":{"line":261,"column":27}},"loc":{"start":{"line":261,"column":38},"end":{"line":299,"column":5}},"line":261},"11":{"name":"(anonymous_11)","decl":{"start":{"line":308,"column":35},"end":{"line":308,"column":36}},"loc":{"start":{"line":308,"column":47},"end":{"line":320,"column":5}},"line":308},"12":{"name":"(anonymous_12)","decl":{"start":{"line":322,"column":23},"end":{"line":322,"column":24}},"loc":{"start":{"line":322,"column":29},"end":{"line":322,"column":32}},"line":322},"13":{"name":"handleMonitoringResults","decl":{"start":{"line":327,"column":15},"end":{"line":327,"column":38}},"loc":{"start":{"line":327,"column":67},"end":{"line":352,"column":1}},"line":327},"14":{"name":"checkAlerts","decl":{"start":{"line":356,"column":15},"end":{"line":356,"column":26}},"loc":{"start":{"line":356,"column":45},"end":{"line":367,"column":1}},"line":356},"15":{"name":"(anonymous_15)","decl":{"start":{"line":358,"column":50},"end":{"line":358,"column":51}},"loc":{"start":{"line":358,"column":55},"end":{"line":358,"column":126}},"line":358},"16":{"name":"(anonymous_16)","decl":{"start":{"line":358,"column":78},"end":{"line":358,"column":79}},"loc":{"start":{"line":358,"column":87},"end":{"line":358,"column":125}},"line":358},"17":{"name":"(anonymous_17)","decl":{"start":{"line":361,"column":31},"end":{"line":361,"column":32}},"loc":{"start":{"line":361,"column":40},"end":{"line":363,"column":9}},"line":361},"18":{"name":"shouldAlert","decl":{"start":{"line":371,"column":9},"end":{"line":371,"column":20}},"loc":{"start":{"line":371,"column":42},"end":{"line":377,"column":1}},"line":371},"19":{"name":"displayRunSummary","decl":{"start":{"line":381,"column":9},"end":{"line":381,"column":26}},"loc":{"start":{"line":381,"column":54},"end":{"line":404,"column":1}},"line":381},"20":{"name":"(anonymous_20)","decl":{"start":{"line":398,"column":31},"end":{"line":398,"column":32}},"loc":{"start":{"line":398,"column":41},"end":{"line":402,"column":9}},"line":398},"21":{"name":"getFileExtension","decl":{"start":{"line":408,"column":9},"end":{"line":408,"column":25}},"loc":{"start":{"line":408,"column":34},"end":{"line":421,"column":1}},"line":408}},"branchMap":{"0":{"loc":{"start":{"line":48,"column":8},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":51,"column":9}},{"start":{},"end":{}}],"line":48},"1":{"loc":{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},{"start":{},"end":{}}],"line":62},"2":{"loc":{"start":{"line":66,"column":30},"end":{"line":66,"column":56}},"type":"binary-expr","locations":[{"start":{"line":66,"column":30},"end":{"line":66,"column":47}},{"start":{"line":66,"column":51},"end":{"line":66,"column":56}}],"line":66},"3":{"loc":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},{"start":{},"end":{}}],"line":67},"4":{"loc":{"start":{"line":67,"column":8},"end":{"line":67,"column":40}},"type":"binary-expr","locations":[{"start":{"line":67,"column":8},"end":{"line":67,"column":23}},{"start":{"line":67,"column":27},"end":{"line":67,"column":40}}],"line":67},"5":{"loc":{"start":{"line":71,"column":4},"end":{"line":76,"column":5}},"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":76,"column":5}},{"start":{},"end":{}}],"line":71},"6":{"loc":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},{"start":{},"end":{}}],"line":73},"7":{"loc":{"start":{"line":73,"column":12},"end":{"line":73,"column":41}},"type":"binary-expr","locations":[{"start":{"line":73,"column":12},"end":{"line":73,"column":26}},{"start":{"line":73,"column":30},"end":{"line":73,"column":41}}],"line":73},"8":{"loc":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},{"start":{},"end":{}}],"line":79},"9":{"loc":{"start":{"line":79,"column":8},"end":{"line":79,"column":85}},"type":"binary-expr","locations":[{"start":{"line":79,"column":8},"end":{"line":79,"column":31}},{"start":{"line":79,"column":35},"end":{"line":79,"column":85}}],"line":79},"10":{"loc":{"start":{"line":83,"column":4},"end":{"line":88,"column":5}},"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":88,"column":5}},{"start":{},"end":{}}],"line":83},"11":{"loc":{"start":{"line":84,"column":8},"end":{"line":87,"column":9}},"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":87,"column":9}},{"start":{},"end":{}}],"line":84},"12":{"loc":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},{"start":{},"end":{}}],"line":89},"13":{"loc":{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},{"start":{},"end":{}}],"line":97},"14":{"loc":{"start":{"line":102,"column":4},"end":{"line":110,"column":5}},"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":110,"column":5}},{"start":{},"end":{}}],"line":102},"15":{"loc":{"start":{"line":112,"column":24},"end":{"line":117,"column":12}},"type":"cond-expr","locations":[{"start":{"line":113,"column":10},"end":{"line":116,"column":33}},{"start":{"line":117,"column":10},"end":{"line":117,"column":12}}],"line":112},"16":{"loc":{"start":{"line":113,"column":10},"end":{"line":116,"column":33}},"type":"binary-expr","locations":[{"start":{"line":113,"column":10},"end":{"line":116,"column":27}},{"start":{"line":116,"column":31},"end":{"line":116,"column":33}}],"line":113},"17":{"loc":{"start":{"line":120,"column":17},"end":{"line":120,"column":37}},"type":"binary-expr","locations":[{"start":{"line":120,"column":17},"end":{"line":120,"column":31}},{"start":{"line":120,"column":35},"end":{"line":120,"column":37}}],"line":120},"18":{"loc":{"start":{"line":122,"column":31},"end":{"line":122,"column":75}},"type":"binary-expr","locations":[{"start":{"line":122,"column":31},"end":{"line":122,"column":66}},{"start":{"line":122,"column":70},"end":{"line":122,"column":75}}],"line":122},"19":{"loc":{"start":{"line":123,"column":28},"end":{"line":123,"column":65}},"type":"binary-expr","locations":[{"start":{"line":123,"column":28},"end":{"line":123,"column":60}},{"start":{"line":123,"column":64},"end":{"line":123,"column":65}}],"line":123},"20":{"loc":{"start":{"line":124,"column":23},"end":{"line":124,"column":59}},"type":"binary-expr","locations":[{"start":{"line":124,"column":23},"end":{"line":124,"column":50}},{"start":{"line":124,"column":54},"end":{"line":124,"column":59}}],"line":124},"21":{"loc":{"start":{"line":125,"column":22},"end":{"line":125,"column":57}},"type":"binary-expr","locations":[{"start":{"line":125,"column":22},"end":{"line":125,"column":48}},{"start":{"line":125,"column":52},"end":{"line":125,"column":57}}],"line":125},"22":{"loc":{"start":{"line":128,"column":20},"end":{"line":128,"column":54}},"type":"binary-expr","locations":[{"start":{"line":128,"column":20},"end":{"line":128,"column":41}},{"start":{"line":128,"column":45},"end":{"line":128,"column":54}}],"line":128},"23":{"loc":{"start":{"line":130,"column":21},"end":{"line":130,"column":44}},"type":"binary-expr","locations":[{"start":{"line":130,"column":21},"end":{"line":130,"column":35}},{"start":{"line":130,"column":39},"end":{"line":130,"column":44}}],"line":130},"24":{"loc":{"start":{"line":131,"column":29},"end":{"line":131,"column":70}},"type":"binary-expr","locations":[{"start":{"line":131,"column":29},"end":{"line":131,"column":62}},{"start":{"line":131,"column":66},"end":{"line":131,"column":70}}],"line":131},"25":{"loc":{"start":{"line":134,"column":18},"end":{"line":134,"column":60}},"type":"binary-expr","locations":[{"start":{"line":134,"column":18},"end":{"line":134,"column":40}},{"start":{"line":134,"column":44},"end":{"line":134,"column":60}}],"line":134},"26":{"loc":{"start":{"line":141,"column":4},"end":{"line":148,"column":5}},"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":148,"column":5}},{"start":{},"end":{}}],"line":141},"27":{"loc":{"start":{"line":145,"column":24},"end":{"line":145,"column":64}},"type":"binary-expr","locations":[{"start":{"line":145,"column":24},"end":{"line":145,"column":58}},{"start":{"line":145,"column":62},"end":{"line":145,"column":64}}],"line":145},"28":{"loc":{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},"type":"if","locations":[{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},{"start":{},"end":{}}],"line":149},"29":{"loc":{"start":{"line":158,"column":4},"end":{"line":160,"column":5}},"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":160,"column":5}},{"start":{},"end":{}}],"line":158},"30":{"loc":{"start":{"line":161,"column":24},"end":{"line":161,"column":66}},"type":"binary-expr","locations":[{"start":{"line":161,"column":24},"end":{"line":161,"column":46}},{"start":{"line":161,"column":50},"end":{"line":161,"column":66}}],"line":161},"31":{"loc":{"start":{"line":162,"column":27},"end":{"line":162,"column":114}},"type":"binary-expr","locations":[{"start":{"line":162,"column":27},"end":{"line":162,"column":50}},{"start":{"line":162,"column":54},"end":{"line":162,"column":114}}],"line":162},"32":{"loc":{"start":{"line":173,"column":8},"end":{"line":184,"column":9}},"type":"if","locations":[{"start":{"line":173,"column":8},"end":{"line":184,"column":9}},{"start":{},"end":{}}],"line":173},"33":{"loc":{"start":{"line":180,"column":16},"end":{"line":182,"column":17}},"type":"if","locations":[{"start":{"line":180,"column":16},"end":{"line":182,"column":17}},{"start":{},"end":{}}],"line":180},"34":{"loc":{"start":{"line":186,"column":4},"end":{"line":188,"column":5}},"type":"if","locations":[{"start":{"line":186,"column":4},"end":{"line":188,"column":5}},{"start":{},"end":{}}],"line":186},"35":{"loc":{"start":{"line":193,"column":4},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":195,"column":5}},{"start":{},"end":{}}],"line":193},"36":{"loc":{"start":{"line":193,"column":8},"end":{"line":193,"column":47}},"type":"binary-expr","locations":[{"start":{"line":193,"column":8},"end":{"line":193,"column":21}},{"start":{"line":193,"column":25},"end":{"line":193,"column":47}}],"line":193},"37":{"loc":{"start":{"line":194,"column":17},"end":{"line":194,"column":40}},"type":"binary-expr","locations":[{"start":{"line":194,"column":17},"end":{"line":194,"column":34}},{"start":{"line":194,"column":38},"end":{"line":194,"column":40}}],"line":194},"38":{"loc":{"start":{"line":202,"column":8},"end":{"line":204,"column":9}},"type":"if","locations":[{"start":{"line":202,"column":8},"end":{"line":204,"column":9}},{"start":{},"end":{}}],"line":202},"39":{"loc":{"start":{"line":208,"column":17},"end":{"line":208,"column":80}},"type":"binary-expr","locations":[{"start":{"line":208,"column":17},"end":{"line":208,"column":42}},{"start":{"line":208,"column":46},"end":{"line":208,"column":80}}],"line":208},"40":{"loc":{"start":{"line":217,"column":4},"end":{"line":219,"column":5}},"type":"if","locations":[{"start":{"line":217,"column":4},"end":{"line":219,"column":5}},{"start":{},"end":{}}],"line":217},"41":{"loc":{"start":{"line":220,"column":4},"end":{"line":222,"column":5}},"type":"if","locations":[{"start":{"line":220,"column":4},"end":{"line":222,"column":5}},{"start":{},"end":{}}],"line":220},"42":{"loc":{"start":{"line":229,"column":30},"end":{"line":229,"column":56}},"type":"binary-expr","locations":[{"start":{"line":229,"column":30},"end":{"line":229,"column":47}},{"start":{"line":229,"column":51},"end":{"line":229,"column":56}}],"line":229},"43":{"loc":{"start":{"line":230,"column":29},"end":{"line":230,"column":52}},"type":"binary-expr","locations":[{"start":{"line":230,"column":29},"end":{"line":230,"column":45}},{"start":{"line":230,"column":49},"end":{"line":230,"column":52}}],"line":230},"44":{"loc":{"start":{"line":235,"column":45},"end":{"line":235,"column":82}},"type":"cond-expr","locations":[{"start":{"line":235,"column":61},"end":{"line":235,"column":72}},{"start":{"line":235,"column":75},"end":{"line":235,"column":82}}],"line":235},"45":{"loc":{"start":{"line":245,"column":8},"end":{"line":251,"column":9}},"type":"if","locations":[{"start":{"line":245,"column":8},"end":{"line":251,"column":9}},{"start":{},"end":{}}],"line":245},"46":{"loc":{"start":{"line":254,"column":8},"end":{"line":258,"column":9}},"type":"if","locations":[{"start":{"line":254,"column":8},"end":{"line":258,"column":9}},{"start":{},"end":{}}],"line":254},"47":{"loc":{"start":{"line":262,"column":8},"end":{"line":263,"column":19}},"type":"if","locations":[{"start":{"line":262,"column":8},"end":{"line":263,"column":19}},{"start":{},"end":{}}],"line":262},"48":{"loc":{"start":{"line":270,"column":30},"end":{"line":270,"column":110}},"type":"cond-expr","locations":[{"start":{"line":270,"column":71},"end":{"line":270,"column":98}},{"start":{"line":270,"column":101},"end":{"line":270,"column":110}}],"line":270},"49":{"loc":{"start":{"line":284,"column":12},"end":{"line":286,"column":13}},"type":"if","locations":[{"start":{"line":284,"column":12},"end":{"line":286,"column":13}},{"start":{},"end":{}}],"line":284},"50":{"loc":{"start":{"line":288,"column":12},"end":{"line":297,"column":13}},"type":"if","locations":[{"start":{"line":288,"column":12},"end":{"line":297,"column":13}},{"start":{},"end":{}}],"line":288},"51":{"loc":{"start":{"line":289,"column":16},"end":{"line":296,"column":17}},"type":"if","locations":[{"start":{"line":289,"column":16},"end":{"line":296,"column":17}},{"start":{"line":293,"column":21},"end":{"line":296,"column":17}}],"line":289},"52":{"loc":{"start":{"line":303,"column":4},"end":{"line":306,"column":5}},"type":"if","locations":[{"start":{"line":303,"column":4},"end":{"line":306,"column":5}},{"start":{},"end":{}}],"line":303},"53":{"loc":{"start":{"line":309,"column":8},"end":{"line":312,"column":9}},"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":312,"column":9}},{"start":{},"end":{}}],"line":309},"54":{"loc":{"start":{"line":313,"column":8},"end":{"line":318,"column":9}},"type":"if","locations":[{"start":{"line":313,"column":8},"end":{"line":318,"column":9}},{"start":{},"end":{}}],"line":313},"55":{"loc":{"start":{"line":313,"column":12},"end":{"line":313,"column":46}},"type":"binary-expr","locations":[{"start":{"line":313,"column":12},"end":{"line":313,"column":23}},{"start":{"line":313,"column":27},"end":{"line":313,"column":46}}],"line":313},"56":{"loc":{"start":{"line":329,"column":4},"end":{"line":349,"column":5}},"type":"if","locations":[{"start":{"line":329,"column":4},"end":{"line":349,"column":5}},{"start":{},"end":{}}],"line":329},"57":{"loc":{"start":{"line":329,"column":8},"end":{"line":329,"column":65}},"type":"binary-expr","locations":[{"start":{"line":329,"column":8},"end":{"line":329,"column":26}},{"start":{"line":329,"column":30},"end":{"line":329,"column":65}}],"line":329},"58":{"loc":{"start":{"line":342,"column":12},"end":{"line":344,"column":13}},"type":"if","locations":[{"start":{"line":342,"column":12},"end":{"line":344,"column":13}},{"start":{},"end":{}}],"line":342},"59":{"loc":{"start":{"line":357,"column":22},"end":{"line":357,"column":55}},"type":"binary-expr","locations":[{"start":{"line":357,"column":22},"end":{"line":357,"column":45}},{"start":{"line":357,"column":49},"end":{"line":357,"column":55}}],"line":357},"60":{"loc":{"start":{"line":359,"column":4},"end":{"line":366,"column":5}},"type":"if","locations":[{"start":{"line":359,"column":4},"end":{"line":366,"column":5}},{"start":{},"end":{}}],"line":359},"61":{"loc":{"start":{"line":374,"column":26},"end":{"line":374,"column":69}},"type":"binary-expr","locations":[{"start":{"line":374,"column":26},"end":{"line":374,"column":64}},{"start":{"line":374,"column":68},"end":{"line":374,"column":69}}],"line":374},"62":{"loc":{"start":{"line":375,"column":27},"end":{"line":375,"column":72}},"type":"binary-expr","locations":[{"start":{"line":375,"column":27},"end":{"line":375,"column":67}},{"start":{"line":375,"column":71},"end":{"line":375,"column":72}}],"line":375},"63":{"loc":{"start":{"line":386,"column":4},"end":{"line":393,"column":5}},"type":"if","locations":[{"start":{"line":386,"column":4},"end":{"line":393,"column":5}},{"start":{"line":390,"column":9},"end":{"line":393,"column":5}}],"line":386},"64":{"loc":{"start":{"line":390,"column":9},"end":{"line":393,"column":5}},"type":"if","locations":[{"start":{"line":390,"column":9},"end":{"line":393,"column":5}},{"start":{},"end":{}}],"line":390},"65":{"loc":{"start":{"line":397,"column":4},"end":{"line":403,"column":5}},"type":"if","locations":[{"start":{"line":397,"column":4},"end":{"line":403,"column":5}},{"start":{},"end":{}}],"line":397},"66":{"loc":{"start":{"line":397,"column":8},"end":{"line":397,"column":44}},"type":"binary-expr","locations":[{"start":{"line":397,"column":8},"end":{"line":397,"column":15}},{"start":{"line":397,"column":19},"end":{"line":397,"column":44}}],"line":397},"67":{"loc":{"start":{"line":399,"column":12},"end":{"line":401,"column":13}},"type":"if","locations":[{"start":{"line":399,"column":12},"end":{"line":401,"column":13}},{"start":{},"end":{}}],"line":399},"68":{"loc":{"start":{"line":409,"column":4},"end":{"line":420,"column":5}},"type":"switch","locations":[{"start":{"line":410,"column":8},"end":{"line":411,"column":26}},{"start":{"line":412,"column":8},"end":{"line":413,"column":26}},{"start":{"line":414,"column":8},"end":{"line":415,"column":24}},{"start":{"line":416,"column":8},"end":{"line":417,"column":25}},{"start":{"line":418,"column":8},"end":{"line":419,"column":25}}],"line":409}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0,0,0,0]},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/tasks/monitor-continuous.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/tasks/monitor-continuous.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Continuous diamond monitoring task for Hardhat\n *\n * Provides dedicated continuous monitoring with enhanced scheduling, alerting, and reporting\n */\n\nimport { task } from 'hardhat/config';\nimport { HardhatRuntimeEnvironment } from 'hardhat/types';\nimport * as chalk from 'chalk';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nimport {\n  DiamondInfo,\n  MonitoringConfig,\n  ReportFormat,\n  MonitoringReport,\n  MonitoringStatus,\n} from '../core/types';\nimport { DiamondMonitoringSystem } from '../core/DiamondMonitoringSystem';\nimport { ReportGenerator } from '../reports/ReportGenerator';\nimport { ReportOptions } from '../reports/types';\n\n/**\n * Extended task arguments for continuous monitoring\n */\ninterface ContinuousMonitoringArgs {\n  diamondName: string;\n  targetNetwork?: string;\n  modules?: string;\n  interval?: string;\n  outputFormat?: string;\n  outputDir?: string;\n  configPath?: string;\n  deploymentPath?: string;\n  debug?: boolean;\n  failOnError?: boolean;\n  alertThreshold?: string;\n  maxRuns?: string;\n  logRotation?: boolean;\n  autoRestart?: boolean;\n}\n\ntask('monitor-continuous', 'Run continuous diamond monitoring with scheduling and alerting')\n  .addPositionalParam('diamondName', 'Name of the diamond contract to monitor')\n  .addOptionalParam('targetNetwork', 'Target network (overrides --network flag)')\n  .addOptionalParam('modules', 'Comma-separated list of modules to run', 'all')\n  .addOptionalParam('interval', 'Monitoring interval in seconds', '300')\n  .addOptionalParam('outputFormat', 'Report format (console|json|html|markdown|csv)', 'console')\n  .addOptionalParam('outputDir', 'Output directory for reports (auto-generated filenames)')\n  .addOptionalParam('configPath', 'Path to custom configuration file')\n  .addOptionalParam('deploymentPath', 'Path to diamond deployment files')\n  .addOptionalParam('alertThreshold', 'Alert threshold (low|medium|high|critical)', 'high')\n  .addOptionalParam('maxRuns', 'Maximum number of runs (0 = infinite)', '0')\n  .addFlag('debug', 'Enable verbose logging and detailed output')\n  .addFlag('failOnError', 'Exit with error code if monitoring fails')\n  .addFlag('logRotation', 'Enable log rotation for output files')\n  .addFlag('autoRestart', 'Automatically restart on critical failures')\n  .setAction(async (taskArgs: ContinuousMonitoringArgs, hre: HardhatRuntimeEnvironment) => {\n    const startTime = Date.now();\n\n    try {\n      // Print header\n      console.log(chalk.blue.bold('\\n👁️  Continuous Diamond Monitoring System'));\n      console.log(chalk.blue('═'.repeat(45)));\n\n      // Validate and setup monitoring\n      await validateContinuousArgs(taskArgs, hre);\n\n      const config = await loadContinuousConfiguration(taskArgs, hre);\n      const diamond = await loadDiamondInfo(taskArgs, hre);\n\n      // Initialize monitoring system\n      const monitoringSystem = new DiamondMonitoringSystem();\n\n      // Setup continuous monitoring\n      await setupContinuousMonitoring(monitoringSystem, diamond, config, taskArgs, hre);\n    } catch (error) {\n      console.error(chalk.red.bold('\\n❌ Continuous monitoring setup failed:'));\n      console.error(chalk.red(`   ${(error as Error).message}\\n`));\n\n      if (taskArgs.debug) {\n        console.error(chalk.gray('Stack trace:'));\n        console.error(chalk.gray((error as Error).stack));\n      }\n\n      process.exit(1);\n    }\n  });\n\n// ========================================\n// Implementation Functions\n// ========================================\n\n/**\n * Validate continuous monitoring arguments\n */\nasync function validateContinuousArgs(\n  taskArgs: ContinuousMonitoringArgs,\n  hre: HardhatRuntimeEnvironment\n): Promise<void> {\n  if (taskArgs.debug) {\n    console.log(chalk.blue('📋 Validating continuous monitoring arguments...'));\n  }\n\n  // Validate interval\n  const interval = parseInt(taskArgs.interval || '300');\n  if (isNaN(interval) || interval < 30) {\n    throw new Error('Monitoring interval must be at least 30 seconds');\n  }\n\n  // Validate max runs\n  if (taskArgs.maxRuns) {\n    const maxRuns = parseInt(taskArgs.maxRuns);\n    if (isNaN(maxRuns) || maxRuns < 0) {\n      throw new Error('Max runs must be a non-negative number');\n    }\n  }\n\n  // Validate alert threshold\n  const validThresholds = ['low', 'medium', 'high', 'critical'];\n  if (taskArgs.alertThreshold && !validThresholds.includes(taskArgs.alertThreshold)) {\n    throw new Error(\n      `Invalid alert threshold '${taskArgs.alertThreshold}'. Valid options: ${validThresholds.join(', ')}`\n    );\n  }\n\n  // Validate output directory\n  if (taskArgs.outputDir) {\n    if (!fs.existsSync(taskArgs.outputDir)) {\n      fs.mkdirSync(taskArgs.outputDir, { recursive: true });\n      console.log(chalk.green(`📁 Created output directory: ${taskArgs.outputDir}`));\n    }\n  }\n\n  if (taskArgs.debug) {\n    console.log(chalk.green('✅ Arguments validated successfully'));\n  }\n}\n\n/**\n * Load continuous monitoring configuration\n */\nasync function loadContinuousConfiguration(\n  taskArgs: ContinuousMonitoringArgs,\n  hre: HardhatRuntimeEnvironment\n): Promise<MonitoringConfig> {\n  if (taskArgs.debug) {\n    console.log(chalk.blue('⚙️  Loading continuous monitoring configuration...'));\n  }\n\n  let config: Partial<MonitoringConfig> = {};\n\n  // Load from configuration file if provided\n  if (taskArgs.configPath) {\n    try {\n      const configContent = fs.readFileSync(taskArgs.configPath, 'utf8');\n      config = JSON.parse(configContent);\n    } catch (error) {\n      throw new Error(\n        `Failed to load configuration from ${taskArgs.configPath}: ${(error as Error).message}`\n      );\n    }\n  }\n\n  // Parse modules list\n  const modulesList =\n    taskArgs.modules !== 'all'\n      ? taskArgs.modules\n          ?.split(',')\n          .map(m => m.trim())\n          .filter(m => m) || []\n      : [];\n\n  // Create monitoring configuration\n  const monitoringConfig: MonitoringConfig = {\n    modules: config.modules || {},\n    execution: {\n      parallelExecution: config.execution?.parallelExecution || false,\n      maxConcurrency: config.execution?.maxConcurrency || 3,\n      timeoutMs: config.execution?.timeoutMs || 60000, // Increased for continuous\n      failFast: config.execution?.failFast || false,\n    },\n    reporting: {\n      format: (taskArgs.outputFormat as ReportFormat) || 'console',\n      outputPath: taskArgs.outputDir,\n      verbose: taskArgs.debug || false,\n      includeMetadata: config.reporting?.includeMetadata || true,\n    },\n    network: {\n      name: taskArgs.targetNetwork || hre.network.name,\n      chainId: 0, // Will be set when loading diamond info\n      rpcUrl: '', // Will be set when loading diamond info\n    },\n    diamond: {} as DiamondInfo, // Will be set when loading diamond info\n  };\n\n  // Configure specific modules if provided\n  if (modulesList.length > 0) {\n    modulesList.forEach(moduleId => {\n      monitoringConfig.modules[moduleId] = {\n        enabled: true,\n        config: config.modules?.[moduleId]?.config || {},\n      };\n    });\n  }\n\n  if (taskArgs.debug) {\n    console.log(chalk.green('✅ Configuration loaded for continuous monitoring'));\n  }\n\n  return monitoringConfig;\n}\n\n/**\n * Load diamond information for continuous monitoring\n */\nasync function loadDiamondInfo(\n  taskArgs: ContinuousMonitoringArgs,\n  hre: HardhatRuntimeEnvironment\n): Promise<DiamondInfo> {\n  if (taskArgs.debug) {\n    console.log(chalk.blue('💎 Loading diamond information...'));\n  }\n\n  const networkName = taskArgs.targetNetwork || hre.network.name;\n  const deploymentPath =\n    taskArgs.deploymentPath || path.join(hre.config.paths.root, 'deployments', networkName);\n\n  // Try to find diamond deployment file\n  const possiblePaths = [\n    path.join(deploymentPath, `${taskArgs.diamondName}.json`),\n    path.join(deploymentPath, `${taskArgs.diamondName}Diamond.json`),\n    path.join(deploymentPath, 'Diamond.json'),\n    path.join(\n      hre.config.paths.root,\n      'diamond-deployments',\n      networkName,\n      `${taskArgs.diamondName}.json`\n    ),\n  ];\n\n  let diamondDeployment: any = null;\n  let deploymentFilePath: string = '';\n\n  for (const filePath of possiblePaths) {\n    if (fs.existsSync(filePath)) {\n      try {\n        diamondDeployment = JSON.parse(fs.readFileSync(filePath, 'utf8'));\n        deploymentFilePath = filePath;\n        break;\n      } catch (error) {\n        if (taskArgs.debug) {\n          console.log(chalk.yellow(`⚠️  Failed to parse ${filePath}: ${(error as Error).message}`));\n        }\n      }\n    }\n  }\n\n  if (!diamondDeployment) {\n    throw new Error(\n      `Diamond deployment not found for '${taskArgs.diamondName}' on network '${networkName}'`\n    );\n  }\n\n  // Get network configuration\n  const networkConfig = hre.config.networks[networkName];\n  let rpcUrl = '';\n  let chainId = 0;\n\n  if (networkConfig && 'url' in networkConfig) {\n    rpcUrl = networkConfig.url || '';\n  }\n\n  try {\n    const provider = (hre as any).ethers.provider;\n    const network = await provider.getNetwork();\n    chainId = Number(network.chainId);\n  } catch (error) {\n    if (taskArgs.debug) {\n      console.log(chalk.yellow(`⚠️  Could not get chain ID: ${(error as Error).message}`));\n    }\n  }\n\n  const diamond: DiamondInfo = {\n    name: taskArgs.diamondName,\n    address: diamondDeployment.address || diamondDeployment.diamond?.address,\n    configPath: deploymentFilePath,\n    deploymentBlock: diamondDeployment.receipt?.blockNumber,\n    network: {\n      name: networkName,\n      chainId,\n      rpcUrl,\n    },\n  };\n\n  if (!diamond.address) {\n    throw new Error(`Diamond address not found in deployment file: ${deploymentFilePath}`);\n  }\n\n  if (taskArgs.debug) {\n    console.log(chalk.green(`✅ Diamond loaded: ${diamond.name} at ${diamond.address}`));\n  }\n\n  return diamond;\n}\n\n/**\n * Setup and run continuous monitoring\n */\nasync function setupContinuousMonitoring(\n  system: DiamondMonitoringSystem,\n  diamond: DiamondInfo,\n  config: MonitoringConfig,\n  taskArgs: ContinuousMonitoringArgs,\n  hre: HardhatRuntimeEnvironment\n): Promise<void> {\n  const interval = parseInt(taskArgs.interval || '300') * 1000;\n  const maxRuns = parseInt(taskArgs.maxRuns || '0');\n\n  console.log(chalk.yellow.bold('\\n👁️  STARTING CONTINUOUS MONITORING'));\n  console.log(chalk.yellow(`   Diamond: ${diamond.name} (${diamond.address})`));\n  console.log(\n    chalk.yellow(`   Network: ${diamond.network.name} (Chain ID: ${diamond.network.chainId})`)\n  );\n  console.log(chalk.yellow(`   Interval: ${interval / 1000} seconds`));\n  console.log(chalk.yellow(`   Max Runs: ${maxRuns === 0 ? 'unlimited' : maxRuns}`));\n  console.log(chalk.yellow(`   Alert Threshold: ${taskArgs.alertThreshold}`));\n  console.log(chalk.yellow('   Press Ctrl+C to stop'));\n  console.log(chalk.yellow('═'.repeat(60)));\n\n  let runCount = 0;\n  let consecutiveFailures = 0;\n  const maxConsecutiveFailures = 3;\n\n  // Setup signal handlers for graceful shutdown\n  let isShuttingDown = false;\n  process.on('SIGINT', () => {\n    if (!isShuttingDown) {\n      isShuttingDown = true;\n      console.log(chalk.yellow('\\n\\n👋 Graceful shutdown initiated...'));\n      console.log(chalk.blue(`📊 Total monitoring runs completed: ${runCount}`));\n      console.log(chalk.blue('💾 Saving final state...'));\n      process.exit(0);\n    }\n  });\n\n  process.on('SIGTERM', () => {\n    if (!isShuttingDown) {\n      isShuttingDown = true;\n      console.log(chalk.yellow('\\n\\n👋 Graceful shutdown initiated...'));\n      process.exit(0);\n    }\n  });\n\n  // Main monitoring loop\n  const runMonitoring = async (): Promise<void> => {\n    if (isShuttingDown) return;\n\n    runCount++;\n    const timestamp = new Date().toISOString();\n\n    console.log(chalk.blue(`\\n[${timestamp}] Monitoring run #${runCount}`));\n    console.log(chalk.blue('─'.repeat(60)));\n\n    try {\n      const provider = (hre as any).ethers.provider;\n      const moduleIds =\n        Object.keys(config.modules).length > 0 ? Object.keys(config.modules) : undefined;\n\n      // Execute monitoring\n      const report = await system.runMonitoring(diamond, provider, config, moduleIds);\n\n      // Handle results\n      await handleMonitoringResults(report, taskArgs, runCount);\n\n      // Check for alerts\n      await checkAlerts(report, taskArgs);\n\n      // Reset consecutive failures on success\n      consecutiveFailures = 0;\n\n      console.log(chalk.green(`✅ Run #${runCount} completed successfully`));\n    } catch (error) {\n      consecutiveFailures++;\n\n      console.error(chalk.red(`❌ Run #${runCount} failed: ${(error as Error).message}`));\n\n      if (taskArgs.debug) {\n        console.error(chalk.gray((error as Error).stack));\n      }\n\n      // Check if we should restart or exit\n      if (consecutiveFailures >= maxConsecutiveFailures) {\n        if (taskArgs.autoRestart) {\n          console.log(\n            chalk.yellow(\n              `🔄 Auto-restarting after ${maxConsecutiveFailures} consecutive failures...`\n            )\n          );\n          consecutiveFailures = 0;\n        } else {\n          console.error(\n            chalk.red.bold(`💥 Stopping after ${maxConsecutiveFailures} consecutive failures`)\n          );\n          process.exit(1);\n        }\n      }\n    }\n  };\n\n  // Run initial monitoring\n  await runMonitoring();\n\n  // Check if we should exit after first run\n  if (maxRuns === 1) {\n    console.log(chalk.blue('\\n✅ Single run completed'));\n    return;\n  }\n\n  // Setup interval for continuous monitoring\n  const intervalId = setInterval(async () => {\n    if (isShuttingDown) {\n      clearInterval(intervalId);\n      return;\n    }\n\n    if (maxRuns > 0 && runCount >= maxRuns) {\n      clearInterval(intervalId);\n      console.log(chalk.blue(`\\n✅ Completed maximum ${maxRuns} runs`));\n      process.exit(0);\n      return;\n    }\n\n    await runMonitoring();\n  }, interval);\n\n  // Keep process alive\n  return new Promise(() => {});\n}\n\n/**\n * Handle monitoring results\n */\nasync function handleMonitoringResults(\n  report: MonitoringReport,\n  taskArgs: ContinuousMonitoringArgs,\n  runCount: number\n): Promise<void> {\n  // Generate timestamped filename if output directory is specified\n  if (taskArgs.outputDir && taskArgs.outputFormat !== 'console') {\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    const filename = `monitoring-${taskArgs.diamondName}-${timestamp}-run${runCount}.${getFileExtension(taskArgs.outputFormat)}`;\n    const outputPath = path.join(taskArgs.outputDir, filename);\n\n    try {\n      const format = taskArgs.outputFormat as ReportFormat;\n      const options: ReportOptions = {\n        includeMetadata: true,\n        includeDetails: taskArgs.debug,\n        colorOutput: false, // Disable colors for file output\n        includeRecommendations: true,\n      };\n\n      await ReportGenerator.generateReport(report, format, outputPath, options);\n\n      if (taskArgs.debug) {\n        console.log(chalk.green(`📄 Report saved: ${outputPath}`));\n      }\n    } catch (error) {\n      console.error(chalk.red(`❌ Failed to save report: ${(error as Error).message}`));\n    }\n  }\n\n  // Display summary to console\n  displayRunSummary(report, runCount, taskArgs.debug);\n}\n\n/**\n * Check for alerts based on threshold\n */\nasync function checkAlerts(\n  report: MonitoringReport,\n  taskArgs: ContinuousMonitoringArgs\n): Promise<void> {\n  const threshold = taskArgs.alertThreshold || 'high';\n  const criticalIssues = report.modules.flatMap(m =>\n    m.result.issues.filter(issue => shouldAlert(issue.severity, threshold))\n  );\n\n  if (criticalIssues.length > 0) {\n    console.log(chalk.red.bold(`\\n🚨 ALERT: ${criticalIssues.length} critical issue(s) detected!`));\n    criticalIssues.forEach(issue => {\n      console.log(chalk.red(`   • ${issue.title} (${issue.severity})`));\n    });\n\n    // Here you could integrate with alerting systems (email, Slack, PagerDuty, etc.)\n    // await sendAlert(criticalIssues, taskArgs);\n  }\n}\n\n/**\n * Check if issue severity should trigger alert\n */\nfunction shouldAlert(severity: string, threshold: string): boolean {\n  const severityLevels = { info: 0, warning: 1, error: 2, critical: 3 };\n  const thresholdLevels = { low: 0, medium: 1, high: 2, critical: 3 };\n\n  const severityLevel = severityLevels[severity.toLowerCase() as keyof typeof severityLevels] ?? 0;\n  const thresholdLevel =\n    thresholdLevels[threshold.toLowerCase() as keyof typeof thresholdLevels] ?? 2;\n\n  return severityLevel >= thresholdLevel;\n}\n\n/**\n * Display run summary\n */\nfunction displayRunSummary(report: MonitoringReport, runCount: number, verbose?: boolean): void {\n  const { summary } = report;\n\n  // Status indicator\n  let statusIcon = '✅';\n  let statusColor = chalk.green;\n\n  if (summary.failed > 0) {\n    statusIcon = '❌';\n    statusColor = chalk.red;\n  } else if (summary.warnings > 0) {\n    statusIcon = '⚠️';\n    statusColor = chalk.yellow;\n  }\n\n  console.log(\n    statusColor(`${statusIcon} Run #${runCount}: ${summary.status} (${report.duration}ms)`)\n  );\n  console.log(\n    chalk.blue(\n      `   Checks: ${summary.totalChecks} | Passed: ${summary.passed} | Failed: ${summary.failed} | Warnings: ${summary.warnings}`\n    )\n  );\n\n  // Show module details in verbose mode\n  if (verbose && report.modules.length > 0) {\n    report.modules.forEach(module => {\n      if (module.result.issues.length > 0) {\n        console.log(chalk.blue(`   ${module.moduleName}: ${module.result.issues.length} issue(s)`));\n      }\n    });\n  }\n}\n\n/**\n * Get file extension for report format\n */\nfunction getFileExtension(format?: string): string {\n  switch (format) {\n    case 'json':\n      return 'json';\n    case 'html':\n      return 'html';\n    case 'markdown':\n      return 'md';\n    case 'csv':\n      return 'csv';\n    default:\n      return 'txt';\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fef8a91637a30a41fe7fd0af798f75b7da94aa6d","contentHash":"7d38e2a3150d11a70a9fcea4ad9dcd18e00b838d67be00b18009b9f95b5914a1"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/type-extensions.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/type-extensions.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/type-extensions.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/type-extensions.ts"],"names":[],"mappings":";AAAA;;GAEG;;AAEH,gCAA8B;AAC9B,iCAA+B","sourcesContent":["/**\n * Type extensions for Hardhat Diamond Monitor Plugin\n */\n\nimport 'hardhat/types/config';\nimport 'hardhat/types/runtime';\nimport {\n  MonitoringReport,\n  MonitoringModule,\n  MonitoringStatus,\n  MonitoringIssue,\n  SeverityLevel,\n  DiamondInfo,\n  NetworkInfo,\n  ModuleResult,\n} from './core/types';\n\n/**\n * Diamond monitoring configuration interface\n */\nexport interface DiamondMonitorConfig {\n  /** Default modules to run if none specified */\n  defaultModules: string[];\n\n  /** Output directory for monitoring reports */\n  outputPath: string;\n\n  /** Networks where monitoring is enabled */\n  enabledNetworks?: string[];\n\n  /** Module-specific configuration */\n  moduleConfig?: Record<string, any>;\n}\n\n/**\n * Diamond monitoring API interface\n */\nexport interface DiamondMonitorAPI {\n  /**\n   * Monitor a diamond contract\n   */\n  monitorDiamond(diamondName: string, network: string, options?: any): Promise<MonitoringReport>;\n\n  /**\n   * Create a new monitoring system instance\n   */\n  createMonitoringSystem(): any; // Using any to avoid circular dependency\n\n  /**\n   * List available monitoring modules\n   */\n  listModules(): MonitoringModule[];\n}\n\n// Extend Hardhat configuration types\ndeclare module 'hardhat/types/config' {\n  export interface HardhatUserConfig {\n    diamondMonitor?: DiamondMonitorConfig;\n  }\n\n  export interface HardhatConfig {\n    diamondMonitor: DiamondMonitorConfig;\n  }\n}\n\n// Extend Hardhat runtime environment types\ndeclare module 'hardhat/types/runtime' {\n  export interface HardhatRuntimeEnvironment {\n    diamondMonitor: DiamondMonitorAPI;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7814dc8ef99e6c98bead25f647d18cde54fda035","contentHash":"d2fda036d373776a9be6d3ffa5fe6b3edd56fe05715e293c5d85996e835cf19a"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/index.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":164}},"2":{"start":{"line":7,"column":31},"end":{"line":7,"column":66}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":157}},"4":{"start":{"line":8,"column":96},"end":{"line":8,"column":151}},"5":{"start":{"line":9,"column":31},"end":{"line":9,"column":66}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":157}},"7":{"start":{"line":10,"column":96},"end":{"line":10,"column":151}},"8":{"start":{"line":11,"column":28},"end":{"line":11,"column":60}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":148}},"10":{"start":{"line":12,"column":93},"end":{"line":12,"column":142}},"11":{"start":{"line":13,"column":26},"end":{"line":13,"column":56}},"12":{"start":{"line":14,"column":0},"end":{"line":14,"column":142}},"13":{"start":{"line":14,"column":91},"end":{"line":14,"column":136}},"14":{"start":{"line":15,"column":31},"end":{"line":15,"column":66}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":157}},"16":{"start":{"line":16,"column":96},"end":{"line":16,"column":151}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":82},"end":{"line":8,"column":83}},"loc":{"start":{"line":8,"column":94},"end":{"line":8,"column":153}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":82},"end":{"line":10,"column":83}},"loc":{"start":{"line":10,"column":94},"end":{"line":10,"column":153}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":79},"end":{"line":12,"column":80}},"loc":{"start":{"line":12,"column":91},"end":{"line":12,"column":144}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":14,"column":77},"end":{"line":14,"column":78}},"loc":{"start":{"line":14,"column":89},"end":{"line":14,"column":138}},"line":14},"4":{"name":"(anonymous_4)","decl":{"start":{"line":16,"column":82},"end":{"line":16,"column":83}},"loc":{"start":{"line":16,"column":94},"end":{"line":16,"column":153}},"line":16}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":3,"5":1,"6":1,"7":3,"8":1,"9":1,"10":3,"11":1,"12":1,"13":3,"14":1,"15":1,"16":3},"f":{"0":3,"1":3,"2":3,"3":3,"4":3},"b":{},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/index.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/index.ts"],"names":[],"mappings":";AAAA;;GAEG;;;AAEH,mEAAkE;AAAzD,gIAAA,sBAAsB,OAAA;AAC/B,mEAAkE;AAAzD,gIAAA,sBAAsB,OAAA;AAC/B,6DAA4D;AAAnD,0HAAA,mBAAmB,OAAA;AAC5B,yDAAwD;AAA/C,sHAAA,iBAAiB,OAAA;AAC1B,mEAAkE;AAAzD,gIAAA,sBAAsB,OAAA","sourcesContent":["/**\n * Export all monitoring modules\n */\n\nexport { FunctionSelectorModule } from './FunctionSelectorModule';\nexport { DiamondStructureModule } from './DiamondStructureModule';\nexport { AccessControlModule } from './AccessControlModule';\nexport { TokenSupplyModule } from './TokenSupplyModule';\nexport { ERC165ComplianceModule } from './ERC165ComplianceModule';\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"49e238557fefc0656ea61cc455c99e30e4c36732","contentHash":"856432ae3318efec2d55733bcb3fce08a350eb75f3af5bdabcfe42ea0adcbbba"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/FunctionSelectorModule.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/FunctionSelectorModule.ts","statementMap":{"0":{"start":{"line":8,"column":0},"end":{"line":8,"column":62}},"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"2":{"start":{"line":10,"column":16},"end":{"line":10,"column":32}},"3":{"start":{"line":11,"column":17},"end":{"line":11,"column":34}},"4":{"start":{"line":12,"column":13},"end":{"line":12,"column":26}},"5":{"start":{"line":13,"column":13},"end":{"line":13,"column":50}},"6":{"start":{"line":14,"column":16},"end":{"line":14,"column":40}},"7":{"start":{"line":23,"column":8},"end":{"line":23,"column":39}},"8":{"start":{"line":24,"column":8},"end":{"line":24,"column":51}},"9":{"start":{"line":25,"column":8},"end":{"line":25,"column":158}},"10":{"start":{"line":26,"column":8},"end":{"line":26,"column":31}},"11":{"start":{"line":27,"column":8},"end":{"line":27,"column":37}},"12":{"start":{"line":29,"column":8},"end":{"line":31,"column":10}},"13":{"start":{"line":37,"column":8},"end":{"line":97,"column":10}},"14":{"start":{"line":103,"column":23},"end":{"line":103,"column":25}},"15":{"start":{"line":104,"column":25},"end":{"line":104,"column":27}},"16":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"17":{"start":{"line":106,"column":12},"end":{"line":106,"column":56}},"18":{"start":{"line":108,"column":8},"end":{"line":110,"column":9}},"19":{"start":{"line":109,"column":12},"end":{"line":109,"column":71}},"20":{"start":{"line":111,"column":8},"end":{"line":114,"column":9}},"21":{"start":{"line":113,"column":12},"end":{"line":113,"column":65}},"22":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"23":{"start":{"line":116,"column":12},"end":{"line":116,"column":58}},"24":{"start":{"line":118,"column":8},"end":{"line":120,"column":9}},"25":{"start":{"line":119,"column":12},"end":{"line":119,"column":70}},"26":{"start":{"line":121,"column":8},"end":{"line":124,"column":9}},"27":{"start":{"line":123,"column":12},"end":{"line":123,"column":70}},"28":{"start":{"line":125,"column":8},"end":{"line":127,"column":9}},"29":{"start":{"line":126,"column":12},"end":{"line":126,"column":61}},"30":{"start":{"line":128,"column":8},"end":{"line":131,"column":9}},"31":{"start":{"line":130,"column":12},"end":{"line":130,"column":73}},"32":{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},"33":{"start":{"line":133,"column":12},"end":{"line":133,"column":63}},"34":{"start":{"line":135,"column":8},"end":{"line":139,"column":10}},"35":{"start":{"line":145,"column":8},"end":{"line":145,"column":20}},"36":{"start":{"line":151,"column":26},"end":{"line":151,"column":36}},"37":{"start":{"line":152,"column":23},"end":{"line":152,"column":25}},"38":{"start":{"line":153,"column":29},"end":{"line":153,"column":58}},"39":{"start":{"line":154,"column":8},"end":{"line":154,"column":95}},"40":{"start":{"line":155,"column":8},"end":{"line":250,"column":9}},"41":{"start":{"line":157,"column":12},"end":{"line":157,"column":104}},"42":{"start":{"line":158,"column":38},"end":{"line":158,"column":79}},"43":{"start":{"line":159,"column":12},"end":{"line":161,"column":13}},"44":{"start":{"line":160,"column":16},"end":{"line":160,"column":308}},"45":{"start":{"line":163,"column":12},"end":{"line":163,"column":93}},"46":{"start":{"line":164,"column":35},"end":{"line":164,"column":37}},"47":{"start":{"line":165,"column":37},"end":{"line":165,"column":42}},"48":{"start":{"line":166,"column":12},"end":{"line":177,"column":13}},"49":{"start":{"line":167,"column":16},"end":{"line":167,"column":77}},"50":{"start":{"line":170,"column":16},"end":{"line":170,"column":42}},"51":{"start":{"line":171,"column":16},"end":{"line":171,"column":88}},"52":{"start":{"line":172,"column":16},"end":{"line":176,"column":20}},"53":{"start":{"line":178,"column":12},"end":{"line":180,"column":13}},"54":{"start":{"line":179,"column":16},"end":{"line":179,"column":258}},"55":{"start":{"line":181,"column":12},"end":{"line":181,"column":136}},"56":{"start":{"line":183,"column":12},"end":{"line":195,"column":13}},"57":{"start":{"line":184,"column":16},"end":{"line":184,"column":98}},"58":{"start":{"line":185,"column":41},"end":{"line":185,"column":119}},"59":{"start":{"line":186,"column":16},"end":{"line":186,"column":49}},"60":{"start":{"line":188,"column":17},"end":{"line":195,"column":13}},"61":{"start":{"line":190,"column":16},"end":{"line":190,"column":114}},"62":{"start":{"line":191,"column":16},"end":{"line":194,"column":20}},"63":{"start":{"line":193,"column":75},"end":{"line":193,"column":86}},"64":{"start":{"line":197,"column":12},"end":{"line":201,"column":13}},"65":{"start":{"line":198,"column":16},"end":{"line":198,"column":81}},"66":{"start":{"line":199,"column":40},"end":{"line":199,"column":103}},"67":{"start":{"line":200,"column":16},"end":{"line":200,"column":48}},"68":{"start":{"line":203,"column":12},"end":{"line":209,"column":13}},"69":{"start":{"line":206,"column":16},"end":{"line":206,"column":84}},"70":{"start":{"line":207,"column":37},"end":{"line":207,"column":100}},"71":{"start":{"line":208,"column":16},"end":{"line":208,"column":45}},"72":{"start":{"line":211,"column":12},"end":{"line":217,"column":13}},"73":{"start":{"line":214,"column":16},"end":{"line":214,"column":84}},"74":{"start":{"line":215,"column":39},"end":{"line":215,"column":90}},"75":{"start":{"line":216,"column":16},"end":{"line":216,"column":47}},"76":{"start":{"line":218,"column":35},"end":{"line":218,"column":107}},"77":{"start":{"line":218,"column":54},"end":{"line":218,"column":99}},"78":{"start":{"line":219,"column":27},"end":{"line":223,"column":51}},"79":{"start":{"line":224,"column":12},"end":{"line":224,"column":105}},"80":{"start":{"line":225,"column":12},"end":{"line":237,"column":14}},"81":{"start":{"line":234,"column":54},"end":{"line":234,"column":98}},"82":{"start":{"line":235,"column":51},"end":{"line":235,"column":92}},"83":{"start":{"line":240,"column":12},"end":{"line":240,"column":98}},"84":{"start":{"line":241,"column":12},"end":{"line":241,"column":255}},"85":{"start":{"line":242,"column":12},"end":{"line":249,"column":14}},"86":{"start":{"line":256,"column":8},"end":{"line":256,"column":53}},"87":{"start":{"line":262,"column":8},"end":{"line":264,"column":9}},"88":{"start":{"line":263,"column":12},"end":{"line":263,"column":53}},"89":{"start":{"line":270,"column":8},"end":{"line":278,"column":10}},"90":{"start":{"line":284,"column":28},"end":{"line":284,"column":35}},"91":{"start":{"line":285,"column":29},"end":{"line":285,"column":58}},"92":{"start":{"line":286,"column":26},"end":{"line":286,"column":28}},"93":{"start":{"line":287,"column":8},"end":{"line":377,"column":9}},"94":{"start":{"line":290,"column":32},"end":{"line":310,"column":29}},"95":{"start":{"line":311,"column":12},"end":{"line":311,"column":108}},"96":{"start":{"line":312,"column":12},"end":{"line":348,"column":13}},"97":{"start":{"line":313,"column":16},"end":{"line":347,"column":17}},"98":{"start":{"line":314,"column":20},"end":{"line":314,"column":76}},"99":{"start":{"line":315,"column":42},"end":{"line":315,"column":91}},"100":{"start":{"line":316,"column":35},"end":{"line":316,"column":60}},"101":{"start":{"line":317,"column":20},"end":{"line":317,"column":88}},"102":{"start":{"line":319,"column":38},"end":{"line":319,"column":93}},"103":{"start":{"line":320,"column":20},"end":{"line":323,"column":21}},"104":{"start":{"line":321,"column":24},"end":{"line":321,"column":94}},"105":{"start":{"line":322,"column":24},"end":{"line":322,"column":33}},"106":{"start":{"line":324,"column":20},"end":{"line":324,"column":129}},"107":{"start":{"line":325,"column":20},"end":{"line":338,"column":21}},"108":{"start":{"line":326,"column":24},"end":{"line":337,"column":25}},"109":{"start":{"line":327,"column":28},"end":{"line":327,"column":121}},"110":{"start":{"line":328,"column":28},"end":{"line":336,"column":29}},"111":{"start":{"line":329,"column":32},"end":{"line":335,"column":35}},"112":{"start":{"line":339,"column":20},"end":{"line":342,"column":21}},"113":{"start":{"line":340,"column":24},"end":{"line":340,"column":124}},"114":{"start":{"line":341,"column":24},"end":{"line":341,"column":30}},"115":{"start":{"line":346,"column":20},"end":{"line":346,"column":29}},"116":{"start":{"line":350,"column":12},"end":{"line":371,"column":13}},"117":{"start":{"line":351,"column":16},"end":{"line":370,"column":17}},"118":{"start":{"line":352,"column":39},"end":{"line":352,"column":104}},"119":{"start":{"line":353,"column":32},"end":{"line":353,"column":54}},"120":{"start":{"line":354,"column":20},"end":{"line":354,"column":117}},"121":{"start":{"line":355,"column":20},"end":{"line":366,"column":21}},"122":{"start":{"line":356,"column":24},"end":{"line":365,"column":25}},"123":{"start":{"line":357,"column":46},"end":{"line":357,"column":113}},"124":{"start":{"line":357,"column":93},"end":{"line":357,"column":99}},"125":{"start":{"line":358,"column":45},"end":{"line":358,"column":87}},"126":{"start":{"line":359,"column":28},"end":{"line":364,"column":31}},"127":{"start":{"line":369,"column":20},"end":{"line":369,"column":97}},"128":{"start":{"line":372,"column":12},"end":{"line":372,"column":29}},"129":{"start":{"line":375,"column":12},"end":{"line":375,"column":96}},"130":{"start":{"line":376,"column":12},"end":{"line":376,"column":22}},"131":{"start":{"line":383,"column":38},"end":{"line":383,"column":45}},"132":{"start":{"line":384,"column":8},"end":{"line":386,"column":9}},"133":{"start":{"line":385,"column":12},"end":{"line":385,"column":75}},"134":{"start":{"line":387,"column":8},"end":{"line":387,"column":85}},"135":{"start":{"line":388,"column":8},"end":{"line":388,"column":112}},"136":{"start":{"line":390,"column":8},"end":{"line":399,"column":9}},"137":{"start":{"line":391,"column":25},"end":{"line":391,"column":64}},"138":{"start":{"line":392,"column":12},"end":{"line":394,"column":13}},"139":{"start":{"line":393,"column":16},"end":{"line":393,"column":92}},"140":{"start":{"line":395,"column":12},"end":{"line":395,"column":101}},"141":{"start":{"line":398,"column":12},"end":{"line":398,"column":84}},"142":{"start":{"line":400,"column":22},"end":{"line":400,"column":127}},"143":{"start":{"line":401,"column":8},"end":{"line":430,"column":9}},"144":{"start":{"line":402,"column":12},"end":{"line":402,"column":75}},"145":{"start":{"line":403,"column":27},"end":{"line":403,"column":47}},"146":{"start":{"line":404,"column":12},"end":{"line":404,"column":102}},"147":{"start":{"line":405,"column":30},"end":{"line":405,"column":32}},"148":{"start":{"line":406,"column":12},"end":{"line":415,"column":13}},"149":{"start":{"line":407,"column":16},"end":{"line":407,"column":124}},"150":{"start":{"line":408,"column":16},"end":{"line":414,"column":17}},"151":{"start":{"line":409,"column":20},"end":{"line":413,"column":23}},"152":{"start":{"line":416,"column":12},"end":{"line":416,"column":29}},"153":{"start":{"line":420,"column":33},"end":{"line":420,"column":46}},"154":{"start":{"line":421,"column":12},"end":{"line":429,"column":13}},"155":{"start":{"line":422,"column":16},"end":{"line":422,"column":185}},"156":{"start":{"line":424,"column":17},"end":{"line":429,"column":13}},"157":{"start":{"line":425,"column":16},"end":{"line":425,"column":150}},"158":{"start":{"line":428,"column":16},"end":{"line":428,"column":88}},"159":{"start":{"line":436,"column":23},"end":{"line":436,"column":25}},"160":{"start":{"line":437,"column":27},"end":{"line":437,"column":36}},"161":{"start":{"line":438,"column":8},"end":{"line":440,"column":9}},"162":{"start":{"line":439,"column":12},"end":{"line":439,"column":56}},"163":{"start":{"line":441,"column":28},"end":{"line":441,"column":37}},"164":{"start":{"line":442,"column":8},"end":{"line":444,"column":9}},"165":{"start":{"line":443,"column":12},"end":{"line":443,"column":57}},"166":{"start":{"line":446,"column":8},"end":{"line":474,"column":9}},"167":{"start":{"line":447,"column":12},"end":{"line":449,"column":13}},"168":{"start":{"line":448,"column":16},"end":{"line":448,"column":25}},"169":{"start":{"line":450,"column":36},"end":{"line":450,"column":77}},"170":{"start":{"line":451,"column":12},"end":{"line":473,"column":13}},"171":{"start":{"line":452,"column":16},"end":{"line":457,"column":20}},"172":{"start":{"line":461,"column":16},"end":{"line":472,"column":17}},"173":{"start":{"line":466,"column":20},"end":{"line":471,"column":24}},"174":{"start":{"line":476,"column":8},"end":{"line":488,"column":9}},"175":{"start":{"line":477,"column":12},"end":{"line":479,"column":13}},"176":{"start":{"line":478,"column":16},"end":{"line":478,"column":25}},"177":{"start":{"line":480,"column":37},"end":{"line":480,"column":78}},"178":{"start":{"line":481,"column":12},"end":{"line":487,"column":13}},"179":{"start":{"line":482,"column":33},"end":{"line":482,"column":115}},"180":{"start":{"line":483,"column":16},"end":{"line":486,"column":20}},"181":{"start":{"line":489,"column":8},"end":{"line":489,"column":22}},"182":{"start":{"line":495,"column":23},"end":{"line":495,"column":25}},"183":{"start":{"line":496,"column":29},"end":{"line":496,"column":36}},"184":{"start":{"line":497,"column":8},"end":{"line":515,"column":9}},"185":{"start":{"line":498,"column":12},"end":{"line":514,"column":13}},"186":{"start":{"line":500,"column":29},"end":{"line":500,"column":74}},"187":{"start":{"line":501,"column":16},"end":{"line":506,"column":17}},"188":{"start":{"line":502,"column":20},"end":{"line":505,"column":24}},"189":{"start":{"line":509,"column":16},"end":{"line":513,"column":20}},"190":{"start":{"line":516,"column":8},"end":{"line":516,"column":22}},"191":{"start":{"line":522,"column":23},"end":{"line":522,"column":25}},"192":{"start":{"line":524,"column":32},"end":{"line":533,"column":9}},"193":{"start":{"line":534,"column":8},"end":{"line":548,"column":9}},"194":{"start":{"line":536,"column":12},"end":{"line":538,"column":13}},"195":{"start":{"line":537,"column":16},"end":{"line":537,"column":25}},"196":{"start":{"line":542,"column":12},"end":{"line":547,"column":13}},"197":{"start":{"line":543,"column":16},"end":{"line":546,"column":20}},"198":{"start":{"line":549,"column":8},"end":{"line":549,"column":22}},"199":{"start":{"line":555,"column":23},"end":{"line":555,"column":25}},"200":{"start":{"line":556,"column":28},"end":{"line":556,"column":37}},"201":{"start":{"line":558,"column":8},"end":{"line":562,"column":9}},"202":{"start":{"line":559,"column":29},"end":{"line":559,"column":69}},"203":{"start":{"line":560,"column":12},"end":{"line":560,"column":36}},"204":{"start":{"line":561,"column":12},"end":{"line":561,"column":57}},"205":{"start":{"line":564,"column":8},"end":{"line":575,"column":9}},"206":{"start":{"line":565,"column":12},"end":{"line":574,"column":13}},"207":{"start":{"line":566,"column":39},"end":{"line":566,"column":91}},"208":{"start":{"line":566,"column":74},"end":{"line":566,"column":88}},"209":{"start":{"line":567,"column":16},"end":{"line":573,"column":17}},"210":{"start":{"line":568,"column":20},"end":{"line":572,"column":24}},"211":{"start":{"line":576,"column":8},"end":{"line":576,"column":22}},"212":{"start":{"line":579,"column":0},"end":{"line":579,"column":56}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":18},"end":{"line":32,"column":5}},"line":22},"1":{"name":"(anonymous_1)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":24},"end":{"line":98,"column":5}},"line":36},"2":{"name":"(anonymous_2)","decl":{"start":{"line":102,"column":4},"end":{"line":102,"column":5}},"loc":{"start":{"line":102,"column":27},"end":{"line":140,"column":5}},"line":102},"3":{"name":"(anonymous_3)","decl":{"start":{"line":144,"column":4},"end":{"line":144,"column":5}},"loc":{"start":{"line":144,"column":39},"end":{"line":146,"column":5}},"line":144},"4":{"name":"(anonymous_4)","decl":{"start":{"line":150,"column":4},"end":{"line":150,"column":5}},"loc":{"start":{"line":150,"column":27},"end":{"line":251,"column":5}},"line":150},"5":{"name":"(anonymous_5)","decl":{"start":{"line":193,"column":70},"end":{"line":193,"column":71}},"loc":{"start":{"line":193,"column":75},"end":{"line":193,"column":86}},"line":193},"6":{"name":"(anonymous_6)","decl":{"start":{"line":218,"column":49},"end":{"line":218,"column":50}},"loc":{"start":{"line":218,"column":54},"end":{"line":218,"column":99}},"line":218},"7":{"name":"(anonymous_7)","decl":{"start":{"line":234,"column":49},"end":{"line":234,"column":50}},"loc":{"start":{"line":234,"column":54},"end":{"line":234,"column":98}},"line":234},"8":{"name":"(anonymous_8)","decl":{"start":{"line":235,"column":46},"end":{"line":235,"column":47}},"loc":{"start":{"line":235,"column":51},"end":{"line":235,"column":92}},"line":235},"9":{"name":"(anonymous_9)","decl":{"start":{"line":255,"column":4},"end":{"line":255,"column":5}},"loc":{"start":{"line":255,"column":29},"end":{"line":257,"column":5}},"line":255},"10":{"name":"(anonymous_10)","decl":{"start":{"line":261,"column":4},"end":{"line":261,"column":5}},"loc":{"start":{"line":261,"column":33},"end":{"line":265,"column":5}},"line":261},"11":{"name":"(anonymous_11)","decl":{"start":{"line":269,"column":4},"end":{"line":269,"column":5}},"loc":{"start":{"line":269,"column":86},"end":{"line":279,"column":5}},"line":269},"12":{"name":"(anonymous_12)","decl":{"start":{"line":283,"column":4},"end":{"line":283,"column":5}},"loc":{"start":{"line":283,"column":41},"end":{"line":378,"column":5}},"line":283},"13":{"name":"(anonymous_13)","decl":{"start":{"line":357,"column":86},"end":{"line":357,"column":87}},"loc":{"start":{"line":357,"column":93},"end":{"line":357,"column":99}},"line":357},"14":{"name":"(anonymous_14)","decl":{"start":{"line":382,"column":4},"end":{"line":382,"column":5}},"loc":{"start":{"line":382,"column":41},"end":{"line":431,"column":5}},"line":382},"15":{"name":"(anonymous_15)","decl":{"start":{"line":435,"column":4},"end":{"line":435,"column":5}},"loc":{"start":{"line":435,"column":54},"end":{"line":490,"column":5}},"line":435},"16":{"name":"(anonymous_16)","decl":{"start":{"line":494,"column":4},"end":{"line":494,"column":5}},"loc":{"start":{"line":494,"column":56},"end":{"line":517,"column":5}},"line":494},"17":{"name":"(anonymous_17)","decl":{"start":{"line":521,"column":4},"end":{"line":521,"column":5}},"loc":{"start":{"line":521,"column":56},"end":{"line":550,"column":5}},"line":521},"18":{"name":"(anonymous_18)","decl":{"start":{"line":554,"column":4},"end":{"line":554,"column":5}},"loc":{"start":{"line":554,"column":44},"end":{"line":577,"column":5}},"line":554},"19":{"name":"(anonymous_19)","decl":{"start":{"line":566,"column":69},"end":{"line":566,"column":70}},"loc":{"start":{"line":566,"column":74},"end":{"line":566,"column":88}},"line":566}},"branchMap":{"0":{"loc":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},{"start":{},"end":{}}],"line":105},"1":{"loc":{"start":{"line":105,"column":12},"end":{"line":105,"column":85}},"type":"binary-expr","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":43}},{"start":{"line":105,"column":47},"end":{"line":105,"column":85}}],"line":105},"2":{"loc":{"start":{"line":108,"column":8},"end":{"line":110,"column":9}},"type":"if","locations":[{"start":{"line":108,"column":8},"end":{"line":110,"column":9}},{"start":{},"end":{}}],"line":108},"3":{"loc":{"start":{"line":108,"column":12},"end":{"line":108,"column":90}},"type":"binary-expr","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":48}},{"start":{"line":108,"column":52},"end":{"line":108,"column":90}}],"line":108},"4":{"loc":{"start":{"line":111,"column":8},"end":{"line":114,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":114,"column":9}},{"start":{},"end":{}}],"line":111},"5":{"loc":{"start":{"line":111,"column":12},"end":{"line":112,"column":59}},"type":"binary-expr","locations":[{"start":{"line":111,"column":12},"end":{"line":111,"column":52}},{"start":{"line":112,"column":12},"end":{"line":112,"column":59}}],"line":111},"6":{"loc":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},{"start":{},"end":{}}],"line":115},"7":{"loc":{"start":{"line":115,"column":12},"end":{"line":115,"column":90}},"type":"binary-expr","locations":[{"start":{"line":115,"column":12},"end":{"line":115,"column":46}},{"start":{"line":115,"column":50},"end":{"line":115,"column":90}}],"line":115},"8":{"loc":{"start":{"line":118,"column":8},"end":{"line":120,"column":9}},"type":"if","locations":[{"start":{"line":118,"column":8},"end":{"line":120,"column":9}},{"start":{},"end":{}}],"line":118},"9":{"loc":{"start":{"line":118,"column":12},"end":{"line":118,"column":88}},"type":"binary-expr","locations":[{"start":{"line":118,"column":12},"end":{"line":118,"column":47}},{"start":{"line":118,"column":51},"end":{"line":118,"column":88}}],"line":118},"10":{"loc":{"start":{"line":121,"column":8},"end":{"line":124,"column":9}},"type":"if","locations":[{"start":{"line":121,"column":8},"end":{"line":124,"column":9}},{"start":{},"end":{}}],"line":121},"11":{"loc":{"start":{"line":121,"column":12},"end":{"line":122,"column":64}},"type":"binary-expr","locations":[{"start":{"line":121,"column":12},"end":{"line":121,"column":57}},{"start":{"line":122,"column":12},"end":{"line":122,"column":64}}],"line":121},"12":{"loc":{"start":{"line":125,"column":8},"end":{"line":127,"column":9}},"type":"if","locations":[{"start":{"line":125,"column":8},"end":{"line":127,"column":9}},{"start":{},"end":{}}],"line":125},"13":{"loc":{"start":{"line":125,"column":12},"end":{"line":125,"column":96}},"type":"binary-expr","locations":[{"start":{"line":125,"column":12},"end":{"line":125,"column":49}},{"start":{"line":125,"column":53},"end":{"line":125,"column":96}}],"line":125},"14":{"loc":{"start":{"line":128,"column":8},"end":{"line":131,"column":9}},"type":"if","locations":[{"start":{"line":128,"column":8},"end":{"line":131,"column":9}},{"start":{},"end":{}}],"line":128},"15":{"loc":{"start":{"line":128,"column":12},"end":{"line":129,"column":67}},"type":"binary-expr","locations":[{"start":{"line":128,"column":12},"end":{"line":128,"column":60}},{"start":{"line":129,"column":12},"end":{"line":129,"column":67}}],"line":128},"16":{"loc":{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},{"start":{},"end":{}}],"line":132},"17":{"loc":{"start":{"line":132,"column":12},"end":{"line":132,"column":99}},"type":"binary-expr","locations":[{"start":{"line":132,"column":12},"end":{"line":132,"column":50}},{"start":{"line":132,"column":54},"end":{"line":132,"column":99}}],"line":132},"18":{"loc":{"start":{"line":159,"column":12},"end":{"line":161,"column":13}},"type":"if","locations":[{"start":{"line":159,"column":12},"end":{"line":161,"column":13}},{"start":{},"end":{}}],"line":159},"19":{"loc":{"start":{"line":178,"column":12},"end":{"line":180,"column":13}},"type":"if","locations":[{"start":{"line":178,"column":12},"end":{"line":180,"column":13}},{"start":{},"end":{}}],"line":178},"20":{"loc":{"start":{"line":178,"column":16},"end":{"line":178,"column":68}},"type":"binary-expr","locations":[{"start":{"line":178,"column":16},"end":{"line":178,"column":45}},{"start":{"line":178,"column":49},"end":{"line":178,"column":68}}],"line":178},"21":{"loc":{"start":{"line":183,"column":12},"end":{"line":195,"column":13}},"type":"if","locations":[{"start":{"line":183,"column":12},"end":{"line":195,"column":13}},{"start":{"line":188,"column":17},"end":{"line":195,"column":13}}],"line":183},"22":{"loc":{"start":{"line":183,"column":16},"end":{"line":183,"column":66}},"type":"binary-expr","locations":[{"start":{"line":183,"column":16},"end":{"line":183,"column":35}},{"start":{"line":183,"column":39},"end":{"line":183,"column":66}}],"line":183},"23":{"loc":{"start":{"line":188,"column":17},"end":{"line":195,"column":13}},"type":"if","locations":[{"start":{"line":188,"column":17},"end":{"line":195,"column":13}},{"start":{},"end":{}}],"line":188},"24":{"loc":{"start":{"line":197,"column":12},"end":{"line":201,"column":13}},"type":"if","locations":[{"start":{"line":197,"column":12},"end":{"line":201,"column":13}},{"start":{},"end":{}}],"line":197},"25":{"loc":{"start":{"line":197,"column":16},"end":{"line":197,"column":90}},"type":"binary-expr","locations":[{"start":{"line":197,"column":16},"end":{"line":197,"column":35}},{"start":{"line":197,"column":39},"end":{"line":197,"column":90}}],"line":197},"26":{"loc":{"start":{"line":203,"column":12},"end":{"line":209,"column":13}},"type":"if","locations":[{"start":{"line":203,"column":12},"end":{"line":209,"column":13}},{"start":{},"end":{}}],"line":203},"27":{"loc":{"start":{"line":203,"column":16},"end":{"line":205,"column":66}},"type":"binary-expr","locations":[{"start":{"line":203,"column":16},"end":{"line":203,"column":35}},{"start":{"line":204,"column":16},"end":{"line":204,"column":46}},{"start":{"line":205,"column":16},"end":{"line":205,"column":66}}],"line":203},"28":{"loc":{"start":{"line":211,"column":12},"end":{"line":217,"column":13}},"type":"if","locations":[{"start":{"line":211,"column":12},"end":{"line":217,"column":13}},{"start":{},"end":{}}],"line":211},"29":{"loc":{"start":{"line":211,"column":16},"end":{"line":213,"column":67}},"type":"binary-expr","locations":[{"start":{"line":211,"column":16},"end":{"line":211,"column":35}},{"start":{"line":212,"column":16},"end":{"line":212,"column":56}},{"start":{"line":213,"column":16},"end":{"line":213,"column":67}}],"line":211},"30":{"loc":{"start":{"line":219,"column":27},"end":{"line":223,"column":51}},"type":"cond-expr","locations":[{"start":{"line":220,"column":18},"end":{"line":220,"column":47}},{"start":{"line":221,"column":18},"end":{"line":223,"column":51}}],"line":219},"31":{"loc":{"start":{"line":221,"column":18},"end":{"line":223,"column":51}},"type":"cond-expr","locations":[{"start":{"line":222,"column":22},"end":{"line":222,"column":54}},{"start":{"line":223,"column":22},"end":{"line":223,"column":51}}],"line":221},"32":{"loc":{"start":{"line":256,"column":16},"end":{"line":256,"column":51}},"type":"binary-expr","locations":[{"start":{"line":256,"column":16},"end":{"line":256,"column":45}},{"start":{"line":256,"column":49},"end":{"line":256,"column":51}}],"line":256},"33":{"loc":{"start":{"line":262,"column":8},"end":{"line":264,"column":9}},"type":"if","locations":[{"start":{"line":262,"column":8},"end":{"line":264,"column":9}},{"start":{},"end":{}}],"line":262},"34":{"loc":{"start":{"line":301,"column":20},"end":{"line":306,"column":24}},"type":"cond-expr","locations":[{"start":{"line":302,"column":22},"end":{"line":305,"column":21}},{"start":{"line":306,"column":22},"end":{"line":306,"column":24}}],"line":301},"35":{"loc":{"start":{"line":319,"column":38},"end":{"line":319,"column":93}},"type":"binary-expr","locations":[{"start":{"line":319,"column":38},"end":{"line":319,"column":59}},{"start":{"line":319,"column":63},"end":{"line":319,"column":87}},{"start":{"line":319,"column":91},"end":{"line":319,"column":93}}],"line":319},"36":{"loc":{"start":{"line":320,"column":20},"end":{"line":323,"column":21}},"type":"if","locations":[{"start":{"line":320,"column":20},"end":{"line":323,"column":21}},{"start":{},"end":{}}],"line":320},"37":{"loc":{"start":{"line":326,"column":24},"end":{"line":337,"column":25}},"type":"if","locations":[{"start":{"line":326,"column":24},"end":{"line":337,"column":25}},{"start":{},"end":{}}],"line":326},"38":{"loc":{"start":{"line":326,"column":28},"end":{"line":326,"column":93}},"type":"binary-expr","locations":[{"start":{"line":326,"column":28},"end":{"line":326,"column":51}},{"start":{"line":326,"column":55},"end":{"line":326,"column":93}}],"line":326},"39":{"loc":{"start":{"line":331,"column":50},"end":{"line":331,"column":73}},"type":"binary-expr","locations":[{"start":{"line":331,"column":50},"end":{"line":331,"column":67}},{"start":{"line":331,"column":71},"end":{"line":331,"column":73}}],"line":331},"40":{"loc":{"start":{"line":339,"column":20},"end":{"line":342,"column":21}},"type":"if","locations":[{"start":{"line":339,"column":20},"end":{"line":342,"column":21}},{"start":{},"end":{}}],"line":339},"41":{"loc":{"start":{"line":350,"column":12},"end":{"line":371,"column":13}},"type":"if","locations":[{"start":{"line":350,"column":12},"end":{"line":371,"column":13}},{"start":{},"end":{}}],"line":350},"42":{"loc":{"start":{"line":350,"column":16},"end":{"line":350,"column":68}},"type":"binary-expr","locations":[{"start":{"line":350,"column":16},"end":{"line":350,"column":42}},{"start":{"line":350,"column":46},"end":{"line":350,"column":68}}],"line":350},"43":{"loc":{"start":{"line":356,"column":24},"end":{"line":365,"column":25}},"type":"if","locations":[{"start":{"line":356,"column":24},"end":{"line":365,"column":25}},{"start":{},"end":{}}],"line":356},"44":{"loc":{"start":{"line":384,"column":8},"end":{"line":386,"column":9}},"type":"if","locations":[{"start":{"line":384,"column":8},"end":{"line":386,"column":9}},{"start":{},"end":{}}],"line":384},"45":{"loc":{"start":{"line":392,"column":12},"end":{"line":394,"column":13}},"type":"if","locations":[{"start":{"line":392,"column":12},"end":{"line":394,"column":13}},{"start":{},"end":{}}],"line":392},"46":{"loc":{"start":{"line":392,"column":16},"end":{"line":392,"column":47}},"type":"binary-expr","locations":[{"start":{"line":392,"column":16},"end":{"line":392,"column":29}},{"start":{"line":392,"column":33},"end":{"line":392,"column":47}}],"line":392},"47":{"loc":{"start":{"line":421,"column":12},"end":{"line":429,"column":13}},"type":"if","locations":[{"start":{"line":421,"column":12},"end":{"line":429,"column":13}},{"start":{"line":424,"column":17},"end":{"line":429,"column":13}}],"line":421},"48":{"loc":{"start":{"line":424,"column":17},"end":{"line":429,"column":13}},"type":"if","locations":[{"start":{"line":424,"column":17},"end":{"line":429,"column":13}},{"start":{"line":427,"column":17},"end":{"line":429,"column":13}}],"line":424},"49":{"loc":{"start":{"line":447,"column":12},"end":{"line":449,"column":13}},"type":"if","locations":[{"start":{"line":447,"column":12},"end":{"line":449,"column":13}},{"start":{},"end":{}}],"line":447},"50":{"loc":{"start":{"line":451,"column":12},"end":{"line":473,"column":13}},"type":"if","locations":[{"start":{"line":451,"column":12},"end":{"line":473,"column":13}},{"start":{"line":459,"column":17},"end":{"line":473,"column":13}}],"line":451},"51":{"loc":{"start":{"line":452,"column":174},"end":{"line":452,"column":230}},"type":"binary-expr","locations":[{"start":{"line":452,"column":174},"end":{"line":452,"column":208}},{"start":{"line":452,"column":212},"end":{"line":452,"column":230}}],"line":452},"52":{"loc":{"start":{"line":452,"column":246},"end":{"line":452,"column":305}},"type":"binary-expr","locations":[{"start":{"line":452,"column":246},"end":{"line":452,"column":272}},{"start":{"line":452,"column":276},"end":{"line":452,"column":305}}],"line":452},"53":{"loc":{"start":{"line":461,"column":16},"end":{"line":472,"column":17}},"type":"if","locations":[{"start":{"line":461,"column":16},"end":{"line":472,"column":17}},{"start":{},"end":{}}],"line":461},"54":{"loc":{"start":{"line":461,"column":20},"end":{"line":465,"column":47}},"type":"binary-expr","locations":[{"start":{"line":461,"column":20},"end":{"line":461,"column":49}},{"start":{"line":462,"column":20},"end":{"line":462,"column":48}},{"start":{"line":463,"column":20},"end":{"line":464,"column":66}},{"start":{"line":465,"column":20},"end":{"line":465,"column":47}}],"line":461},"55":{"loc":{"start":{"line":477,"column":12},"end":{"line":479,"column":13}},"type":"if","locations":[{"start":{"line":477,"column":12},"end":{"line":479,"column":13}},{"start":{},"end":{}}],"line":477},"56":{"loc":{"start":{"line":481,"column":12},"end":{"line":487,"column":13}},"type":"if","locations":[{"start":{"line":481,"column":12},"end":{"line":487,"column":13}},{"start":{},"end":{}}],"line":481},"57":{"loc":{"start":{"line":482,"column":33},"end":{"line":482,"column":115}},"type":"cond-expr","locations":[{"start":{"line":482,"column":53},"end":{"line":482,"column":83}},{"start":{"line":482,"column":86},"end":{"line":482,"column":115}}],"line":482},"58":{"loc":{"start":{"line":501,"column":16},"end":{"line":506,"column":17}},"type":"if","locations":[{"start":{"line":501,"column":16},"end":{"line":506,"column":17}},{"start":{},"end":{}}],"line":501},"59":{"loc":{"start":{"line":501,"column":20},"end":{"line":501,"column":51}},"type":"binary-expr","locations":[{"start":{"line":501,"column":20},"end":{"line":501,"column":33}},{"start":{"line":501,"column":37},"end":{"line":501,"column":51}}],"line":501},"60":{"loc":{"start":{"line":536,"column":12},"end":{"line":538,"column":13}},"type":"if","locations":[{"start":{"line":536,"column":12},"end":{"line":538,"column":13}},{"start":{},"end":{}}],"line":536},"61":{"loc":{"start":{"line":542,"column":12},"end":{"line":547,"column":13}},"type":"if","locations":[{"start":{"line":542,"column":12},"end":{"line":547,"column":13}},{"start":{},"end":{}}],"line":542},"62":{"loc":{"start":{"line":542,"column":16},"end":{"line":542,"column":76}},"type":"binary-expr","locations":[{"start":{"line":542,"column":16},"end":{"line":542,"column":45}},{"start":{"line":542,"column":49},"end":{"line":542,"column":76}}],"line":542},"63":{"loc":{"start":{"line":559,"column":29},"end":{"line":559,"column":69}},"type":"binary-expr","locations":[{"start":{"line":559,"column":29},"end":{"line":559,"column":63}},{"start":{"line":559,"column":67},"end":{"line":559,"column":69}}],"line":559},"64":{"loc":{"start":{"line":565,"column":12},"end":{"line":574,"column":13}},"type":"if","locations":[{"start":{"line":565,"column":12},"end":{"line":574,"column":13}},{"start":{},"end":{}}],"line":565},"65":{"loc":{"start":{"line":567,"column":16},"end":{"line":573,"column":17}},"type":"if","locations":[{"start":{"line":567,"column":16},"end":{"line":573,"column":17}},{"start":{},"end":{}}],"line":567}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":3,"8":3,"9":3,"10":3,"11":3,"12":3,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":1},"f":{"0":3,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0,0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0]},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/FunctionSelectorModule.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/FunctionSelectorModule.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Function Selector Monitoring Module for Hardhat Diamond Monitor Plugin\n *\n * Comprehensive selector validation using diamonds module utilities for accurate\n * comparison between deployment configuration and on-chain state.\n */\n\nimport { ethers } from 'ethers';\nimport { promises as fs } from 'fs';\nimport * as path from 'path';\n\nimport {\n  MonitoringModule,\n  MonitoringContext,\n  MonitoringResult,\n  MonitoringIssue,\n  DiamondInfo,\n  NetworkInfo,\n  ValidationResult,\n  ConfigRequirement,\n  SeverityLevel,\n  MonitoringStatus,\n} from '../core/types';\n\n/**\n * Facet structure from diamonds module\n */\ninterface FacetStruct {\n  facetAddress: string;\n  functionSelectors: string[];\n}\n\n/**\n * Enhanced selector information for detailed tracking\n */\ninterface SelectorInfo {\n  selector: string;\n  functionSignature?: string;\n  facetAddress: string;\n  facetName?: string;\n  source: 'deployment' | 'onchain' | 'abi';\n  verified?: boolean;\n}\n\n/**\n * Deployed diamond data structure matching the deployment files\n */\ninterface DeployedDiamondData {\n  DiamondAddress?: string;\n  DeployerAddress?: string;\n  DeployedFacets?: Record<\n    string,\n    {\n      address?: string;\n      funcSelectors?: string[];\n      tx_hash?: string;\n      version?: number;\n      verified?: boolean;\n      abi?: any[];\n    }\n  >;\n  FacetDeployedInfo?: Record<\n    string,\n    {\n      address?: string;\n      funcSelectors?: string[];\n      tx_hash?: string;\n      version?: number;\n      verified?: boolean;\n      abi?: any[];\n    }\n  >;\n}\n\n/**\n * Configuration for the function selector module\n */\ninterface FunctionSelectorModuleConfig {\n  strictMode?: boolean;\n  ignoreSelectors?: string[];\n  allowAddressChanges?: boolean;\n  customAbiPath?: string;\n  skipValidation?: string[];\n  ignoreVerificationIssues?: boolean;\n  customConfigPath?: string;\n  enableSelectorConflictCheck?: boolean;\n  enableOrphanCheck?: boolean;\n}\n\n/**\n * Function Selector Monitoring Module\n *\n * Comprehensive validation using diamonds module utilities for accurate\n * comparison between deployment configuration and on-chain state.\n */\nexport class FunctionSelectorModule implements MonitoringModule {\n  public readonly id = 'function-selectors';\n  public readonly name = 'Function Selector Monitoring';\n  public readonly description =\n    'Validates function selector registry against diamond configuration and deployment artifacts with comprehensive selector analysis';\n  public readonly version = '1.0.0';\n  public readonly category = 'structural';\n\n  // Diamond Loupe ABI for querying facets\n  private readonly diamondLoupeABI = [\n    'function facets() view returns (tuple(address facetAddress, bytes4[] functionSelectors)[])',\n  ];\n\n  /**\n   * Get configuration requirements for this module\n   */\n  public getRequiredConfig(): ConfigRequirement[] {\n    return [\n      {\n        key: 'strictMode',\n        type: 'boolean',\n        required: false,\n        description: 'Enable strict validation mode requiring exact matching',\n        defaultValue: false,\n      },\n      {\n        key: 'ignoreSelectors',\n        type: 'array',\n        required: false,\n        description: 'Array of function selectors to ignore during validation',\n      },\n      {\n        key: 'allowAddressChanges',\n        type: 'boolean',\n        required: false,\n        description: 'Allow facet address changes for existing selectors',\n        defaultValue: false,\n      },\n      {\n        key: 'customAbiPath',\n        type: 'string',\n        required: false,\n        description: 'Path to custom ABI file for function signature resolution',\n      },\n      {\n        key: 'skipValidation',\n        type: 'array',\n        required: false,\n        description: 'Array of validation types to skip (e.g., \"orphaned\", \"conflicts\")',\n      },\n      {\n        key: 'ignoreVerificationIssues',\n        type: 'boolean',\n        required: false,\n        description: 'Ignore verification status issues',\n        defaultValue: true,\n      },\n      {\n        key: 'customConfigPath',\n        type: 'string',\n        required: false,\n        description: 'Path to custom deployment configuration file',\n      },\n      {\n        key: 'enableSelectorConflictCheck',\n        type: 'boolean',\n        required: false,\n        description: 'Enable checking for selector conflicts across facets',\n        defaultValue: true,\n      },\n      {\n        key: 'enableOrphanCheck',\n        type: 'boolean',\n        required: false,\n        description: 'Enable checking for orphaned selectors',\n        defaultValue: true,\n      },\n    ];\n  }\n\n  /**\n   * Validate module configuration\n   */\n  public validateConfig(config: any): ValidationResult {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    if (config.strictMode !== undefined && typeof config.strictMode !== 'boolean') {\n      errors.push('strictMode must be a boolean');\n    }\n\n    if (config.ignoreSelectors !== undefined && !Array.isArray(config.ignoreSelectors)) {\n      errors.push('ignoreSelectors must be an array of strings');\n    }\n\n    if (\n      config.allowAddressChanges !== undefined &&\n      typeof config.allowAddressChanges !== 'boolean'\n    ) {\n      errors.push('allowAddressChanges must be a boolean');\n    }\n\n    if (config.customAbiPath !== undefined && typeof config.customAbiPath !== 'string') {\n      errors.push('customAbiPath must be a string');\n    }\n\n    if (config.skipValidation !== undefined && !Array.isArray(config.skipValidation)) {\n      errors.push('skipValidation must be an array of strings');\n    }\n\n    if (\n      config.ignoreVerificationIssues !== undefined &&\n      typeof config.ignoreVerificationIssues !== 'boolean'\n    ) {\n      errors.push('ignoreVerificationIssues must be a boolean');\n    }\n\n    if (config.customConfigPath !== undefined && typeof config.customConfigPath !== 'string') {\n      errors.push('customConfigPath must be a string');\n    }\n\n    if (\n      config.enableSelectorConflictCheck !== undefined &&\n      typeof config.enableSelectorConflictCheck !== 'boolean'\n    ) {\n      errors.push('enableSelectorConflictCheck must be a boolean');\n    }\n\n    if (config.enableOrphanCheck !== undefined && typeof config.enableOrphanCheck !== 'boolean') {\n      errors.push('enableOrphanCheck must be a boolean');\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n      warnings,\n    };\n  }\n\n  /**\n   * Check if this module can monitor the given diamond\n   */\n  public async canMonitor(diamond: DiamondInfo, network: NetworkInfo): Promise<boolean> {\n    return true;\n  }\n\n  /**\n   * Execute comprehensive function selector monitoring\n   */\n  public async monitor(context: MonitoringContext): Promise<MonitoringResult> {\n    const startTime = Date.now();\n    const issues: MonitoringIssue[] = [];\n    const moduleConfig = this.getModuleConfig<FunctionSelectorModuleConfig>(context);\n\n    this.log(context, 'info', '🔍 Starting comprehensive function selector monitoring...');\n\n    try {\n      // 1. Load expected selectors from deployment configuration\n      this.log(context, 'info', '📋 Loading expected selectors from deployment configuration...');\n      const expectedSelectors = await this.loadExpectedSelectors(context);\n\n      if (expectedSelectors.length === 0) {\n        issues.push(\n          this.createIssue(\n            'no-expected-selectors',\n            'No Expected Selectors Found',\n            'Could not load expected function selectors from deployment configuration',\n            SeverityLevel.WARNING,\n            'configuration',\n            'Ensure deployment configuration files exist and contain function selector data'\n          )\n        );\n      }\n\n      // 2. Query on-chain selectors via Diamond Loupe\n      this.log(context, 'info', '🌐 Querying on-chain selectors via Diamond Loupe...');\n      let onChainSelectors: SelectorInfo[] = [];\n      let onChainQueryFailed = false;\n\n      try {\n        onChainSelectors = await this.queryOnChainSelectors(context);\n      } catch (error) {\n        onChainQueryFailed = true;\n        this.log(context, 'error', `❌ On-chain query failed: ${(error as Error).message}`);\n\n        issues.push(\n          this.createIssue(\n            'onchain-query-failed',\n            'On-Chain Query Failed',\n            `Failed to query on-chain selectors: ${(error as Error).message}`,\n            SeverityLevel.CRITICAL,\n            'network-connectivity',\n            'Check network connectivity, diamond address, and ensure DiamondLoupe facet is properly deployed',\n            {\n              error: (error as Error).message,\n              diamondAddress: context.diamond.address,\n              network: context.diamond.network.name,\n            }\n          )\n        );\n      }\n\n      if (onChainSelectors.length === 0 && !onChainQueryFailed) {\n        issues.push(\n          this.createIssue(\n            'empty-diamond',\n            'Empty Diamond Contract',\n            'No function selectors found on the diamond contract',\n            SeverityLevel.CRITICAL,\n            'structural',\n            'Verify the diamond contract is properly deployed and initialized'\n          )\n        );\n      }\n\n      this.log(\n        context,\n        'info',\n        `✅ Found ${expectedSelectors.length} expected and ${onChainSelectors.length} on-chain selectors`\n      );\n\n      // 3. Compare selectors and detect issues (only if we have on-chain data)\n      if (!onChainQueryFailed && onChainSelectors.length > 0) {\n        this.log(context, 'info', '⚖️  Comparing selectors and analyzing differences...');\n        const comparisonIssues = await this.compareSelectors(\n          expectedSelectors,\n          onChainSelectors,\n          moduleConfig\n        );\n        issues.push(...comparisonIssues);\n      } else if (expectedSelectors.length > 0) {\n        // If we have expected selectors but can't query on-chain, report this\n        this.log(\n          context,\n          'info',\n          '📋 Analyzing expected selectors (on-chain comparison unavailable)...'\n        );\n        issues.push(\n          this.createIssue(\n            'comparison-unavailable',\n            'Selector Comparison Unavailable',\n            `Found ${expectedSelectors.length} expected selectors but cannot compare with on-chain state due to query failure`,\n            SeverityLevel.WARNING,\n            'validation-incomplete',\n            'Fix the on-chain query issue to enable full selector validation',\n            {\n              expectedSelectorsCount: expectedSelectors.length,\n              expectedFacets: [...new Set(expectedSelectors.map(s => s.facetName).filter(Boolean))],\n            }\n          )\n        );\n      }\n\n      // 4. Validate selector integrity (only if we have on-chain data)\n      if (!onChainQueryFailed && !moduleConfig.skipValidation?.includes('integrity')) {\n        this.log(context, 'info', '🔒 Validating selector integrity...');\n        const integrityIssues = await this.validateSelectorIntegrity(context, onChainSelectors);\n        issues.push(...integrityIssues);\n      }\n\n      // 5. Check for orphaned selectors (only if we have on-chain data)\n      if (\n        !onChainQueryFailed &&\n        moduleConfig.enableOrphanCheck &&\n        !moduleConfig.skipValidation?.includes('orphaned')\n      ) {\n        this.log(context, 'info', '🕵️ Checking for orphaned selectors...');\n        const orphanIssues = await this.checkForOrphanedSelectors(context, onChainSelectors);\n        issues.push(...orphanIssues);\n      }\n\n      // 6. Check for selector conflicts (only if we have on-chain data)\n      if (\n        !onChainQueryFailed &&\n        moduleConfig.enableSelectorConflictCheck &&\n        !moduleConfig.skipValidation?.includes('conflicts')\n      ) {\n        this.log(context, 'info', '⚠️  Checking for selector conflicts...');\n        const conflictIssues = await this.checkSelectorConflicts(onChainSelectors);\n        issues.push(...conflictIssues);\n      }\n\n      const criticalIssues = issues.filter(i => i.severity === SeverityLevel.CRITICAL).length;\n      const status =\n        criticalIssues > 0\n          ? MonitoringStatus.FAIL\n          : issues.length > 0\n            ? MonitoringStatus.WARNING\n            : MonitoringStatus.PASS;\n\n      this.log(context, 'info', `✅ Function selector monitoring completed with status: ${status}`);\n\n      return {\n        status,\n        executionTime: Date.now() - startTime,\n        issues,\n        metadata: {\n          totalChecks: issues.length,\n          onChainSelectors: onChainSelectors.length,\n          expectedSelectors: expectedSelectors.length,\n          criticalIssues,\n          warningIssues: issues.filter(i => i.severity === SeverityLevel.WARNING).length,\n          infoIssues: issues.filter(i => i.severity === SeverityLevel.INFO).length,\n        },\n      };\n    } catch (error) {\n      this.log(\n        context,\n        'error',\n        `❌ Function selector monitoring failed: ${(error as Error).message}`\n      );\n\n      issues.push(\n        this.createIssue(\n          'monitoring-error',\n          'Function Selector Monitoring Failed',\n          `Monitoring failed with error: ${(error as Error).message}`,\n          SeverityLevel.CRITICAL,\n          'system',\n          'Check network connectivity and diamond contract deployment'\n        )\n      );\n\n      return {\n        status: MonitoringStatus.FAIL,\n        executionTime: Date.now() - startTime,\n        issues,\n        metadata: {\n          error: (error as Error).message,\n        },\n      };\n    }\n  }\n\n  /**\n   * Get module-specific configuration\n   */\n  private getModuleConfig<T>(context: MonitoringContext): T {\n    return (context.moduleConfig[this.id] || {}) as T;\n  }\n\n  /**\n   * Log messages with context awareness\n   */\n  private log(context: MonitoringContext, level: string, message: string): void {\n    if (context.verbose) {\n      console.log(`[${this.name}] ${message}`);\n    }\n  }\n\n  /**\n   * Create a monitoring issue with standardized format\n   */\n  private createIssue(\n    id: string,\n    title: string,\n    description: string,\n    severity: SeverityLevel,\n    category: string,\n    recommendation?: string,\n    metadata?: any\n  ): MonitoringIssue {\n    return {\n      id,\n      title,\n      description,\n      severity,\n      category,\n      recommendation,\n      metadata,\n    };\n  }\n\n  /**\n   * Load expected selectors from deployment configuration files\n   */\n  private async loadExpectedSelectors(context: MonitoringContext): Promise<SelectorInfo[]> {\n    const { diamond } = context;\n    const moduleConfig = this.getModuleConfig<FunctionSelectorModuleConfig>(context);\n    const selectors: SelectorInfo[] = [];\n\n    try {\n      // Try multiple potential paths for deployment configuration\n      // Include patterns with chain ID suffixes for Sepolia (11155111) and other networks\n      const configPaths = [\n        moduleConfig.customConfigPath,\n        // Standard paths\n        path.join(process.cwd(), 'diamonds', diamond.name, `deployed_${diamond.network.name}.json`),\n        path.join(process.cwd(), 'deployments', diamond.network.name, `${diamond.name}.json`),\n        path.join(process.cwd(), 'deployments', diamond.network.name, `GeniusDiamond.json`),\n        path.join(\n          process.cwd(),\n          'diamonds',\n          'GeniusDiamond',\n          `deployed_${diamond.network.name}.json`\n        ),\n        // Chain ID suffix patterns (common deployment naming)\n        path.join(\n          process.cwd(),\n          'diamonds',\n          'GeniusDiamond',\n          'deployments',\n          `${diamond.name.toLowerCase()}-${diamond.network.name}-${diamond.network.chainId}.json`\n        ),\n        path.join(\n          process.cwd(),\n          'diamonds',\n          'GeniusDiamond',\n          'deployments',\n          `geniusdiamond-${diamond.network.name}-${diamond.network.chainId}.json`\n        ),\n        // Try with real Sepolia chain ID if the network is sepolia\n        ...(diamond.network.name === 'sepolia'\n          ? [\n              path.join(\n                process.cwd(),\n                'diamonds',\n                'GeniusDiamond',\n                'deployments',\n                `geniusdiamond-sepolia-11155111.json`\n              ),\n              path.join(\n                process.cwd(),\n                'diamonds',\n                'GeniusDiamond',\n                'deployments',\n                `GeniusDiamond-sepolia-11155111.json`\n              ),\n            ]\n          : []),\n        // Additional patterns based on file structure\n        path.join(\n          process.cwd(),\n          'diamonds',\n          'GeniusDiamond',\n          'deployments',\n          `${diamond.network.name}.json`\n        ),\n        path.join(process.cwd(), 'diamonds', 'GeniusDiamond', 'deployments', `sepolia.json`),\n      ].filter(Boolean);\n\n      this.log(\n        context,\n        'info',\n        `🔍 Trying ${configPaths.length} potential deployment file paths...`\n      );\n\n      for (const configPath of configPaths) {\n        try {\n          this.log(context, 'info', `📁 Checking: ${configPath}`);\n          const configContent = await fs.readFile(configPath!, 'utf-8');\n          const config: DeployedDiamondData = JSON.parse(configContent);\n\n          this.log(context, 'info', `✅ Found deployment file: ${configPath}`);\n\n          // Extract selectors from DeployedFacets or FacetDeployedInfo\n          const facetData = config.DeployedFacets || config.FacetDeployedInfo || {};\n\n          if (Object.keys(facetData).length === 0) {\n            this.log(context, 'info', `⚠️  No facet data found in ${configPath}`);\n            continue;\n          }\n\n          this.log(\n            context,\n            'info',\n            `📋 Processing ${Object.keys(facetData).length} facets from deployment config...`\n          );\n\n          for (const [facetName, facetInfo] of Object.entries(facetData)) {\n            if (facetInfo.funcSelectors && Array.isArray(facetInfo.funcSelectors)) {\n              this.log(\n                context,\n                'info',\n                `   🔧 ${facetName}: ${facetInfo.funcSelectors.length} selectors`\n              );\n              for (const selector of facetInfo.funcSelectors) {\n                selectors.push({\n                  selector,\n                  facetAddress: facetInfo.address || '',\n                  facetName,\n                  source: 'deployment',\n                  verified: facetInfo.verified,\n                });\n              }\n            }\n          }\n\n          if (selectors.length > 0) {\n            this.log(\n              context,\n              'info',\n              `✅ Loaded ${selectors.length} expected selectors from deployment config`\n            );\n            break;\n          }\n        } catch (error) {\n          // Try next path\n          continue;\n        }\n      }\n\n      // Try to load from custom ABI if provided\n      if (moduleConfig.customAbiPath && selectors.length === 0) {\n        try {\n          const abiContent = await fs.readFile(moduleConfig.customAbiPath, 'utf-8');\n          const abi = JSON.parse(abiContent);\n\n          this.log(\n            context,\n            'info',\n            `📁 Loading selectors from custom ABI: ${moduleConfig.customAbiPath}`\n          );\n\n          for (const fragment of abi) {\n            if (fragment.type === 'function') {\n              const signature = `${fragment.name}(${fragment.inputs.map((i: any) => i.type).join(',')})`;\n              const selector = ethers.id(signature).slice(0, 10);\n\n              selectors.push({\n                selector,\n                functionSignature: signature,\n                facetAddress: '',\n                source: 'abi',\n              });\n            }\n          }\n        } catch (error) {\n          this.log(context, 'info', `⚠️  Failed to load custom ABI: ${(error as Error).message}`);\n        }\n      }\n\n      return selectors;\n    } catch (error) {\n      this.log(\n        context,\n        'error',\n        `❌ Failed to load expected selectors: ${(error as Error).message}`\n      );\n      return [];\n    }\n  }\n\n  /**\n   * Query on-chain selectors via Diamond Loupe\n   */\n  private async queryOnChainSelectors(context: MonitoringContext): Promise<SelectorInfo[]> {\n    const { diamond, provider } = context;\n\n    if (!ethers.isAddress(diamond.address)) {\n      throw new Error(`Invalid diamond address: ${diamond.address}`);\n    }\n\n    this.log(context, 'info', `🔗 Connecting to diamond at: ${diamond.address}`);\n    this.log(\n      context,\n      'info',\n      `🌐 Network: ${diamond.network.name} (Chain ID: ${diamond.network.chainId})`\n    );\n\n    // First check if the contract exists\n    try {\n      const code = await provider.getCode(diamond.address);\n      if (code === '0x' || code === '0x0') {\n        throw new Error(`No contract found at diamond address: ${diamond.address}`);\n      }\n      this.log(context, 'info', `✅ Contract exists at diamond address (${code.length} bytes)`);\n    } catch (error) {\n      throw new Error(`Failed to check contract existence: ${(error as Error).message}`);\n    }\n\n    const loupe = new ethers.Contract(\n      ethers.getAddress(diamond.address),\n      this.diamondLoupeABI,\n      provider\n    );\n\n    try {\n      this.log(context, 'info', `🔍 Calling facets() on diamond...`);\n      const facets = await loupe.facets();\n      this.log(context, 'info', `✅ Successfully queried facets, found ${facets.length} facets`);\n\n      const selectors: SelectorInfo[] = [];\n\n      for (const facet of facets as FacetStruct[]) {\n        this.log(\n          context,\n          'info',\n          `   📦 Facet ${facet.facetAddress}: ${facet.functionSelectors.length} selectors`\n        );\n        for (const selector of facet.functionSelectors) {\n          selectors.push({\n            selector,\n            facetAddress: facet.facetAddress,\n            source: 'onchain',\n          });\n        }\n      }\n\n      return selectors;\n    } catch (error) {\n      // Try to provide more detailed error information\n      const errorMessage = (error as Error).message;\n\n      if (errorMessage.includes('could not decode result data')) {\n        throw new Error(\n          `Diamond Loupe query failed - the diamond may not have DiamondLoupe facet properly implemented or the network may be incorrect. Error: ${errorMessage}`\n        );\n      } else if (errorMessage.includes('call revert exception')) {\n        throw new Error(\n          `Diamond Loupe call reverted - check if the diamond contract supports the facets() function. Error: ${errorMessage}`\n        );\n      } else {\n        throw new Error(`Failed to query facets from diamond: ${errorMessage}`);\n      }\n    }\n  }\n\n  /**\n   * Compare expected and on-chain selectors to detect discrepancies\n   */\n  private async compareSelectors(\n    expected: SelectorInfo[],\n    onChain: SelectorInfo[],\n    config: FunctionSelectorModuleConfig\n  ): Promise<MonitoringIssue[]> {\n    const issues: MonitoringIssue[] = [];\n\n    const onChainMap = new Map<string, SelectorInfo>();\n    for (const selector of onChain) {\n      onChainMap.set(selector.selector, selector);\n    }\n\n    const expectedMap = new Map<string, SelectorInfo>();\n    for (const selector of expected) {\n      expectedMap.set(selector.selector, selector);\n    }\n\n    // Check for missing selectors (expected but not on-chain)\n    for (const expectedSelector of expected) {\n      if (config.ignoreSelectors?.includes(expectedSelector.selector)) {\n        continue;\n      }\n\n      const onChainSelector = onChainMap.get(expectedSelector.selector);\n\n      if (!onChainSelector) {\n        issues.push(\n          this.createIssue(\n            `missing-selector-${expectedSelector.selector}`,\n            'Missing Function Selector',\n            `Expected selector ${expectedSelector.selector} (${expectedSelector.functionSignature || 'unknown function'}) from facet ${expectedSelector.facetName || expectedSelector.facetAddress} not found on-chain`,\n            SeverityLevel.CRITICAL,\n            'missing-functionality',\n            'Verify the facet was properly deployed and cut into the diamond',\n            {\n              selector: expectedSelector.selector,\n              expectedFacet: expectedSelector.facetName,\n              expectedAddress: expectedSelector.facetAddress,\n              functionSignature: expectedSelector.functionSignature,\n            }\n          )\n        );\n      } else {\n        // Check for address mismatches\n        if (\n          expectedSelector.facetAddress &&\n          onChainSelector.facetAddress &&\n          expectedSelector.facetAddress.toLowerCase() !==\n            onChainSelector.facetAddress.toLowerCase() &&\n          !config.allowAddressChanges\n        ) {\n          issues.push(\n            this.createIssue(\n              `address-mismatch-${expectedSelector.selector}`,\n              'Facet Address Mismatch',\n              `Selector ${expectedSelector.selector} expected on facet ${expectedSelector.facetAddress} but found on ${onChainSelector.facetAddress}`,\n              SeverityLevel.WARNING,\n              'address-mismatch',\n              'Verify the deployment configuration matches the actual diamond state',\n              {\n                selector: expectedSelector.selector,\n                expectedAddress: expectedSelector.facetAddress,\n                actualAddress: onChainSelector.facetAddress,\n                functionSignature: expectedSelector.functionSignature,\n              }\n            )\n          );\n        }\n      }\n    }\n\n    // Check for unexpected selectors (on-chain but not expected)\n    for (const onChainSelector of onChain) {\n      if (config.ignoreSelectors?.includes(onChainSelector.selector)) {\n        continue;\n      }\n\n      const expectedSelector = expectedMap.get(onChainSelector.selector);\n\n      if (!expectedSelector) {\n        const severity = config.strictMode ? SeverityLevel.CRITICAL : SeverityLevel.WARNING;\n\n        issues.push(\n          this.createIssue(\n            `unexpected-selector-${onChainSelector.selector}`,\n            'Unexpected Function Selector',\n            `Found unexpected selector ${onChainSelector.selector} on facet ${onChainSelector.facetAddress}`,\n            severity,\n            'unexpected-functionality',\n            'Verify this selector should be present or update the deployment configuration',\n            {\n              selector: onChainSelector.selector,\n              facetAddress: onChainSelector.facetAddress,\n            }\n          )\n        );\n      }\n    }\n\n    return issues;\n  }\n\n  /**\n   * Validate the integrity of function selectors\n   */\n  private async validateSelectorIntegrity(\n    context: MonitoringContext,\n    selectors: SelectorInfo[]\n  ): Promise<MonitoringIssue[]> {\n    const issues: MonitoringIssue[] = [];\n    const { provider } = context;\n\n    for (const selector of selectors) {\n      try {\n        // Check if the facet contract exists\n        const code = await provider.getCode(selector.facetAddress);\n\n        if (code === '0x' || code === '0x0') {\n          issues.push(\n            this.createIssue(\n              `missing-facet-${selector.facetAddress}`,\n              'Missing Facet Contract',\n              `Facet contract at ${selector.facetAddress} for selector ${selector.selector} has no code`,\n              SeverityLevel.CRITICAL,\n              'missing-contract',\n              'Verify the facet contract is properly deployed',\n              {\n                selector: selector.selector,\n                facetAddress: selector.facetAddress,\n              }\n            )\n          );\n        }\n      } catch (error) {\n        issues.push(\n          this.createIssue(\n            `integrity-check-failed-${selector.selector}`,\n            'Selector Integrity Check Failed',\n            `Failed to verify integrity of selector ${selector.selector}: ${(error as Error).message}`,\n            SeverityLevel.WARNING,\n            'verification-error',\n            'Check network connectivity and contract deployment',\n            {\n              selector: selector.selector,\n              facetAddress: selector.facetAddress,\n              error: (error as Error).message,\n            }\n          )\n        );\n      }\n    }\n\n    return issues;\n  }\n\n  /**\n   * Check for orphaned selectors (selectors that exist but should not)\n   */\n  private async checkForOrphanedSelectors(\n    context: MonitoringContext,\n    selectors: SelectorInfo[]\n  ): Promise<MonitoringIssue[]> {\n    const issues: MonitoringIssue[] = [];\n\n    // Common system selectors that are expected to be present\n    const systemSelectors = [\n      '0x01ffc9a7', // supportsInterface(bytes4)\n      '0x7a0ed627', // diamondCut(tuple[],address,bytes)\n      '0x48e2b093', // facets()\n      '0xcdffacc6', // facetFunctionSelectors(address)\n      '0xadfca15e', // facetAddresses()\n      '0x52ef6b2c', // facetAddress(bytes4)\n      '0x8da5cb5b', // owner()\n      '0xf2fde38b', // transferOwnership(address)\n    ];\n\n    for (const selector of selectors) {\n      // Skip system selectors\n      if (systemSelectors.includes(selector.selector)) {\n        continue;\n      }\n\n      // For now, we'll just log unusual selectors\n      // More sophisticated orphan detection would require\n      // comparing against a comprehensive ABI database\n      if (selector.source === 'onchain' && !selector.functionSignature) {\n        issues.push(\n          this.createIssue(\n            `unknown-selector-${selector.selector}`,\n            'Unknown Function Selector',\n            `Found selector ${selector.selector} on facet ${selector.facetAddress} with unknown function signature`,\n            SeverityLevel.INFO,\n            'unknown-functionality',\n            'Consider adding function signature mapping or verifying this selector is intentional',\n            {\n              selector: selector.selector,\n              facetAddress: selector.facetAddress,\n            }\n          )\n        );\n      }\n    }\n\n    return issues;\n  }\n\n  /**\n   * Check for function selector conflicts across facets\n   */\n  private async checkSelectorConflicts(selectors: SelectorInfo[]): Promise<MonitoringIssue[]> {\n    const issues: MonitoringIssue[] = [];\n    const selectorMap = new Map<string, SelectorInfo[]>();\n\n    // Group selectors by their signature\n    for (const selector of selectors) {\n      const existing = selectorMap.get(selector.selector) || [];\n      existing.push(selector);\n      selectorMap.set(selector.selector, existing);\n    }\n\n    // Check for conflicts (same selector on different facets)\n    for (const [selectorValue, selectorInfos] of selectorMap.entries()) {\n      if (selectorInfos.length > 1) {\n        const facetAddresses = [...new Set(selectorInfos.map(s => s.facetAddress))];\n\n        if (facetAddresses.length > 1) {\n          issues.push(\n            this.createIssue(\n              `selector-conflict-${selectorValue}`,\n              'Function Selector Conflict',\n              `Selector ${selectorValue} is present on multiple facets: ${facetAddresses.join(', ')}`,\n              SeverityLevel.CRITICAL,\n              'selector-conflict',\n              'Remove duplicate selector implementations from conflicting facets',\n              {\n                selector: selectorValue,\n                conflictingFacets: facetAddresses,\n                selectorInfos: selectorInfos,\n              }\n            )\n          );\n        }\n      }\n    }\n\n    return issues;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bb529353944c2259f266a5f7e8c9984131abc7f7","contentHash":"255cf426f9b7f99943836498c5d15b08e1ad42986ab2718aec0b5952b75a128d"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/DiamondStructureModule.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/DiamondStructureModule.ts","statementMap":{"0":{"start":{"line":9,"column":0},"end":{"line":9,"column":62}},"1":{"start":{"line":10,"column":0},"end":{"line":10,"column":40}},"2":{"start":{"line":11,"column":17},"end":{"line":11,"column":34}},"3":{"start":{"line":12,"column":16},"end":{"line":12,"column":40}},"4":{"start":{"line":20,"column":8},"end":{"line":20,"column":38}},"5":{"start":{"line":21,"column":8},"end":{"line":21,"column":51}},"6":{"start":{"line":22,"column":8},"end":{"line":22,"column":107}},"7":{"start":{"line":23,"column":8},"end":{"line":23,"column":31}},"8":{"start":{"line":24,"column":8},"end":{"line":24,"column":37}},"9":{"start":{"line":26,"column":8},"end":{"line":47,"column":10}},"10":{"start":{"line":49,"column":8},"end":{"line":64,"column":10}},"11":{"start":{"line":70,"column":8},"end":{"line":120,"column":10}},"12":{"start":{"line":126,"column":23},"end":{"line":126,"column":25}},"13":{"start":{"line":127,"column":25},"end":{"line":127,"column":27}},"14":{"start":{"line":129,"column":8},"end":{"line":132,"column":9}},"15":{"start":{"line":131,"column":12},"end":{"line":131,"column":65}},"16":{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},"17":{"start":{"line":134,"column":12},"end":{"line":134,"column":63}},"18":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"19":{"start":{"line":137,"column":12},"end":{"line":137,"column":62}},"20":{"start":{"line":139,"column":8},"end":{"line":142,"column":9}},"21":{"start":{"line":141,"column":12},"end":{"line":141,"column":68}},"22":{"start":{"line":143,"column":8},"end":{"line":146,"column":9}},"23":{"start":{"line":145,"column":12},"end":{"line":145,"column":71}},"24":{"start":{"line":147,"column":8},"end":{"line":150,"column":9}},"25":{"start":{"line":149,"column":12},"end":{"line":149,"column":67}},"26":{"start":{"line":151,"column":8},"end":{"line":155,"column":9}},"27":{"start":{"line":154,"column":12},"end":{"line":154,"column":78}},"28":{"start":{"line":156,"column":8},"end":{"line":159,"column":9}},"29":{"start":{"line":158,"column":12},"end":{"line":158,"column":66}},"30":{"start":{"line":160,"column":8},"end":{"line":164,"column":10}},"31":{"start":{"line":170,"column":8},"end":{"line":170,"column":20}},"32":{"start":{"line":176,"column":26},"end":{"line":176,"column":36}},"33":{"start":{"line":177,"column":23},"end":{"line":177,"column":25}},"34":{"start":{"line":178,"column":29},"end":{"line":178,"column":58}},"35":{"start":{"line":179,"column":8},"end":{"line":179,"column":83}},"36":{"start":{"line":180,"column":8},"end":{"line":244,"column":9}},"37":{"start":{"line":182,"column":12},"end":{"line":182,"column":75}},"38":{"start":{"line":183,"column":29},"end":{"line":183,"column":72}},"39":{"start":{"line":185,"column":12},"end":{"line":185,"column":84}},"40":{"start":{"line":186,"column":32},"end":{"line":186,"column":85}},"41":{"start":{"line":187,"column":12},"end":{"line":187,"column":40}},"42":{"start":{"line":189,"column":12},"end":{"line":189,"column":74}},"43":{"start":{"line":190,"column":32},"end":{"line":190,"column":82}},"44":{"start":{"line":191,"column":12},"end":{"line":191,"column":40}},"45":{"start":{"line":193,"column":12},"end":{"line":193,"column":78}},"46":{"start":{"line":194,"column":37},"end":{"line":194,"column":90}},"47":{"start":{"line":195,"column":12},"end":{"line":195,"column":45}},"48":{"start":{"line":197,"column":12},"end":{"line":201,"column":13}},"49":{"start":{"line":198,"column":16},"end":{"line":198,"column":79}},"50":{"start":{"line":199,"column":38},"end":{"line":199,"column":106}},"51":{"start":{"line":200,"column":16},"end":{"line":200,"column":46}},"52":{"start":{"line":203,"column":12},"end":{"line":203,"column":75}},"53":{"start":{"line":204,"column":40},"end":{"line":204,"column":91}},"54":{"start":{"line":205,"column":12},"end":{"line":205,"column":48}},"55":{"start":{"line":206,"column":34},"end":{"line":206,"column":56}},"56":{"start":{"line":207,"column":12},"end":{"line":207,"column":104}},"57":{"start":{"line":209,"column":35},"end":{"line":209,"column":100}},"58":{"start":{"line":209,"column":54},"end":{"line":209,"column":99}},"59":{"start":{"line":210,"column":32},"end":{"line":210,"column":94}},"60":{"start":{"line":210,"column":51},"end":{"line":210,"column":93}},"61":{"start":{"line":211,"column":34},"end":{"line":211,"column":98}},"62":{"start":{"line":211,"column":53},"end":{"line":211,"column":97}},"63":{"start":{"line":212,"column":25},"end":{"line":212,"column":54}},"64":{"start":{"line":213,"column":12},"end":{"line":221,"column":13}},"65":{"start":{"line":214,"column":16},"end":{"line":214,"column":55}},"66":{"start":{"line":216,"column":17},"end":{"line":221,"column":13}},"67":{"start":{"line":217,"column":16},"end":{"line":217,"column":55}},"68":{"start":{"line":219,"column":17},"end":{"line":221,"column":13}},"69":{"start":{"line":220,"column":16},"end":{"line":220,"column":58}},"70":{"start":{"line":223,"column":29},"end":{"line":226,"column":13}},"71":{"start":{"line":227,"column":12},"end":{"line":232,"column":14}},"72":{"start":{"line":235,"column":34},"end":{"line":235,"column":56}},"73":{"start":{"line":236,"column":12},"end":{"line":236,"column":98}},"74":{"start":{"line":237,"column":12},"end":{"line":237,"column":200}},"75":{"start":{"line":238,"column":12},"end":{"line":243,"column":14}},"76":{"start":{"line":250,"column":38},"end":{"line":250,"column":45}},"77":{"start":{"line":252,"column":21},"end":{"line":252,"column":23}},"78":{"start":{"line":253,"column":34},"end":{"line":253,"column":39}},"79":{"start":{"line":254,"column":8},"end":{"line":266,"column":9}},"80":{"start":{"line":255,"column":36},"end":{"line":255,"column":115}},"81":{"start":{"line":256,"column":30},"end":{"line":256,"column":60}},"82":{"start":{"line":257,"column":12},"end":{"line":261,"column":16}},"83":{"start":{"line":257,"column":43},"end":{"line":261,"column":13}},"84":{"start":{"line":259,"column":58},"end":{"line":259,"column":73}},"85":{"start":{"line":262,"column":12},"end":{"line":262,"column":39}},"86":{"start":{"line":265,"column":12},"end":{"line":265,"column":99}},"87":{"start":{"line":268,"column":28},"end":{"line":268,"column":41}},"88":{"start":{"line":269,"column":31},"end":{"line":269,"column":93}},"89":{"start":{"line":269,"column":61},"end":{"line":269,"column":89}},"90":{"start":{"line":271,"column":29},"end":{"line":271,"column":61}},"91":{"start":{"line":271,"column":49},"end":{"line":271,"column":60}},"92":{"start":{"line":272,"column":31},"end":{"line":272,"column":40}},"93":{"start":{"line":273,"column":8},"end":{"line":275,"column":9}},"94":{"start":{"line":274,"column":12},"end":{"line":274,"column":82}},"95":{"start":{"line":276,"column":35},"end":{"line":278,"column":45}},"96":{"start":{"line":277,"column":36},"end":{"line":277,"column":45}},"97":{"start":{"line":278,"column":36},"end":{"line":278,"column":44}},"98":{"start":{"line":280,"column":34},"end":{"line":282,"column":38}},"99":{"start":{"line":281,"column":25},"end":{"line":281,"column":83}},"100":{"start":{"line":282,"column":26},"end":{"line":282,"column":37}},"101":{"start":{"line":284,"column":34},"end":{"line":284,"column":112}},"102":{"start":{"line":285,"column":38},"end":{"line":285,"column":110}},"103":{"start":{"line":287,"column":32},"end":{"line":287,"column":70}},"104":{"start":{"line":288,"column":8},"end":{"line":298,"column":10}},"105":{"start":{"line":304,"column":23},"end":{"line":304,"column":25}},"106":{"start":{"line":306,"column":8},"end":{"line":308,"column":9}},"107":{"start":{"line":307,"column":12},"end":{"line":307,"column":274}},"108":{"start":{"line":310,"column":8},"end":{"line":312,"column":9}},"109":{"start":{"line":311,"column":12},"end":{"line":311,"column":292}},"110":{"start":{"line":314,"column":8},"end":{"line":316,"column":9}},"111":{"start":{"line":315,"column":12},"end":{"line":315,"column":257}},"112":{"start":{"line":317,"column":8},"end":{"line":317,"column":22}},"113":{"start":{"line":323,"column":23},"end":{"line":323,"column":25}},"114":{"start":{"line":325,"column":8},"end":{"line":327,"column":9}},"115":{"start":{"line":326,"column":12},"end":{"line":326,"column":290}},"116":{"start":{"line":329,"column":8},"end":{"line":331,"column":9}},"117":{"start":{"line":330,"column":12},"end":{"line":330,"column":271}},"118":{"start":{"line":333,"column":8},"end":{"line":335,"column":9}},"119":{"start":{"line":334,"column":12},"end":{"line":334,"column":259}},"120":{"start":{"line":336,"column":8},"end":{"line":336,"column":22}},"121":{"start":{"line":342,"column":23},"end":{"line":342,"column":25}},"122":{"start":{"line":344,"column":8},"end":{"line":346,"column":9}},"123":{"start":{"line":345,"column":12},"end":{"line":345,"column":351}},"124":{"start":{"line":348,"column":8},"end":{"line":350,"column":9}},"125":{"start":{"line":349,"column":12},"end":{"line":349,"column":319}},"126":{"start":{"line":351,"column":8},"end":{"line":351,"column":22}},"127":{"start":{"line":357,"column":23},"end":{"line":357,"column":25}},"128":{"start":{"line":359,"column":31},"end":{"line":359,"column":47}},"129":{"start":{"line":360,"column":8},"end":{"line":362,"column":9}},"130":{"start":{"line":361,"column":12},"end":{"line":361,"column":262}},"131":{"start":{"line":363,"column":8},"end":{"line":363,"column":22}},"132":{"start":{"line":369,"column":23},"end":{"line":369,"column":25}},"133":{"start":{"line":370,"column":38},"end":{"line":370,"column":45}},"134":{"start":{"line":372,"column":8},"end":{"line":384,"column":9}},"135":{"start":{"line":373,"column":12},"end":{"line":383,"column":13}},"136":{"start":{"line":374,"column":40},"end":{"line":374,"column":119}},"137":{"start":{"line":376,"column":16},"end":{"line":376,"column":47}},"138":{"start":{"line":378,"column":16},"end":{"line":378,"column":55}},"139":{"start":{"line":379,"column":16},"end":{"line":379,"column":83}},"140":{"start":{"line":382,"column":16},"end":{"line":382,"column":226}},"141":{"start":{"line":386,"column":30},"end":{"line":386,"column":137}},"142":{"start":{"line":387,"column":8},"end":{"line":399,"column":9}},"143":{"start":{"line":388,"column":12},"end":{"line":398,"column":13}},"144":{"start":{"line":389,"column":40},"end":{"line":389,"column":120}},"145":{"start":{"line":391,"column":39},"end":{"line":391,"column":92}},"146":{"start":{"line":392,"column":16},"end":{"line":394,"column":17}},"147":{"start":{"line":393,"column":20},"end":{"line":393,"column":207}},"148":{"start":{"line":397,"column":16},"end":{"line":397,"column":216}},"149":{"start":{"line":400,"column":8},"end":{"line":400,"column":22}},"150":{"start":{"line":404,"column":8},"end":{"line":404,"column":53}},"151":{"start":{"line":407,"column":8},"end":{"line":409,"column":9}},"152":{"start":{"line":408,"column":12},"end":{"line":408,"column":33}},"153":{"start":{"line":412,"column":8},"end":{"line":420,"column":10}},"154":{"start":{"line":423,"column":8},"end":{"line":430,"column":9}},"155":{"start":{"line":425,"column":12},"end":{"line":425,"column":59}},"156":{"start":{"line":429,"column":12},"end":{"line":429,"column":82}},"157":{"start":{"line":429,"column":36},"end":{"line":429,"column":80}},"158":{"start":{"line":434,"column":28},"end":{"line":434,"column":72}},"159":{"start":{"line":434,"column":55},"end":{"line":434,"column":70}},"160":{"start":{"line":435,"column":8},"end":{"line":437,"column":9}},"161":{"start":{"line":436,"column":12},"end":{"line":436,"column":39}},"162":{"start":{"line":438,"column":8},"end":{"line":440,"column":9}},"163":{"start":{"line":439,"column":12},"end":{"line":439,"column":37}},"164":{"start":{"line":441,"column":8},"end":{"line":443,"column":9}},"165":{"start":{"line":442,"column":12},"end":{"line":442,"column":36}},"166":{"start":{"line":444,"column":8},"end":{"line":444,"column":25}},"167":{"start":{"line":449,"column":8},"end":{"line":449,"column":25}},"168":{"start":{"line":452,"column":0},"end":{"line":452,"column":56}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":18},"end":{"line":65,"column":5}},"line":19},"1":{"name":"(anonymous_1)","decl":{"start":{"line":69,"column":4},"end":{"line":69,"column":5}},"loc":{"start":{"line":69,"column":24},"end":{"line":121,"column":5}},"line":69},"2":{"name":"(anonymous_2)","decl":{"start":{"line":125,"column":4},"end":{"line":125,"column":5}},"loc":{"start":{"line":125,"column":27},"end":{"line":165,"column":5}},"line":125},"3":{"name":"(anonymous_3)","decl":{"start":{"line":169,"column":4},"end":{"line":169,"column":5}},"loc":{"start":{"line":169,"column":39},"end":{"line":171,"column":5}},"line":169},"4":{"name":"(anonymous_4)","decl":{"start":{"line":175,"column":4},"end":{"line":175,"column":5}},"loc":{"start":{"line":175,"column":27},"end":{"line":245,"column":5}},"line":175},"5":{"name":"(anonymous_5)","decl":{"start":{"line":209,"column":49},"end":{"line":209,"column":50}},"loc":{"start":{"line":209,"column":54},"end":{"line":209,"column":99}},"line":209},"6":{"name":"(anonymous_6)","decl":{"start":{"line":210,"column":46},"end":{"line":210,"column":47}},"loc":{"start":{"line":210,"column":51},"end":{"line":210,"column":93}},"line":210},"7":{"name":"(anonymous_7)","decl":{"start":{"line":211,"column":48},"end":{"line":211,"column":49}},"loc":{"start":{"line":211,"column":53},"end":{"line":211,"column":97}},"line":211},"8":{"name":"(anonymous_8)","decl":{"start":{"line":249,"column":4},"end":{"line":249,"column":5}},"loc":{"start":{"line":249,"column":43},"end":{"line":299,"column":5}},"line":249},"9":{"name":"(anonymous_9)","decl":{"start":{"line":257,"column":35},"end":{"line":257,"column":36}},"loc":{"start":{"line":257,"column":43},"end":{"line":261,"column":13}},"line":257},"10":{"name":"(anonymous_10)","decl":{"start":{"line":259,"column":51},"end":{"line":259,"column":52}},"loc":{"start":{"line":259,"column":58},"end":{"line":259,"column":73}},"line":259},"11":{"name":"(anonymous_11)","decl":{"start":{"line":269,"column":45},"end":{"line":269,"column":46}},"loc":{"start":{"line":269,"column":61},"end":{"line":269,"column":89}},"line":269},"12":{"name":"(anonymous_12)","decl":{"start":{"line":271,"column":44},"end":{"line":271,"column":45}},"loc":{"start":{"line":271,"column":49},"end":{"line":271,"column":60}},"line":271},"13":{"name":"(anonymous_13)","decl":{"start":{"line":277,"column":20},"end":{"line":277,"column":21}},"loc":{"start":{"line":277,"column":36},"end":{"line":277,"column":45}},"line":277},"14":{"name":"(anonymous_14)","decl":{"start":{"line":278,"column":17},"end":{"line":278,"column":18}},"loc":{"start":{"line":278,"column":36},"end":{"line":278,"column":44}},"line":278},"15":{"name":"(anonymous_15)","decl":{"start":{"line":281,"column":20},"end":{"line":281,"column":21}},"loc":{"start":{"line":281,"column":25},"end":{"line":281,"column":83}},"line":281},"16":{"name":"(anonymous_16)","decl":{"start":{"line":282,"column":21},"end":{"line":282,"column":22}},"loc":{"start":{"line":282,"column":26},"end":{"line":282,"column":37}},"line":282},"17":{"name":"(anonymous_17)","decl":{"start":{"line":303,"column":4},"end":{"line":303,"column":5}},"loc":{"start":{"line":303,"column":47},"end":{"line":318,"column":5}},"line":303},"18":{"name":"(anonymous_18)","decl":{"start":{"line":322,"column":4},"end":{"line":322,"column":5}},"loc":{"start":{"line":322,"column":44},"end":{"line":337,"column":5}},"line":322},"19":{"name":"(anonymous_19)","decl":{"start":{"line":341,"column":4},"end":{"line":341,"column":5}},"loc":{"start":{"line":341,"column":47},"end":{"line":352,"column":5}},"line":341},"20":{"name":"(anonymous_20)","decl":{"start":{"line":356,"column":4},"end":{"line":356,"column":5}},"loc":{"start":{"line":356,"column":51},"end":{"line":364,"column":5}},"line":356},"21":{"name":"(anonymous_21)","decl":{"start":{"line":368,"column":4},"end":{"line":368,"column":5}},"loc":{"start":{"line":368,"column":51},"end":{"line":401,"column":5}},"line":368},"22":{"name":"(anonymous_22)","decl":{"start":{"line":403,"column":4},"end":{"line":403,"column":5}},"loc":{"start":{"line":403,"column":29},"end":{"line":405,"column":5}},"line":403},"23":{"name":"(anonymous_23)","decl":{"start":{"line":406,"column":4},"end":{"line":406,"column":5}},"loc":{"start":{"line":406,"column":33},"end":{"line":410,"column":5}},"line":406},"24":{"name":"(anonymous_24)","decl":{"start":{"line":411,"column":4},"end":{"line":411,"column":5}},"loc":{"start":{"line":411,"column":86},"end":{"line":421,"column":5}},"line":411},"25":{"name":"(anonymous_25)","decl":{"start":{"line":422,"column":4},"end":{"line":422,"column":5}},"loc":{"start":{"line":422,"column":42},"end":{"line":431,"column":5}},"line":422},"26":{"name":"(anonymous_26)","decl":{"start":{"line":429,"column":31},"end":{"line":429,"column":32}},"loc":{"start":{"line":429,"column":36},"end":{"line":429,"column":80}},"line":429},"27":{"name":"(anonymous_27)","decl":{"start":{"line":432,"column":4},"end":{"line":432,"column":5}},"loc":{"start":{"line":432,"column":42},"end":{"line":445,"column":5}},"line":432},"28":{"name":"(anonymous_28)","decl":{"start":{"line":434,"column":50},"end":{"line":434,"column":51}},"loc":{"start":{"line":434,"column":55},"end":{"line":434,"column":70}},"line":434},"29":{"name":"(anonymous_29)","decl":{"start":{"line":446,"column":4},"end":{"line":446,"column":5}},"loc":{"start":{"line":446,"column":38},"end":{"line":450,"column":5}},"line":446}},"branchMap":{"0":{"loc":{"start":{"line":129,"column":8},"end":{"line":132,"column":9}},"type":"if","locations":[{"start":{"line":129,"column":8},"end":{"line":132,"column":9}},{"start":{},"end":{}}],"line":129},"1":{"loc":{"start":{"line":129,"column":12},"end":{"line":130,"column":59}},"type":"binary-expr","locations":[{"start":{"line":129,"column":12},"end":{"line":129,"column":52}},{"start":{"line":130,"column":12},"end":{"line":130,"column":59}}],"line":129},"2":{"loc":{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},"type":"if","locations":[{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},{"start":{},"end":{}}],"line":133},"3":{"loc":{"start":{"line":133,"column":12},"end":{"line":133,"column":99}},"type":"binary-expr","locations":[{"start":{"line":133,"column":12},"end":{"line":133,"column":50}},{"start":{"line":133,"column":54},"end":{"line":133,"column":99}}],"line":133},"4":{"loc":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},{"start":{},"end":{}}],"line":136},"5":{"loc":{"start":{"line":136,"column":12},"end":{"line":136,"column":97}},"type":"binary-expr","locations":[{"start":{"line":136,"column":12},"end":{"line":136,"column":49}},{"start":{"line":136,"column":53},"end":{"line":136,"column":97}}],"line":136},"6":{"loc":{"start":{"line":139,"column":8},"end":{"line":142,"column":9}},"type":"if","locations":[{"start":{"line":139,"column":8},"end":{"line":142,"column":9}},{"start":{},"end":{}}],"line":139},"7":{"loc":{"start":{"line":139,"column":12},"end":{"line":140,"column":62}},"type":"binary-expr","locations":[{"start":{"line":139,"column":12},"end":{"line":139,"column":55}},{"start":{"line":140,"column":12},"end":{"line":140,"column":62}}],"line":139},"8":{"loc":{"start":{"line":143,"column":8},"end":{"line":146,"column":9}},"type":"if","locations":[{"start":{"line":143,"column":8},"end":{"line":146,"column":9}},{"start":{},"end":{}}],"line":143},"9":{"loc":{"start":{"line":143,"column":12},"end":{"line":144,"column":82}},"type":"binary-expr","locations":[{"start":{"line":143,"column":12},"end":{"line":143,"column":46}},{"start":{"line":144,"column":13},"end":{"line":144,"column":53}},{"start":{"line":144,"column":57},"end":{"line":144,"column":81}}],"line":143},"10":{"loc":{"start":{"line":147,"column":8},"end":{"line":150,"column":9}},"type":"if","locations":[{"start":{"line":147,"column":8},"end":{"line":150,"column":9}},{"start":{},"end":{}}],"line":147},"11":{"loc":{"start":{"line":147,"column":12},"end":{"line":148,"column":82}},"type":"binary-expr","locations":[{"start":{"line":147,"column":12},"end":{"line":147,"column":46}},{"start":{"line":148,"column":13},"end":{"line":148,"column":53}},{"start":{"line":148,"column":57},"end":{"line":148,"column":81}}],"line":147},"12":{"loc":{"start":{"line":151,"column":8},"end":{"line":155,"column":9}},"type":"if","locations":[{"start":{"line":151,"column":8},"end":{"line":155,"column":9}},{"start":{},"end":{}}],"line":151},"13":{"loc":{"start":{"line":151,"column":12},"end":{"line":153,"column":55}},"type":"binary-expr","locations":[{"start":{"line":151,"column":12},"end":{"line":151,"column":46}},{"start":{"line":152,"column":12},"end":{"line":152,"column":46}},{"start":{"line":153,"column":12},"end":{"line":153,"column":55}}],"line":151},"14":{"loc":{"start":{"line":156,"column":8},"end":{"line":159,"column":9}},"type":"if","locations":[{"start":{"line":156,"column":8},"end":{"line":159,"column":9}},{"start":{},"end":{}}],"line":156},"15":{"loc":{"start":{"line":156,"column":12},"end":{"line":157,"column":60}},"type":"binary-expr","locations":[{"start":{"line":156,"column":12},"end":{"line":156,"column":53}},{"start":{"line":157,"column":12},"end":{"line":157,"column":60}}],"line":156},"16":{"loc":{"start":{"line":197,"column":12},"end":{"line":201,"column":13}},"type":"if","locations":[{"start":{"line":197,"column":12},"end":{"line":201,"column":13}},{"start":{},"end":{}}],"line":197},"17":{"loc":{"start":{"line":197,"column":16},"end":{"line":197,"column":77}},"type":"binary-expr","locations":[{"start":{"line":197,"column":16},"end":{"line":197,"column":49}},{"start":{"line":197,"column":53},"end":{"line":197,"column":77}}],"line":197},"18":{"loc":{"start":{"line":213,"column":12},"end":{"line":221,"column":13}},"type":"if","locations":[{"start":{"line":213,"column":12},"end":{"line":221,"column":13}},{"start":{"line":216,"column":17},"end":{"line":221,"column":13}}],"line":213},"19":{"loc":{"start":{"line":216,"column":17},"end":{"line":221,"column":13}},"type":"if","locations":[{"start":{"line":216,"column":17},"end":{"line":221,"column":13}},{"start":{"line":219,"column":17},"end":{"line":221,"column":13}}],"line":216},"20":{"loc":{"start":{"line":219,"column":17},"end":{"line":221,"column":13}},"type":"if","locations":[{"start":{"line":219,"column":17},"end":{"line":221,"column":13}},{"start":{},"end":{}}],"line":219},"21":{"loc":{"start":{"line":274,"column":42},"end":{"line":274,"column":75}},"type":"binary-expr","locations":[{"start":{"line":274,"column":42},"end":{"line":274,"column":70}},{"start":{"line":274,"column":74},"end":{"line":274,"column":75}}],"line":274},"22":{"loc":{"start":{"line":306,"column":8},"end":{"line":308,"column":9}},"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":308,"column":9}},{"start":{},"end":{}}],"line":306},"23":{"loc":{"start":{"line":306,"column":12},"end":{"line":306,"column":79}},"type":"binary-expr","locations":[{"start":{"line":306,"column":12},"end":{"line":306,"column":32}},{"start":{"line":306,"column":36},"end":{"line":306,"column":79}}],"line":306},"24":{"loc":{"start":{"line":310,"column":8},"end":{"line":312,"column":9}},"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":312,"column":9}},{"start":{},"end":{}}],"line":310},"25":{"loc":{"start":{"line":310,"column":12},"end":{"line":310,"column":79}},"type":"binary-expr","locations":[{"start":{"line":310,"column":12},"end":{"line":310,"column":32}},{"start":{"line":310,"column":36},"end":{"line":310,"column":79}}],"line":310},"26":{"loc":{"start":{"line":314,"column":8},"end":{"line":316,"column":9}},"type":"if","locations":[{"start":{"line":314,"column":8},"end":{"line":316,"column":9}},{"start":{},"end":{}}],"line":314},"27":{"loc":{"start":{"line":325,"column":8},"end":{"line":327,"column":9}},"type":"if","locations":[{"start":{"line":325,"column":8},"end":{"line":327,"column":9}},{"start":{},"end":{}}],"line":325},"28":{"loc":{"start":{"line":325,"column":12},"end":{"line":325,"column":81}},"type":"binary-expr","locations":[{"start":{"line":325,"column":12},"end":{"line":325,"column":48}},{"start":{"line":325,"column":52},"end":{"line":325,"column":81}}],"line":325},"29":{"loc":{"start":{"line":329,"column":8},"end":{"line":331,"column":9}},"type":"if","locations":[{"start":{"line":329,"column":8},"end":{"line":331,"column":9}},{"start":{},"end":{}}],"line":329},"30":{"loc":{"start":{"line":329,"column":12},"end":{"line":329,"column":77}},"type":"binary-expr","locations":[{"start":{"line":329,"column":12},"end":{"line":329,"column":46}},{"start":{"line":329,"column":50},"end":{"line":329,"column":77}}],"line":329},"31":{"loc":{"start":{"line":333,"column":8},"end":{"line":335,"column":9}},"type":"if","locations":[{"start":{"line":333,"column":8},"end":{"line":335,"column":9}},{"start":{},"end":{}}],"line":333},"32":{"loc":{"start":{"line":333,"column":12},"end":{"line":333,"column":80}},"type":"binary-expr","locations":[{"start":{"line":333,"column":12},"end":{"line":333,"column":45}},{"start":{"line":333,"column":49},"end":{"line":333,"column":80}}],"line":333},"33":{"loc":{"start":{"line":344,"column":8},"end":{"line":346,"column":9}},"type":"if","locations":[{"start":{"line":344,"column":8},"end":{"line":346,"column":9}},{"start":{},"end":{}}],"line":344},"34":{"loc":{"start":{"line":348,"column":8},"end":{"line":350,"column":9}},"type":"if","locations":[{"start":{"line":348,"column":8},"end":{"line":350,"column":9}},{"start":{},"end":{}}],"line":348},"35":{"loc":{"start":{"line":348,"column":12},"end":{"line":348,"column":83}},"type":"binary-expr","locations":[{"start":{"line":348,"column":12},"end":{"line":348,"column":49}},{"start":{"line":348,"column":53},"end":{"line":348,"column":83}}],"line":348},"36":{"loc":{"start":{"line":360,"column":8},"end":{"line":362,"column":9}},"type":"if","locations":[{"start":{"line":360,"column":8},"end":{"line":362,"column":9}},{"start":{},"end":{}}],"line":360},"37":{"loc":{"start":{"line":372,"column":8},"end":{"line":384,"column":9}},"type":"if","locations":[{"start":{"line":372,"column":8},"end":{"line":384,"column":9}},{"start":{},"end":{}}],"line":372},"38":{"loc":{"start":{"line":387,"column":8},"end":{"line":399,"column":9}},"type":"if","locations":[{"start":{"line":387,"column":8},"end":{"line":399,"column":9}},{"start":{},"end":{}}],"line":387},"39":{"loc":{"start":{"line":392,"column":16},"end":{"line":394,"column":17}},"type":"if","locations":[{"start":{"line":392,"column":16},"end":{"line":394,"column":17}},{"start":{},"end":{}}],"line":392},"40":{"loc":{"start":{"line":404,"column":16},"end":{"line":404,"column":51}},"type":"binary-expr","locations":[{"start":{"line":404,"column":16},"end":{"line":404,"column":45}},{"start":{"line":404,"column":49},"end":{"line":404,"column":51}}],"line":404},"41":{"loc":{"start":{"line":407,"column":8},"end":{"line":409,"column":9}},"type":"if","locations":[{"start":{"line":407,"column":8},"end":{"line":409,"column":9}},{"start":{},"end":{}}],"line":407},"42":{"loc":{"start":{"line":423,"column":8},"end":{"line":430,"column":9}},"type":"if","locations":[{"start":{"line":423,"column":8},"end":{"line":430,"column":9}},{"start":{"line":427,"column":13},"end":{"line":430,"column":9}}],"line":423},"43":{"loc":{"start":{"line":423,"column":12},"end":{"line":423,"column":66}},"type":"binary-expr","locations":[{"start":{"line":423,"column":12},"end":{"line":423,"column":33}},{"start":{"line":423,"column":37},"end":{"line":423,"column":66}}],"line":423},"44":{"loc":{"start":{"line":435,"column":8},"end":{"line":437,"column":9}},"type":"if","locations":[{"start":{"line":435,"column":8},"end":{"line":437,"column":9}},{"start":{},"end":{}}],"line":435},"45":{"loc":{"start":{"line":438,"column":8},"end":{"line":440,"column":9}},"type":"if","locations":[{"start":{"line":438,"column":8},"end":{"line":440,"column":9}},{"start":{},"end":{}}],"line":438},"46":{"loc":{"start":{"line":441,"column":8},"end":{"line":443,"column":9}},"type":"if","locations":[{"start":{"line":441,"column":8},"end":{"line":443,"column":9}},{"start":{},"end":{}}],"line":441}},"s":{"0":1,"1":1,"2":1,"3":1,"4":3,"5":3,"6":3,"7":3,"8":3,"9":3,"10":3,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":1},"f":{"0":3,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0]},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/DiamondStructureModule.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/DiamondStructureModule.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Diamond Structure Monitoring Module for Hardhat Diamond Monitor Plugin\n *\n * Monitors the overall structure and integrity of the diamond proxy.\n * This module checks fundamental diamond properties, facet relationships,\n * and structural consistency.\n */\n\nimport { ethers } from 'ethers';\nimport chalk from 'chalk';\n\nimport {\n  MonitoringModule,\n  MonitoringContext,\n  MonitoringResult,\n  MonitoringStatus,\n  SeverityLevel,\n  ConfigRequirement,\n  MonitoringIssue,\n  DiamondInfo,\n  NetworkInfo,\n  ValidationResult,\n} from '../core/types';\n\n/**\n * Facet information from on-chain query\n */\ninterface FacetInfo {\n  address: string;\n  selectors: string[];\n  name?: string;\n  version?: string;\n}\n\n/**\n * Diamond structure analysis result\n */\ninterface DiamondStructureAnalysis {\n  totalFacets: number;\n  totalSelectors: number;\n  diamondLoupePresent: boolean;\n  diamondCutPresent: boolean;\n  ownershipFacetPresent: boolean;\n  duplicateSelectors: string[];\n  orphanedSelectors: string[];\n  zeroAddressFacets: string[];\n  protocolVersion?: string;\n}\n\n/**\n * Configuration for diamond structure module\n */\ninterface DiamondStructureModuleConfig {\n  requireDiamondLoupe?: boolean;\n  requireDiamondCut?: boolean;\n  requireOwnership?: boolean;\n  allowZeroAddressFacets?: boolean;\n  minFacetCount?: number;\n  maxFacetCount?: number;\n  protocolVersionCheck?: boolean;\n  customChecks?: string[];\n}\n\n/**\n * Diamond Structure Monitoring Module for Hardhat Plugin\n *\n * Performs comprehensive structural monitoring of diamond proxy contracts.\n */\nexport class DiamondStructureModule implements MonitoringModule {\n  public readonly id = 'diamond-structure';\n  public readonly name = 'Diamond Structure Monitoring';\n  public readonly description =\n    'Monitors diamond proxy structure, facet relationships, and core functionality';\n  public readonly version = '1.0.0';\n  public readonly category = 'structural';\n\n  // Standard diamond interface selectors\n  private readonly standardSelectors = {\n    // DiamondLoupe\n    diamondLoupe: {\n      facets: '0x7a0ed627',\n      facetFunctionSelectors: '0xadfca15e',\n      facetAddresses: '0x52ef6b2c',\n      facetAddress: '0xcdffacc6',\n    },\n    // DiamondCut\n    diamondCut: {\n      diamondCut: '0x1f931c1c',\n    },\n    // Ownership\n    ownership: {\n      owner: '0x8da5cb5b',\n      transferOwnership: '0xf2fde38b',\n    },\n    // ERC165\n    erc165: {\n      supportsInterface: '0x01ffc9a7',\n    },\n  };\n\n  // Standard diamond ABIs\n  private readonly diamondABIs = {\n    loupe: [\n      'function facets() external view returns (tuple(address facetAddress, bytes4[] functionSelectors)[])',\n      'function facetFunctionSelectors(address facet) external view returns (bytes4[])',\n      'function facetAddresses() external view returns (address[])',\n      'function facetAddress(bytes4 selector) external view returns (address)',\n    ],\n    cut: [\n      'function diamondCut(tuple(address facetAddress, uint8 action, bytes4[] functionSelectors)[] _diamondCut, address _init, bytes _calldata) external',\n    ],\n    ownership: [\n      'function owner() external view returns (address)',\n      'function transferOwnership(address newOwner) external',\n    ],\n    erc165: ['function supportsInterface(bytes4 interfaceId) external view returns (bool)'],\n  };\n\n  /**\n   * Get configuration requirements for this module\n   */\n  public getRequiredConfig(): ConfigRequirement[] {\n    return [\n      {\n        key: 'requireDiamondLoupe',\n        type: 'boolean',\n        required: false,\n        description: 'Whether DiamondLoupe facet is required',\n        defaultValue: true,\n      },\n      {\n        key: 'requireDiamondCut',\n        type: 'boolean',\n        required: false,\n        description: 'Whether DiamondCut facet is required',\n        defaultValue: true,\n      },\n      {\n        key: 'requireOwnership',\n        type: 'boolean',\n        required: false,\n        description: 'Whether ownership facet is required',\n        defaultValue: true,\n      },\n      {\n        key: 'allowZeroAddressFacets',\n        type: 'boolean',\n        required: false,\n        description: 'Whether to allow facets with zero address',\n        defaultValue: false,\n      },\n      {\n        key: 'minFacetCount',\n        type: 'number',\n        required: false,\n        description: 'Minimum number of facets required',\n        defaultValue: 1,\n      },\n      {\n        key: 'maxFacetCount',\n        type: 'number',\n        required: false,\n        description: 'Maximum number of facets allowed',\n        defaultValue: 50,\n      },\n      {\n        key: 'protocolVersionCheck',\n        type: 'boolean',\n        required: false,\n        description: 'Whether to monitor protocol version',\n        defaultValue: true,\n      },\n    ];\n  }\n\n  /**\n   * Validate module configuration\n   */\n  public validateConfig(config: any): ValidationResult {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    // Validate config types\n    if (\n      config.requireDiamondLoupe !== undefined &&\n      typeof config.requireDiamondLoupe !== 'boolean'\n    ) {\n      errors.push('requireDiamondLoupe must be a boolean');\n    }\n\n    if (config.requireDiamondCut !== undefined && typeof config.requireDiamondCut !== 'boolean') {\n      errors.push('requireDiamondCut must be a boolean');\n    }\n\n    if (config.requireOwnership !== undefined && typeof config.requireOwnership !== 'boolean') {\n      errors.push('requireOwnership must be a boolean');\n    }\n\n    if (\n      config.allowZeroAddressFacets !== undefined &&\n      typeof config.allowZeroAddressFacets !== 'boolean'\n    ) {\n      errors.push('allowZeroAddressFacets must be a boolean');\n    }\n\n    if (\n      config.minFacetCount !== undefined &&\n      (typeof config.minFacetCount !== 'number' || config.minFacetCount < 0)\n    ) {\n      errors.push('minFacetCount must be a non-negative number');\n    }\n\n    if (\n      config.maxFacetCount !== undefined &&\n      (typeof config.maxFacetCount !== 'number' || config.maxFacetCount < 1)\n    ) {\n      errors.push('maxFacetCount must be a positive number');\n    }\n\n    if (\n      config.minFacetCount !== undefined &&\n      config.maxFacetCount !== undefined &&\n      config.minFacetCount > config.maxFacetCount\n    ) {\n      errors.push('minFacetCount cannot be greater than maxFacetCount');\n    }\n\n    if (\n      config.protocolVersionCheck !== undefined &&\n      typeof config.protocolVersionCheck !== 'boolean'\n    ) {\n      errors.push('protocolVersionCheck must be a boolean');\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n      warnings,\n    };\n  }\n\n  /**\n   * Check if this module can monitor the given diamond\n   */\n  public async canMonitor(diamond: DiamondInfo, network: NetworkInfo): Promise<boolean> {\n    return true; // This module can monitor any diamond\n  }\n\n  /**\n   * Execute diamond structure monitoring\n   */\n  public async monitor(context: MonitoringContext): Promise<MonitoringResult> {\n    const startTime = Date.now();\n    const issues: MonitoringIssue[] = [];\n    const moduleConfig = this.getModuleConfig<DiamondStructureModuleConfig>(context);\n\n    this.log(context, 'info', '🏗️  Starting diamond structure monitoring...');\n\n    try {\n      // 1. Analyze diamond structure\n      this.log(context, 'info', '🔍 Analyzing diamond structure...');\n      const analysis = await this.analyzeDiamondStructure(context);\n\n      // 2. Monitor basic diamond requirements\n      this.log(context, 'info', '✅ Monitoring basic diamond requirements...');\n      const basicIssues = this.monitorBasicRequirements(analysis, moduleConfig);\n      issues.push(...basicIssues);\n\n      // 3. Monitor standard facets\n      this.log(context, 'info', '🧩 Monitoring standard facets...');\n      const facetIssues = this.monitorStandardFacets(analysis, moduleConfig);\n      issues.push(...facetIssues);\n\n      // 4. Check for structural issues\n      this.log(context, 'info', '🔧 Checking for structural issues...');\n      const structuralIssues = this.checkStructuralIntegrity(analysis, moduleConfig);\n      issues.push(...structuralIssues);\n\n      // 5. Monitor protocol version if enabled\n      if (moduleConfig.protocolVersionCheck && analysis.protocolVersion) {\n        this.log(context, 'info', '📋 Monitoring protocol version...');\n        const versionIssues = await this.monitorProtocolVersion(context, analysis.protocolVersion);\n        issues.push(...versionIssues);\n      }\n\n      // 6. Test core functionality\n      this.log(context, 'info', '⚙️  Testing core functionality...');\n      const functionalityIssues = await this.testCoreFunctionality(context, analysis);\n      issues.push(...functionalityIssues);\n\n      const executionTime = Date.now() - startTime;\n      this.log(context, 'info', `✅ Diamond structure monitoring completed in ${executionTime}ms`);\n\n      // Determine overall status\n      const criticalIssues = issues.filter(i => i.severity === SeverityLevel.CRITICAL);\n      const errorIssues = issues.filter(i => i.severity === SeverityLevel.ERROR);\n      const warningIssues = issues.filter(i => i.severity === SeverityLevel.WARNING);\n\n      let status = MonitoringStatus.PASS;\n      if (criticalIssues.length > 0) {\n        status = MonitoringStatus.FAIL;\n      } else if (errorIssues.length > 0) {\n        status = MonitoringStatus.FAIL;\n      } else if (warningIssues.length > 0) {\n        status = MonitoringStatus.WARNING;\n      }\n\n      // Create detailed metadata\n      const metadata = {\n        analysis,\n        moduleConfig,\n      };\n\n      return {\n        status,\n        issues,\n        executionTime,\n        metadata,\n      };\n    } catch (error) {\n      const executionTime = Date.now() - startTime;\n      this.log(\n        context,\n        'error',\n        `❌ Diamond structure monitoring failed: ${(error as Error).message}`\n      );\n\n      issues.push(\n        this.createIssue(\n          'monitoring-error',\n          'Diamond Structure Monitoring Failed',\n          `Diamond structure monitoring failed: ${(error as Error).message}`,\n          SeverityLevel.CRITICAL,\n          'system'\n        )\n      );\n\n      return {\n        status: MonitoringStatus.FAIL,\n        issues,\n        executionTime,\n        metadata: { error: (error as Error).message },\n      };\n    }\n  }\n\n  /**\n   * Analyze the diamond structure\n   */\n  private async analyzeDiamondStructure(\n    context: MonitoringContext\n  ): Promise<DiamondStructureAnalysis> {\n    const { diamond, provider } = context;\n\n    // Query facets using DiamondLoupe\n    let facets: FacetInfo[] = [];\n    let diamondLoupePresent = false;\n\n    try {\n      const diamondContract = new ethers.Contract(\n        diamond.address,\n        this.diamondABIs.loupe,\n        provider\n      );\n      const facetData = await diamondContract.facets();\n\n      facets = facetData.map((f: any) => ({\n        address: f.facetAddress.toLowerCase(),\n        selectors: f.functionSelectors.map((s: string) => s.toLowerCase()),\n        name: this.identifyFacetName(f.facetAddress, f.functionSelectors),\n      }));\n\n      diamondLoupePresent = true;\n    } catch (error) {\n      this.log(\n        context,\n        'warn',\n        `Could not query facets via DiamondLoupe: ${(error as Error).message}`\n      );\n    }\n\n    // Calculate totals and analyze structure\n    const totalFacets = facets.length;\n    const totalSelectors = facets.reduce((sum, facet) => sum + facet.selectors.length, 0);\n\n    // Check for duplicate selectors\n    const allSelectors = facets.flatMap(f => f.selectors);\n    const selectorCounts = new Map<string, number>();\n    for (const selector of allSelectors) {\n      selectorCounts.set(selector, (selectorCounts.get(selector) || 0) + 1);\n    }\n    const duplicateSelectors = Array.from(selectorCounts.entries())\n      .filter(([_, count]) => count > 1)\n      .map(([selector, _]) => selector);\n\n    // Find zero address facets\n    const zeroAddressFacets = facets\n      .filter(f => f.address === '0x0000000000000000000000000000000000000000')\n      .flatMap(f => f.selectors);\n\n    // Check for standard facets\n    const diamondCutPresent = this.hasFunctionSelector(\n      facets,\n      this.standardSelectors.diamondCut.diamondCut\n    );\n    const ownershipFacetPresent = this.hasFunctionSelector(\n      facets,\n      this.standardSelectors.ownership.owner\n    );\n\n    // Try to get protocol version\n    const protocolVersion = await this.getProtocolVersion(context);\n\n    return {\n      totalFacets,\n      totalSelectors,\n      diamondLoupePresent,\n      diamondCutPresent,\n      ownershipFacetPresent,\n      duplicateSelectors,\n      orphanedSelectors: [], // Will be populated if needed\n      zeroAddressFacets,\n      protocolVersion,\n    };\n  }\n\n  /**\n   * Monitor basic diamond requirements\n   */\n  private monitorBasicRequirements(\n    analysis: DiamondStructureAnalysis,\n    config: DiamondStructureModuleConfig\n  ): MonitoringIssue[] {\n    const issues: MonitoringIssue[] = [];\n\n    // Check minimum facet count\n    if (config.minFacetCount && analysis.totalFacets < config.minFacetCount) {\n      issues.push(\n        this.createIssue(\n          'min-facet-count',\n          'Insufficient Facet Count',\n          `Diamond has ${analysis.totalFacets} facets, but minimum required is ${config.minFacetCount}`,\n          SeverityLevel.ERROR,\n          'structure',\n          'Add more facets to meet minimum requirements'\n        )\n      );\n    }\n\n    // Check maximum facet count\n    if (config.maxFacetCount && analysis.totalFacets > config.maxFacetCount) {\n      issues.push(\n        this.createIssue(\n          'max-facet-count',\n          'Excessive Facet Count',\n          `Diamond has ${analysis.totalFacets} facets, but maximum allowed is ${config.maxFacetCount}`,\n          SeverityLevel.WARNING,\n          'structure',\n          'Consider reducing the number of facets for better gas efficiency'\n        )\n      );\n    }\n\n    // Check for empty diamond\n    if (analysis.totalFacets === 0) {\n      issues.push(\n        this.createIssue(\n          'empty-diamond',\n          'Empty Diamond',\n          'Diamond has no facets - this indicates a serious deployment issue',\n          SeverityLevel.CRITICAL,\n          'structure',\n          'Monitor diamond deployment and ensure facets are properly added'\n        )\n      );\n    }\n\n    return issues;\n  }\n\n  /**\n   * Monitor standard facets\n   */\n  private monitorStandardFacets(\n    analysis: DiamondStructureAnalysis,\n    config: DiamondStructureModuleConfig\n  ): MonitoringIssue[] {\n    const issues: MonitoringIssue[] = [];\n\n    // Check DiamondLoupe requirement\n    if (config.requireDiamondLoupe !== false && !analysis.diamondLoupePresent) {\n      issues.push(\n        this.createIssue(\n          'missing-diamond-loupe',\n          'Missing DiamondLoupe Facet',\n          'DiamondLoupe facet is required for diamond introspection but not found',\n          SeverityLevel.ERROR,\n          'standard-facets',\n          'Add DiamondLoupe facet to enable diamond introspection capabilities'\n        )\n      );\n    }\n\n    // Check DiamondCut requirement\n    if (config.requireDiamondCut !== false && !analysis.diamondCutPresent) {\n      issues.push(\n        this.createIssue(\n          'missing-diamond-cut',\n          'Missing DiamondCut Facet',\n          'DiamondCut facet is required for diamond upgrades but not found',\n          SeverityLevel.ERROR,\n          'standard-facets',\n          'Add DiamondCut facet to enable diamond upgrade capabilities'\n        )\n      );\n    }\n\n    // Check Ownership requirement\n    if (config.requireOwnership !== false && !analysis.ownershipFacetPresent) {\n      issues.push(\n        this.createIssue(\n          'missing-ownership',\n          'Missing Ownership Facet',\n          'Ownership facet is required for access control but not found',\n          SeverityLevel.WARNING,\n          'standard-facets',\n          'Add ownership facet to enable proper access control'\n        )\n      );\n    }\n\n    return issues;\n  }\n\n  /**\n   * Check structural integrity\n   */\n  private checkStructuralIntegrity(\n    analysis: DiamondStructureAnalysis,\n    config: DiamondStructureModuleConfig\n  ): MonitoringIssue[] {\n    const issues: MonitoringIssue[] = [];\n\n    // Check for duplicate selectors\n    if (analysis.duplicateSelectors.length > 0) {\n      issues.push(\n        this.createIssue(\n          'duplicate-selectors',\n          'Duplicate Function Selectors',\n          `Found ${analysis.duplicateSelectors.length} duplicate selectors: ${analysis.duplicateSelectors.join(', ')}`,\n          SeverityLevel.CRITICAL,\n          'integrity',\n          'This indicates a critical diamond implementation error - remove duplicate selectors immediately'\n        )\n      );\n    }\n\n    // Check for zero address facets\n    if (analysis.zeroAddressFacets.length > 0 && !config.allowZeroAddressFacets) {\n      issues.push(\n        this.createIssue(\n          'zero-address-facets',\n          'Zero Address Facets Detected',\n          `Found ${analysis.zeroAddressFacets.length} selectors pointing to zero address`,\n          SeverityLevel.ERROR,\n          'integrity',\n          'Remove or replace selectors pointing to zero address',\n          { selectors: analysis.zeroAddressFacets }\n        )\n      );\n    }\n\n    return issues;\n  }\n\n  /**\n   * Monitor protocol version\n   */\n  private async monitorProtocolVersion(\n    context: MonitoringContext,\n    version: string\n  ): Promise<MonitoringIssue[]> {\n    const issues: MonitoringIssue[] = [];\n\n    // Basic version format check\n    const versionPattern = /^\\d+\\.\\d+\\.\\d+/;\n    if (!versionPattern.test(version)) {\n      issues.push(\n        this.createIssue(\n          'invalid-version-format',\n          'Invalid Protocol Version Format',\n          `Protocol version '${version}' does not follow semantic versioning`,\n          SeverityLevel.WARNING,\n          'version',\n          'Use semantic versioning format (e.g., 1.0.0)'\n        )\n      );\n    }\n\n    return issues;\n  }\n\n  /**\n   * Test core functionality\n   */\n  private async testCoreFunctionality(\n    context: MonitoringContext,\n    analysis: DiamondStructureAnalysis\n  ): Promise<MonitoringIssue[]> {\n    const issues: MonitoringIssue[] = [];\n    const { diamond, provider } = context;\n\n    // Test DiamondLoupe functions if present\n    if (analysis.diamondLoupePresent) {\n      try {\n        const diamondContract = new ethers.Contract(\n          diamond.address,\n          this.diamondABIs.loupe,\n          provider\n        );\n\n        // Test facets() function\n        await diamondContract.facets();\n\n        // Test facetAddresses() function\n        await diamondContract.facetAddresses();\n\n        this.log(context, 'info', '✅ DiamondLoupe functionality verified');\n      } catch (error) {\n        issues.push(\n          this.createIssue(\n            'loupe-functionality-error',\n            'DiamondLoupe Functionality Error',\n            `DiamondLoupe functions are not working properly: ${(error as Error).message}`,\n            SeverityLevel.ERROR,\n            'functionality'\n          )\n        );\n      }\n    }\n\n    // Test ERC165 if present\n    const erc165Present = this.hasFunctionSelector(\n      [...analysis.duplicateSelectors],\n      this.standardSelectors.erc165.supportsInterface\n    );\n    if (erc165Present) {\n      try {\n        const diamondContract = new ethers.Contract(\n          diamond.address,\n          this.diamondABIs.erc165,\n          provider\n        );\n\n        // Test supportsInterface for ERC165 itself\n        const supportsERC165 = await diamondContract.supportsInterface('0x01ffc9a7');\n        if (!supportsERC165) {\n          issues.push(\n            this.createIssue(\n              'erc165-self-check-fail',\n              'ERC165 Self-Check Failed',\n              'Diamond does not report supporting ERC165 interface',\n              SeverityLevel.WARNING,\n              'functionality'\n            )\n          );\n        }\n      } catch (error) {\n        issues.push(\n          this.createIssue(\n            'erc165-functionality-error',\n            'ERC165 Functionality Error',\n            `ERC165 interface is not working properly: ${(error as Error).message}`,\n            SeverityLevel.WARNING,\n            'functionality'\n          )\n        );\n      }\n    }\n\n    return issues;\n  }\n\n  // Helper methods\n\n  private getModuleConfig<T>(context: MonitoringContext): T {\n    return (context.moduleConfig[this.id] || {}) as T;\n  }\n\n  private log(context: MonitoringContext, level: string, message: string): void {\n    if (context.verbose) {\n      console.log(message);\n    }\n  }\n\n  private createIssue(\n    id: string,\n    title: string,\n    description: string,\n    severity: SeverityLevel,\n    category: string,\n    recommendation?: string,\n    metadata?: any\n  ): MonitoringIssue {\n    return {\n      id,\n      title,\n      description,\n      severity,\n      category,\n      recommendation,\n      metadata,\n    };\n  }\n\n  private hasFunctionSelector(facets: FacetInfo[] | string[], selector: string): boolean {\n    if (Array.isArray(facets) && typeof facets[0] === 'string') {\n      // Array of selectors\n      return (facets as string[]).includes(selector.toLowerCase());\n    } else {\n      // Array of FacetInfo\n      return (facets as FacetInfo[]).some(f => f.selectors.includes(selector.toLowerCase()));\n    }\n  }\n\n  private identifyFacetName(address: string, selectors: string[]): string | undefined {\n    // Simple heuristic to identify common facets by their selectors\n    const selectorSet = new Set(selectors.map(s => s.toLowerCase()));\n\n    if (selectorSet.has(this.standardSelectors.diamondLoupe.facets)) {\n      return 'DiamondLoupeFacet';\n    }\n\n    if (selectorSet.has(this.standardSelectors.diamondCut.diamondCut)) {\n      return 'DiamondCutFacet';\n    }\n\n    if (selectorSet.has(this.standardSelectors.ownership.owner)) {\n      return 'OwnershipFacet';\n    }\n\n    return undefined;\n  }\n\n  private async getProtocolVersion(context: MonitoringContext): Promise<string | undefined> {\n    // This would try to get protocol version from various sources\n    // For now, return undefined\n    return undefined;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4c7cacedc816048676022be82c867453c82f479f","contentHash":"1f4c0596f874f1b82e7320d2e74a67d172c7254c11d212cfd4b4010f5d0958f7"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/AccessControlModule.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/AccessControlModule.ts","statementMap":{"0":{"start":{"line":8,"column":0},"end":{"line":8,"column":62}},"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}},"2":{"start":{"line":10,"column":17},"end":{"line":10,"column":34}},"3":{"start":{"line":11,"column":16},"end":{"line":11,"column":40}},"4":{"start":{"line":20,"column":8},"end":{"line":20,"column":35}},"5":{"start":{"line":21,"column":8},"end":{"line":21,"column":48}},"6":{"start":{"line":22,"column":8},"end":{"line":22,"column":107}},"7":{"start":{"line":23,"column":8},"end":{"line":23,"column":31}},"8":{"start":{"line":24,"column":8},"end":{"line":24,"column":35}},"9":{"start":{"line":26,"column":8},"end":{"line":46,"column":10}},"10":{"start":{"line":48,"column":8},"end":{"line":54,"column":10}},"11":{"start":{"line":60,"column":8},"end":{"line":110,"column":10}},"12":{"start":{"line":116,"column":23},"end":{"line":116,"column":25}},"13":{"start":{"line":117,"column":25},"end":{"line":117,"column":27}},"14":{"start":{"line":119,"column":30},"end":{"line":126,"column":9}},"15":{"start":{"line":127,"column":8},"end":{"line":131,"column":9}},"16":{"start":{"line":128,"column":12},"end":{"line":130,"column":13}},"17":{"start":{"line":129,"column":16},"end":{"line":129,"column":58}},"18":{"start":{"line":132,"column":8},"end":{"line":135,"column":9}},"19":{"start":{"line":134,"column":12},"end":{"line":134,"column":80}},"20":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"21":{"start":{"line":137,"column":12},"end":{"line":137,"column":58}},"22":{"start":{"line":139,"column":8},"end":{"line":141,"column":9}},"23":{"start":{"line":140,"column":12},"end":{"line":140,"column":60}},"24":{"start":{"line":142,"column":8},"end":{"line":146,"column":10}},"25":{"start":{"line":152,"column":8},"end":{"line":152,"column":20}},"26":{"start":{"line":158,"column":26},"end":{"line":158,"column":36}},"27":{"start":{"line":159,"column":23},"end":{"line":159,"column":25}},"28":{"start":{"line":160,"column":29},"end":{"line":160,"column":58}},"29":{"start":{"line":161,"column":8},"end":{"line":161,"column":78}},"30":{"start":{"line":162,"column":8},"end":{"line":207,"column":9}},"31":{"start":{"line":164,"column":29},"end":{"line":164,"column":69}},"32":{"start":{"line":166,"column":12},"end":{"line":168,"column":13}},"33":{"start":{"line":167,"column":16},"end":{"line":167,"column":78}},"34":{"start":{"line":170,"column":12},"end":{"line":172,"column":13}},"35":{"start":{"line":171,"column":16},"end":{"line":171,"column":74}},"36":{"start":{"line":174,"column":12},"end":{"line":176,"column":13}},"37":{"start":{"line":175,"column":16},"end":{"line":175,"column":77}},"38":{"start":{"line":178,"column":12},"end":{"line":180,"column":13}},"39":{"start":{"line":179,"column":16},"end":{"line":179,"column":77}},"40":{"start":{"line":182,"column":12},"end":{"line":182,"column":77}},"41":{"start":{"line":183,"column":34},"end":{"line":183,"column":56}},"42":{"start":{"line":184,"column":12},"end":{"line":184,"column":101}},"43":{"start":{"line":185,"column":12},"end":{"line":195,"column":14}},"44":{"start":{"line":186,"column":41},"end":{"line":186,"column":132}},"45":{"start":{"line":198,"column":34},"end":{"line":198,"column":56}},"46":{"start":{"line":199,"column":12},"end":{"line":199,"column":95}},"47":{"start":{"line":200,"column":12},"end":{"line":200,"column":198}},"48":{"start":{"line":201,"column":12},"end":{"line":206,"column":14}},"49":{"start":{"line":213,"column":38},"end":{"line":213,"column":45}},"50":{"start":{"line":214,"column":25},"end":{"line":223,"column":9}},"51":{"start":{"line":225,"column":8},"end":{"line":225,"column":86}},"52":{"start":{"line":226,"column":8},"end":{"line":226,"column":57}},"53":{"start":{"line":228,"column":22},"end":{"line":228,"column":70}},"54":{"start":{"line":229,"column":8},"end":{"line":229,"column":31}},"55":{"start":{"line":230,"column":8},"end":{"line":230,"column":43}},"56":{"start":{"line":231,"column":8},"end":{"line":231,"column":55}},"57":{"start":{"line":233,"column":36},"end":{"line":233,"column":45}},"58":{"start":{"line":234,"column":8},"end":{"line":236,"column":9}},"59":{"start":{"line":235,"column":12},"end":{"line":235,"column":66}},"60":{"start":{"line":237,"column":8},"end":{"line":241,"column":9}},"61":{"start":{"line":238,"column":12},"end":{"line":240,"column":13}},"62":{"start":{"line":239,"column":16},"end":{"line":239,"column":48}},"63":{"start":{"line":242,"column":8},"end":{"line":242,"column":71}},"64":{"start":{"line":244,"column":8},"end":{"line":244,"column":90}},"65":{"start":{"line":245,"column":8},"end":{"line":245,"column":90}},"66":{"start":{"line":246,"column":8},"end":{"line":246,"column":24}},"67":{"start":{"line":252,"column":8},"end":{"line":268,"column":9}},"68":{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},"69":{"start":{"line":255,"column":16},"end":{"line":255,"column":33}},"70":{"start":{"line":258,"column":29},"end":{"line":258,"column":149}},"71":{"start":{"line":259,"column":26},"end":{"line":259,"column":48}},"72":{"start":{"line":260,"column":12},"end":{"line":264,"column":14}},"73":{"start":{"line":267,"column":12},"end":{"line":267,"column":29}},"74":{"start":{"line":274,"column":22},"end":{"line":274,"column":24}},"75":{"start":{"line":275,"column":8},"end":{"line":316,"column":9}},"76":{"start":{"line":277,"column":12},"end":{"line":279,"column":13}},"77":{"start":{"line":278,"column":16},"end":{"line":278,"column":29}},"78":{"start":{"line":280,"column":29},"end":{"line":284,"column":24}},"79":{"start":{"line":286,"column":12},"end":{"line":312,"column":13}},"80":{"start":{"line":287,"column":16},"end":{"line":311,"column":17}},"81":{"start":{"line":288,"column":40},"end":{"line":288,"column":83}},"82":{"start":{"line":289,"column":20},"end":{"line":307,"column":21}},"83":{"start":{"line":290,"column":40},"end":{"line":290,"column":42}},"84":{"start":{"line":291,"column":24},"end":{"line":300,"column":25}},"85":{"start":{"line":291,"column":37},"end":{"line":291,"column":38}},"86":{"start":{"line":293,"column":28},"end":{"line":299,"column":29}},"87":{"start":{"line":294,"column":47},"end":{"line":294,"column":88}},"88":{"start":{"line":295,"column":32},"end":{"line":295,"column":53}},"89":{"start":{"line":298,"column":32},"end":{"line":298,"column":38}},"90":{"start":{"line":301,"column":24},"end":{"line":306,"column":27}},"91":{"start":{"line":317,"column":8},"end":{"line":317,"column":21}},"92":{"start":{"line":323,"column":8},"end":{"line":339,"column":9}},"93":{"start":{"line":325,"column":12},"end":{"line":327,"column":13}},"94":{"start":{"line":326,"column":16},"end":{"line":326,"column":29}},"95":{"start":{"line":329,"column":29},"end":{"line":332,"column":24}},"96":{"start":{"line":333,"column":12},"end":{"line":333,"column":39}},"97":{"start":{"line":334,"column":12},"end":{"line":334,"column":38}},"98":{"start":{"line":335,"column":12},"end":{"line":335,"column":24}},"99":{"start":{"line":338,"column":12},"end":{"line":338,"column":25}},"100":{"start":{"line":345,"column":8},"end":{"line":357,"column":9}},"101":{"start":{"line":347,"column":12},"end":{"line":349,"column":13}},"102":{"start":{"line":348,"column":16},"end":{"line":348,"column":29}},"103":{"start":{"line":351,"column":29},"end":{"line":351,"column":149}},"104":{"start":{"line":352,"column":12},"end":{"line":352,"column":35}},"105":{"start":{"line":353,"column":12},"end":{"line":353,"column":24}},"106":{"start":{"line":356,"column":12},"end":{"line":356,"column":25}},"107":{"start":{"line":363,"column":23},"end":{"line":363,"column":25}},"108":{"start":{"line":364,"column":8},"end":{"line":367,"column":9}},"109":{"start":{"line":365,"column":12},"end":{"line":365,"column":255}},"110":{"start":{"line":366,"column":12},"end":{"line":366,"column":26}},"111":{"start":{"line":368,"column":26},"end":{"line":368,"column":48}},"112":{"start":{"line":370,"column":8},"end":{"line":381,"column":9}},"113":{"start":{"line":371,"column":12},"end":{"line":373,"column":13}},"114":{"start":{"line":372,"column":16},"end":{"line":372,"column":277}},"115":{"start":{"line":377,"column":12},"end":{"line":380,"column":13}},"116":{"start":{"line":379,"column":16},"end":{"line":379,"column":259}},"117":{"start":{"line":382,"column":8},"end":{"line":382,"column":22}},"118":{"start":{"line":388,"column":23},"end":{"line":388,"column":25}},"119":{"start":{"line":389,"column":8},"end":{"line":392,"column":9}},"120":{"start":{"line":390,"column":12},"end":{"line":390,"column":249}},"121":{"start":{"line":391,"column":12},"end":{"line":391,"column":26}},"122":{"start":{"line":394,"column":8},"end":{"line":397,"column":9}},"123":{"start":{"line":396,"column":12},"end":{"line":396,"column":328}},"124":{"start":{"line":399,"column":8},"end":{"line":406,"column":9}},"125":{"start":{"line":400,"column":12},"end":{"line":402,"column":13}},"126":{"start":{"line":401,"column":16},"end":{"line":401,"column":204}},"127":{"start":{"line":403,"column":12},"end":{"line":405,"column":13}},"128":{"start":{"line":404,"column":16},"end":{"line":404,"column":268}},"129":{"start":{"line":407,"column":8},"end":{"line":407,"column":22}},"130":{"start":{"line":413,"column":23},"end":{"line":413,"column":25}},"131":{"start":{"line":414,"column":8},"end":{"line":416,"column":9}},"132":{"start":{"line":415,"column":12},"end":{"line":415,"column":241}},"133":{"start":{"line":417,"column":8},"end":{"line":417,"column":22}},"134":{"start":{"line":423,"column":23},"end":{"line":423,"column":25}},"135":{"start":{"line":424,"column":8},"end":{"line":426,"column":9}},"136":{"start":{"line":425,"column":12},"end":{"line":425,"column":252}},"137":{"start":{"line":427,"column":8},"end":{"line":427,"column":22}},"138":{"start":{"line":433,"column":23},"end":{"line":433,"column":25}},"139":{"start":{"line":435,"column":8},"end":{"line":441,"column":9}},"140":{"start":{"line":436,"column":12},"end":{"line":440,"column":13}},"141":{"start":{"line":437,"column":16},"end":{"line":439,"column":17}},"142":{"start":{"line":438,"column":20},"end":{"line":438,"column":273}},"143":{"start":{"line":442,"column":8},"end":{"line":442,"column":22}},"144":{"start":{"line":446,"column":8},"end":{"line":446,"column":57}},"145":{"start":{"line":449,"column":8},"end":{"line":451,"column":9}},"146":{"start":{"line":450,"column":12},"end":{"line":450,"column":51}},"147":{"start":{"line":454,"column":8},"end":{"line":462,"column":10}},"148":{"start":{"line":465,"column":0},"end":{"line":465,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":18},"end":{"line":55,"column":5}},"line":19},"1":{"name":"(anonymous_1)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":24},"end":{"line":111,"column":5}},"line":59},"2":{"name":"(anonymous_2)","decl":{"start":{"line":115,"column":4},"end":{"line":115,"column":5}},"loc":{"start":{"line":115,"column":27},"end":{"line":147,"column":5}},"line":115},"3":{"name":"(anonymous_3)","decl":{"start":{"line":151,"column":4},"end":{"line":151,"column":5}},"loc":{"start":{"line":151,"column":39},"end":{"line":153,"column":5}},"line":151},"4":{"name":"(anonymous_4)","decl":{"start":{"line":157,"column":4},"end":{"line":157,"column":5}},"loc":{"start":{"line":157,"column":27},"end":{"line":208,"column":5}},"line":157},"5":{"name":"(anonymous_5)","decl":{"start":{"line":186,"column":36},"end":{"line":186,"column":37}},"loc":{"start":{"line":186,"column":41},"end":{"line":186,"column":132}},"line":186},"6":{"name":"(anonymous_6)","decl":{"start":{"line":212,"column":4},"end":{"line":212,"column":5}},"loc":{"start":{"line":212,"column":40},"end":{"line":247,"column":5}},"line":212},"7":{"name":"(anonymous_7)","decl":{"start":{"line":251,"column":4},"end":{"line":251,"column":5}},"loc":{"start":{"line":251,"column":44},"end":{"line":269,"column":5}},"line":251},"8":{"name":"(anonymous_8)","decl":{"start":{"line":273,"column":4},"end":{"line":273,"column":5}},"loc":{"start":{"line":273,"column":40},"end":{"line":318,"column":5}},"line":273},"9":{"name":"(anonymous_9)","decl":{"start":{"line":322,"column":4},"end":{"line":322,"column":5}},"loc":{"start":{"line":322,"column":50},"end":{"line":340,"column":5}},"line":322},"10":{"name":"(anonymous_10)","decl":{"start":{"line":344,"column":4},"end":{"line":344,"column":5}},"loc":{"start":{"line":344,"column":50},"end":{"line":358,"column":5}},"line":344},"11":{"name":"(anonymous_11)","decl":{"start":{"line":362,"column":4},"end":{"line":362,"column":5}},"loc":{"start":{"line":362,"column":39},"end":{"line":383,"column":5}},"line":362},"12":{"name":"(anonymous_12)","decl":{"start":{"line":387,"column":4},"end":{"line":387,"column":5}},"loc":{"start":{"line":387,"column":35},"end":{"line":408,"column":5}},"line":387},"13":{"name":"(anonymous_13)","decl":{"start":{"line":412,"column":4},"end":{"line":412,"column":5}},"loc":{"start":{"line":412,"column":38},"end":{"line":418,"column":5}},"line":412},"14":{"name":"(anonymous_14)","decl":{"start":{"line":422,"column":4},"end":{"line":422,"column":5}},"loc":{"start":{"line":422,"column":38},"end":{"line":428,"column":5}},"line":422},"15":{"name":"(anonymous_15)","decl":{"start":{"line":432,"column":4},"end":{"line":432,"column":5}},"loc":{"start":{"line":432,"column":42},"end":{"line":443,"column":5}},"line":432},"16":{"name":"(anonymous_16)","decl":{"start":{"line":445,"column":4},"end":{"line":445,"column":5}},"loc":{"start":{"line":445,"column":29},"end":{"line":447,"column":5}},"line":445},"17":{"name":"(anonymous_17)","decl":{"start":{"line":448,"column":4},"end":{"line":448,"column":5}},"loc":{"start":{"line":448,"column":33},"end":{"line":452,"column":5}},"line":448},"18":{"name":"(anonymous_18)","decl":{"start":{"line":453,"column":4},"end":{"line":453,"column":5}},"loc":{"start":{"line":453,"column":86},"end":{"line":463,"column":5}},"line":453}},"branchMap":{"0":{"loc":{"start":{"line":128,"column":12},"end":{"line":130,"column":13}},"type":"if","locations":[{"start":{"line":128,"column":12},"end":{"line":130,"column":13}},{"start":{},"end":{}}],"line":128},"1":{"loc":{"start":{"line":128,"column":16},"end":{"line":128,"column":81}},"type":"binary-expr","locations":[{"start":{"line":128,"column":16},"end":{"line":128,"column":43}},{"start":{"line":128,"column":47},"end":{"line":128,"column":81}}],"line":128},"2":{"loc":{"start":{"line":132,"column":8},"end":{"line":135,"column":9}},"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":135,"column":9}},{"start":{},"end":{}}],"line":132},"3":{"loc":{"start":{"line":132,"column":12},"end":{"line":133,"column":100}},"type":"binary-expr","locations":[{"start":{"line":132,"column":12},"end":{"line":132,"column":55}},{"start":{"line":133,"column":13},"end":{"line":133,"column":62}},{"start":{"line":133,"column":66},"end":{"line":133,"column":99}}],"line":132},"4":{"loc":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},{"start":{},"end":{}}],"line":136},"5":{"loc":{"start":{"line":136,"column":12},"end":{"line":136,"column":86}},"type":"binary-expr","locations":[{"start":{"line":136,"column":12},"end":{"line":136,"column":46}},{"start":{"line":136,"column":50},"end":{"line":136,"column":86}}],"line":136},"6":{"loc":{"start":{"line":139,"column":8},"end":{"line":141,"column":9}},"type":"if","locations":[{"start":{"line":139,"column":8},"end":{"line":141,"column":9}},{"start":{},"end":{}}],"line":139},"7":{"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":90}},"type":"binary-expr","locations":[{"start":{"line":139,"column":12},"end":{"line":139,"column":48}},{"start":{"line":139,"column":52},"end":{"line":139,"column":90}}],"line":139},"8":{"loc":{"start":{"line":166,"column":12},"end":{"line":168,"column":13}},"type":"if","locations":[{"start":{"line":166,"column":12},"end":{"line":168,"column":13}},{"start":{},"end":{}}],"line":166},"9":{"loc":{"start":{"line":170,"column":12},"end":{"line":172,"column":13}},"type":"if","locations":[{"start":{"line":170,"column":12},"end":{"line":172,"column":13}},{"start":{},"end":{}}],"line":170},"10":{"loc":{"start":{"line":174,"column":12},"end":{"line":176,"column":13}},"type":"if","locations":[{"start":{"line":174,"column":12},"end":{"line":176,"column":13}},{"start":{},"end":{}}],"line":174},"11":{"loc":{"start":{"line":178,"column":12},"end":{"line":180,"column":13}},"type":"if","locations":[{"start":{"line":178,"column":12},"end":{"line":180,"column":13}},{"start":{},"end":{}}],"line":178},"12":{"loc":{"start":{"line":186,"column":24},"end":{"line":188,"column":51}},"type":"cond-expr","locations":[{"start":{"line":187,"column":22},"end":{"line":187,"column":51}},{"start":{"line":188,"column":22},"end":{"line":188,"column":51}}],"line":186},"13":{"loc":{"start":{"line":186,"column":41},"end":{"line":186,"column":132}},"type":"binary-expr","locations":[{"start":{"line":186,"column":41},"end":{"line":186,"column":83}},{"start":{"line":186,"column":87},"end":{"line":186,"column":132}}],"line":186},"14":{"loc":{"start":{"line":234,"column":8},"end":{"line":236,"column":9}},"type":"if","locations":[{"start":{"line":234,"column":8},"end":{"line":236,"column":9}},{"start":{},"end":{}}],"line":234},"15":{"loc":{"start":{"line":234,"column":12},"end":{"line":234,"column":105}},"type":"binary-expr","locations":[{"start":{"line":234,"column":12},"end":{"line":234,"column":41}},{"start":{"line":234,"column":45},"end":{"line":234,"column":105}}],"line":234},"16":{"loc":{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},"type":"if","locations":[{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},{"start":{},"end":{}}],"line":254},"17":{"loc":{"start":{"line":277,"column":12},"end":{"line":279,"column":13}},"type":"if","locations":[{"start":{"line":277,"column":12},"end":{"line":279,"column":13}},{"start":{},"end":{}}],"line":277},"18":{"loc":{"start":{"line":289,"column":20},"end":{"line":307,"column":21}},"type":"if","locations":[{"start":{"line":289,"column":20},"end":{"line":307,"column":21}},{"start":{},"end":{}}],"line":289},"19":{"loc":{"start":{"line":325,"column":12},"end":{"line":327,"column":13}},"type":"if","locations":[{"start":{"line":325,"column":12},"end":{"line":327,"column":13}},{"start":{},"end":{}}],"line":325},"20":{"loc":{"start":{"line":347,"column":12},"end":{"line":349,"column":13}},"type":"if","locations":[{"start":{"line":347,"column":12},"end":{"line":349,"column":13}},{"start":{},"end":{}}],"line":347},"21":{"loc":{"start":{"line":364,"column":8},"end":{"line":367,"column":9}},"type":"if","locations":[{"start":{"line":364,"column":8},"end":{"line":367,"column":9}},{"start":{},"end":{}}],"line":364},"22":{"loc":{"start":{"line":370,"column":8},"end":{"line":381,"column":9}},"type":"if","locations":[{"start":{"line":370,"column":8},"end":{"line":381,"column":9}},{"start":{"line":375,"column":13},"end":{"line":381,"column":9}}],"line":370},"23":{"loc":{"start":{"line":371,"column":12},"end":{"line":373,"column":13}},"type":"if","locations":[{"start":{"line":371,"column":12},"end":{"line":373,"column":13}},{"start":{},"end":{}}],"line":371},"24":{"loc":{"start":{"line":377,"column":12},"end":{"line":380,"column":13}},"type":"if","locations":[{"start":{"line":377,"column":12},"end":{"line":380,"column":13}},{"start":{},"end":{}}],"line":377},"25":{"loc":{"start":{"line":389,"column":8},"end":{"line":392,"column":9}},"type":"if","locations":[{"start":{"line":389,"column":8},"end":{"line":392,"column":9}},{"start":{},"end":{}}],"line":389},"26":{"loc":{"start":{"line":394,"column":8},"end":{"line":397,"column":9}},"type":"if","locations":[{"start":{"line":394,"column":8},"end":{"line":397,"column":9}},{"start":{},"end":{}}],"line":394},"27":{"loc":{"start":{"line":394,"column":12},"end":{"line":395,"column":79}},"type":"binary-expr","locations":[{"start":{"line":394,"column":12},"end":{"line":394,"column":41}},{"start":{"line":395,"column":12},"end":{"line":395,"column":79}}],"line":394},"28":{"loc":{"start":{"line":400,"column":12},"end":{"line":402,"column":13}},"type":"if","locations":[{"start":{"line":400,"column":12},"end":{"line":402,"column":13}},{"start":{},"end":{}}],"line":400},"29":{"loc":{"start":{"line":403,"column":12},"end":{"line":405,"column":13}},"type":"if","locations":[{"start":{"line":403,"column":12},"end":{"line":405,"column":13}},{"start":{},"end":{}}],"line":403},"30":{"loc":{"start":{"line":403,"column":16},"end":{"line":403,"column":80}},"type":"binary-expr","locations":[{"start":{"line":403,"column":16},"end":{"line":403,"column":38}},{"start":{"line":403,"column":42},"end":{"line":403,"column":80}}],"line":403},"31":{"loc":{"start":{"line":414,"column":8},"end":{"line":416,"column":9}},"type":"if","locations":[{"start":{"line":414,"column":8},"end":{"line":416,"column":9}},{"start":{},"end":{}}],"line":414},"32":{"loc":{"start":{"line":414,"column":12},"end":{"line":414,"column":59}},"type":"binary-expr","locations":[{"start":{"line":414,"column":12},"end":{"line":414,"column":34}},{"start":{"line":414,"column":38},"end":{"line":414,"column":59}}],"line":414},"33":{"loc":{"start":{"line":424,"column":8},"end":{"line":426,"column":9}},"type":"if","locations":[{"start":{"line":424,"column":8},"end":{"line":426,"column":9}},{"start":{},"end":{}}],"line":424},"34":{"loc":{"start":{"line":435,"column":8},"end":{"line":441,"column":9}},"type":"if","locations":[{"start":{"line":435,"column":8},"end":{"line":441,"column":9}},{"start":{},"end":{}}],"line":435},"35":{"loc":{"start":{"line":437,"column":16},"end":{"line":439,"column":17}},"type":"if","locations":[{"start":{"line":437,"column":16},"end":{"line":439,"column":17}},{"start":{},"end":{}}],"line":437},"36":{"loc":{"start":{"line":446,"column":16},"end":{"line":446,"column":55}},"type":"binary-expr","locations":[{"start":{"line":446,"column":16},"end":{"line":446,"column":49}},{"start":{"line":446,"column":53},"end":{"line":446,"column":55}}],"line":446},"37":{"loc":{"start":{"line":449,"column":8},"end":{"line":451,"column":9}},"type":"if","locations":[{"start":{"line":449,"column":8},"end":{"line":451,"column":9}},{"start":{},"end":{}}],"line":449}},"s":{"0":1,"1":1,"2":1,"3":1,"4":3,"5":3,"6":3,"7":3,"8":3,"9":3,"10":3,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":1},"f":{"0":3,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0]},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/AccessControlModule.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/AccessControlModule.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Access Control Monitoring Module for Hardhat Diamond Monitor Plugin\n *\n * Monitors access control mechanisms in the diamond including role-based access,\n * ownership patterns, and privilege escalation protection.\n */\n\nimport { ethers } from 'ethers';\nimport {\n  MonitoringModule,\n  MonitoringContext,\n  MonitoringResult,\n  MonitoringIssue,\n  SeverityLevel,\n  DiamondInfo,\n  NetworkInfo,\n  ConfigRequirement,\n  ValidationResult,\n  MonitoringStatus,\n} from '../core/types';\n\n/**\n * Access control role information\n */\ninterface AccessRole {\n  roleHash: string;\n  roleName: string;\n  adminRole?: string;\n  members: string[];\n  memberCount: number;\n}\n\n/**\n * Ownership information\n */\ninterface OwnershipInfo {\n  owner: string;\n  pendingOwner?: string;\n  transferrable: boolean;\n  renounced: boolean;\n}\n\n/**\n * Access control analysis result\n */\ninterface AccessControlAnalysis {\n  hasOwnership: boolean;\n  hasRoleBasedAccess: boolean;\n  ownershipInfo?: OwnershipInfo;\n  roles: AccessRole[];\n  totalRoles: number;\n  privilegedAddresses: string[];\n  hasMultiSig: boolean;\n  hasTimelock: boolean;\n  securityIssues: string[];\n}\n\n/**\n * Configuration for access control module\n */\ninterface AccessControlModuleConfig {\n  checkOwnership?: boolean;\n  checkRoles?: boolean;\n  checkMultiSig?: boolean;\n  checkTimelock?: boolean;\n  maxPrivilegedAddresses?: number;\n  requireMultiSig?: boolean;\n  allowZeroAddressOwner?: boolean;\n  expectedRoles?: string[];\n  bannedAddresses?: string[];\n}\n\n/**\n * Access Control Monitoring Module\n *\n * Monitors various access control mechanisms in diamond contracts including\n * ownership, role-based access control, and security best practices.\n */\nexport class AccessControlModule implements MonitoringModule {\n  public readonly id = 'access-control';\n  public readonly name = 'Access Control Monitoring';\n  public readonly description =\n    'Monitors ownership, roles, and access control mechanisms in diamond contracts';\n  public readonly version = '1.0.0';\n  public readonly category = 'security';\n\n  // Standard access control interface selectors\n  private readonly standardSelectors = {\n    // Ownable\n    ownership: {\n      owner: '0x8da5cb5b',\n      transferOwnership: '0xf2fde38b',\n      renounceOwnership: '0x715018a6',\n    },\n    // AccessControl (OpenZeppelin)\n    accessControl: {\n      hasRole: '0x91d14854',\n      getRoleAdmin: '0x248a9ca3',\n      grantRole: '0x2f2ff15d',\n      revokeRole: '0xd547741f',\n      renounceRole: '0x36568abe',\n    },\n    // AccessControlEnumerable\n    enumerable: {\n      getRoleMember: '0x9010d07c',\n      getRoleMemberCount: '0xca15c873',\n    },\n  };\n\n  // Standard role hashes\n  private readonly standardRoles = {\n    DEFAULT_ADMIN_ROLE: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    MINTER_ROLE: ethers.keccak256(ethers.toUtf8Bytes('MINTER_ROLE')),\n    BURNER_ROLE: ethers.keccak256(ethers.toUtf8Bytes('BURNER_ROLE')),\n    PAUSER_ROLE: ethers.keccak256(ethers.toUtf8Bytes('PAUSER_ROLE')),\n    UPGRADER_ROLE: ethers.keccak256(ethers.toUtf8Bytes('UPGRADER_ROLE')),\n  };\n\n  /**\n   * Get configuration requirements for this module\n   */\n  public getRequiredConfig(): ConfigRequirement[] {\n    return [\n      {\n        key: 'checkOwnership',\n        type: 'boolean',\n        required: false,\n        description: 'Whether to monitor ownership patterns',\n        defaultValue: true,\n      },\n      {\n        key: 'checkRoles',\n        type: 'boolean',\n        required: false,\n        description: 'Whether to monitor role-based access control',\n        defaultValue: true,\n      },\n      {\n        key: 'checkMultiSig',\n        type: 'boolean',\n        required: false,\n        description: 'Whether to check for multi-signature requirements',\n        defaultValue: true,\n      },\n      {\n        key: 'checkTimelock',\n        type: 'boolean',\n        required: false,\n        description: 'Whether to check for timelock mechanisms',\n        defaultValue: true,\n      },\n      {\n        key: 'maxPrivilegedAddresses',\n        type: 'number',\n        required: false,\n        description: 'Maximum number of privileged addresses allowed',\n        defaultValue: 5,\n      },\n      {\n        key: 'requireMultiSig',\n        type: 'boolean',\n        required: false,\n        description: 'Whether multi-signature should be required for critical operations',\n        defaultValue: false,\n      },\n      {\n        key: 'allowZeroAddressOwner',\n        type: 'boolean',\n        required: false,\n        description: 'Whether zero address owner is allowed (renounced ownership)',\n        defaultValue: false,\n      },\n    ];\n  }\n\n  /**\n   * Validate module configuration\n   */\n  public validateConfig(config: any): ValidationResult {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    // Validate config types\n    const booleanFields = [\n      'checkOwnership',\n      'checkRoles',\n      'checkMultiSig',\n      'checkTimelock',\n      'requireMultiSig',\n      'allowZeroAddressOwner',\n    ];\n    for (const field of booleanFields) {\n      if (config[field] !== undefined && typeof config[field] !== 'boolean') {\n        errors.push(`${field} must be a boolean`);\n      }\n    }\n\n    if (\n      config.maxPrivilegedAddresses !== undefined &&\n      (typeof config.maxPrivilegedAddresses !== 'number' || config.maxPrivilegedAddresses < 0)\n    ) {\n      errors.push('maxPrivilegedAddresses must be a non-negative number');\n    }\n\n    if (config.expectedRoles !== undefined && !Array.isArray(config.expectedRoles)) {\n      errors.push('expectedRoles must be an array');\n    }\n\n    if (config.bannedAddresses !== undefined && !Array.isArray(config.bannedAddresses)) {\n      errors.push('bannedAddresses must be an array');\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n      warnings,\n    };\n  }\n\n  /**\n   * Check if this module can monitor the given diamond\n   */\n  public async canMonitor(diamond: DiamondInfo, network: NetworkInfo): Promise<boolean> {\n    return true; // This module can monitor any diamond\n  }\n\n  /**\n   * Execute access control monitoring\n   */\n  public async monitor(context: MonitoringContext): Promise<MonitoringResult> {\n    const startTime = Date.now();\n    const issues: MonitoringIssue[] = [];\n    const moduleConfig = this.getModuleConfig<AccessControlModuleConfig>(context);\n\n    this.log(context, 'info', '🔐 Starting access control monitoring...');\n\n    try {\n      // Analyze access control mechanisms\n      const analysis = await this.analyzeAccessControl(context);\n\n      // Monitor ownership if enabled\n      if (moduleConfig.checkOwnership) {\n        issues.push(...this.monitorOwnership(analysis, moduleConfig));\n      }\n\n      // Monitor roles if enabled\n      if (moduleConfig.checkRoles) {\n        issues.push(...this.monitorRoles(analysis, moduleConfig));\n      }\n\n      // Monitor multi-signature requirements if enabled\n      if (moduleConfig.checkMultiSig) {\n        issues.push(...this.monitorMultiSig(analysis, moduleConfig));\n      }\n\n      // Monitor timelock mechanisms if enabled\n      if (moduleConfig.checkTimelock) {\n        issues.push(...this.monitorTimelock(analysis, moduleConfig));\n      }\n\n      // Check for security issues\n      issues.push(...this.checkSecurityIssues(analysis, moduleConfig));\n\n      const executionTime = Date.now() - startTime;\n      this.log(context, 'info', `✅ Access control monitoring completed in ${executionTime}ms`);\n\n      return {\n        status: issues.some(\n          i => i.severity === SeverityLevel.ERROR || i.severity === SeverityLevel.CRITICAL\n        )\n          ? MonitoringStatus.FAIL\n          : MonitoringStatus.PASS,\n        issues,\n        executionTime,\n        metadata: {\n          analysis,\n          moduleConfig,\n        },\n      };\n    } catch (error) {\n      const executionTime = Date.now() - startTime;\n      this.log(\n        context,\n        'error',\n        `❌ Access control monitoring failed: ${(error as Error).message}`\n      );\n\n      issues.push(\n        this.createIssue(\n          'access-control-error',\n          'Access Control Monitoring Failed',\n          `Failed to analyze access control: ${(error as Error).message}`,\n          SeverityLevel.ERROR,\n          'execution'\n        )\n      );\n\n      return {\n        status: MonitoringStatus.FAIL,\n        issues,\n        executionTime,\n        metadata: { error: (error as Error).message },\n      };\n    }\n  }\n\n  /**\n   * Analyze access control mechanisms in the diamond\n   */\n  private async analyzeAccessControl(context: MonitoringContext): Promise<AccessControlAnalysis> {\n    const { diamond, provider } = context;\n\n    const analysis: AccessControlAnalysis = {\n      hasOwnership: false,\n      hasRoleBasedAccess: false,\n      roles: [],\n      totalRoles: 0,\n      privilegedAddresses: [],\n      hasMultiSig: false,\n      hasTimelock: false,\n      securityIssues: [],\n    };\n\n    // Check for ownership pattern\n    analysis.ownershipInfo = await this.checkOwnership(diamond.address, provider);\n    analysis.hasOwnership = !!analysis.ownershipInfo;\n\n    // Check for role-based access control\n    const roles = await this.checkRoles(diamond.address, provider);\n    analysis.roles = roles;\n    analysis.totalRoles = roles.length;\n    analysis.hasRoleBasedAccess = roles.length > 0;\n\n    // Collect all privileged addresses\n    const privilegedAddresses = new Set<string>();\n    if (analysis.ownershipInfo?.owner && analysis.ownershipInfo.owner !== ethers.ZeroAddress) {\n      privilegedAddresses.add(analysis.ownershipInfo.owner);\n    }\n    for (const role of roles) {\n      for (const member of role.members) {\n        privilegedAddresses.add(member);\n      }\n    }\n    analysis.privilegedAddresses = Array.from(privilegedAddresses);\n\n    // Check for multi-signature and timelock (simplified check)\n    analysis.hasMultiSig = await this.checkMultiSigPattern(diamond.address, provider);\n    analysis.hasTimelock = await this.checkTimelockPattern(diamond.address, provider);\n\n    return analysis;\n  }\n\n  /**\n   * Check ownership pattern\n   */\n  private async checkOwnership(address: string, provider: any): Promise<OwnershipInfo | undefined> {\n    try {\n      // Ensure address is properly formatted\n      if (!ethers.isAddress(address)) {\n        return undefined;\n      }\n\n      // Try to call owner() function\n      const contract = new ethers.Contract(\n        ethers.getAddress(address),\n        ['function owner() view returns (address)'],\n        provider\n      );\n      const owner = await contract.owner();\n\n      return {\n        owner,\n        transferrable: true, // Assume transferrable unless proven otherwise\n        renounced: owner === ethers.ZeroAddress,\n      };\n    } catch {\n      return undefined;\n    }\n  }\n\n  /**\n   * Check role-based access control\n   */\n  private async checkRoles(address: string, provider: any): Promise<AccessRole[]> {\n    const roles: AccessRole[] = [];\n\n    try {\n      // Ensure address is properly formatted\n      if (!ethers.isAddress(address)) {\n        return roles;\n      }\n\n      const contract = new ethers.Contract(\n        ethers.getAddress(address),\n        [\n          'function hasRole(bytes32 role, address account) view returns (bool)',\n          'function getRoleMemberCount(bytes32 role) view returns (uint256)',\n          'function getRoleMember(bytes32 role, uint256 index) view returns (address)',\n        ],\n        provider\n      );\n\n      // Check standard roles\n      for (const [roleName, roleHash] of Object.entries(this.standardRoles)) {\n        try {\n          const memberCount = await contract.getRoleMemberCount(roleHash);\n          if (memberCount > 0) {\n            const members: string[] = [];\n            for (let i = 0; i < Math.min(memberCount, 10); i++) {\n              // Limit to first 10 members\n              try {\n                const member = await contract.getRoleMember(roleHash, i);\n                members.push(member);\n              } catch {\n                break;\n              }\n            }\n\n            roles.push({\n              roleHash,\n              roleName,\n              members,\n              memberCount: Number(memberCount),\n            });\n          }\n        } catch {\n          // Role doesn't exist or not accessible\n        }\n      }\n    } catch {\n      // Contract doesn't implement role-based access control\n    }\n\n    return roles;\n  }\n\n  /**\n   * Check for multi-signature pattern (simplified)\n   */\n  private async checkMultiSigPattern(address: string, provider: any): Promise<boolean> {\n    try {\n      // Ensure address is properly formatted\n      if (!ethers.isAddress(address)) {\n        return false;\n      }\n\n      // Check for common multi-sig interface patterns\n      const contract = new ethers.Contract(\n        ethers.getAddress(address),\n        [\n          'function getOwners() view returns (address[])',\n          'function required() view returns (uint256)',\n        ],\n        provider\n      );\n\n      await contract.getOwners();\n      await contract.required();\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Check for timelock pattern (simplified)\n   */\n  private async checkTimelockPattern(address: string, provider: any): Promise<boolean> {\n    try {\n      // Ensure address is properly formatted\n      if (!ethers.isAddress(address)) {\n        return false;\n      }\n\n      // Check for common timelock interface patterns\n      const contract = new ethers.Contract(\n        ethers.getAddress(address),\n        ['function delay() view returns (uint256)'],\n        provider\n      );\n\n      await contract.delay();\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Monitor ownership patterns\n   */\n  private monitorOwnership(\n    analysis: AccessControlAnalysis,\n    config: AccessControlModuleConfig\n  ): MonitoringIssue[] {\n    const issues: MonitoringIssue[] = [];\n\n    if (!analysis.hasOwnership) {\n      issues.push(\n        this.createIssue(\n          'no-ownership',\n          'No Ownership Pattern Detected',\n          'Diamond does not implement ownership pattern',\n          SeverityLevel.WARNING,\n          'ownership',\n          'Consider implementing ownership pattern for administrative functions'\n        )\n      );\n      return issues;\n    }\n\n    const ownership = analysis.ownershipInfo!;\n\n    // Check for zero address owner\n    if (ownership.owner === ethers.ZeroAddress) {\n      if (!config.allowZeroAddressOwner) {\n        issues.push(\n          this.createIssue(\n            'renounced-ownership',\n            'Ownership Renounced',\n            'Contract ownership has been renounced (owner is zero address)',\n            SeverityLevel.WARNING,\n            'ownership',\n            'Ensure this is intentional and proper governance mechanisms are in place'\n          )\n        );\n      }\n    } else {\n      // Check if owner is an EOA (simplified check)\n      if (ownership.owner.length === 42) {\n        // Standard address length\n        issues.push(\n          this.createIssue(\n            'eoa-owner',\n            'EOA Owner Detected',\n            'Contract owner appears to be an EOA rather than a contract',\n            SeverityLevel.INFO,\n            'ownership',\n            'Consider using a multi-signature wallet or governance contract as owner'\n          )\n        );\n      }\n    }\n\n    return issues;\n  }\n\n  /**\n   * Monitor role-based access control\n   */\n  private monitorRoles(\n    analysis: AccessControlAnalysis,\n    config: AccessControlModuleConfig\n  ): MonitoringIssue[] {\n    const issues: MonitoringIssue[] = [];\n\n    if (!analysis.hasRoleBasedAccess) {\n      issues.push(\n        this.createIssue(\n          'no-rbac',\n          'No Role-Based Access Control',\n          'Diamond does not implement role-based access control',\n          SeverityLevel.INFO,\n          'roles',\n          'Consider implementing role-based access control for better security'\n        )\n      );\n      return issues;\n    }\n\n    // Check for excessive privileged addresses\n    if (\n      config.maxPrivilegedAddresses &&\n      analysis.privilegedAddresses.length > config.maxPrivilegedAddresses\n    ) {\n      issues.push(\n        this.createIssue(\n          'excessive-privileged-addresses',\n          'Excessive Privileged Addresses',\n          `Found ${analysis.privilegedAddresses.length} privileged addresses, exceeds limit of ${config.maxPrivilegedAddresses}`,\n          SeverityLevel.WARNING,\n          'roles',\n          'Review and minimize the number of privileged addresses'\n        )\n      );\n    }\n\n    // Check each role\n    for (const role of analysis.roles) {\n      if (role.memberCount === 0) {\n        issues.push(\n          this.createIssue(\n            'empty-role',\n            'Empty Role Detected',\n            `Role ${role.roleName} has no members`,\n            SeverityLevel.WARNING,\n            'roles',\n            'Review if empty roles are intentional'\n          )\n        );\n      }\n\n      if (role.memberCount === 1 && role.roleName === 'DEFAULT_ADMIN_ROLE') {\n        issues.push(\n          this.createIssue(\n            'single-admin',\n            'Single Admin Role Member',\n            'Default admin role has only one member, creating single point of failure',\n            SeverityLevel.WARNING,\n            'roles',\n            'Consider having multiple admin role members for redundancy'\n          )\n        );\n      }\n    }\n\n    return issues;\n  }\n\n  /**\n   * Monitor multi-signature requirements\n   */\n  private monitorMultiSig(\n    analysis: AccessControlAnalysis,\n    config: AccessControlModuleConfig\n  ): MonitoringIssue[] {\n    const issues: MonitoringIssue[] = [];\n\n    if (config.requireMultiSig && !analysis.hasMultiSig) {\n      issues.push(\n        this.createIssue(\n          'missing-multisig',\n          'Missing Multi-Signature',\n          'Multi-signature is required but not detected',\n          SeverityLevel.ERROR,\n          'multisig',\n          'Implement multi-signature mechanism for critical operations'\n        )\n      );\n    }\n\n    return issues;\n  }\n\n  /**\n   * Monitor timelock mechanisms\n   */\n  private monitorTimelock(\n    analysis: AccessControlAnalysis,\n    config: AccessControlModuleConfig\n  ): MonitoringIssue[] {\n    const issues: MonitoringIssue[] = [];\n\n    if (!analysis.hasTimelock) {\n      issues.push(\n        this.createIssue(\n          'no-timelock',\n          'No Timelock Mechanism',\n          'No timelock mechanism detected for critical operations',\n          SeverityLevel.INFO,\n          'timelock',\n          'Consider implementing timelock for critical administrative functions'\n        )\n      );\n    }\n\n    return issues;\n  }\n\n  /**\n   * Check for security issues\n   */\n  private checkSecurityIssues(\n    analysis: AccessControlAnalysis,\n    config: AccessControlModuleConfig\n  ): MonitoringIssue[] {\n    const issues: MonitoringIssue[] = [];\n\n    // Check for banned addresses\n    if (config.bannedAddresses) {\n      for (const bannedAddress of config.bannedAddresses) {\n        if (analysis.privilegedAddresses.includes(bannedAddress)) {\n          issues.push(\n            this.createIssue(\n              'banned-address',\n              'Banned Address in Privileged Position',\n              `Banned address ${bannedAddress} has privileged access`,\n              SeverityLevel.CRITICAL,\n              'security',\n              'Remove banned address from privileged positions immediately'\n            )\n          );\n        }\n      }\n    }\n\n    return issues;\n  }\n\n  // Helper methods\n\n  private getModuleConfig<T>(context: MonitoringContext): T {\n    return (context.config.modules?.[this.id] || {}) as T;\n  }\n\n  private log(context: MonitoringContext, level: string, message: string): void {\n    if (context.config.reporting?.verbose) {\n      console.log(`[${this.id}] ${message}`);\n    }\n  }\n\n  private createIssue(\n    id: string,\n    title: string,\n    description: string,\n    severity: SeverityLevel,\n    category: string,\n    recommendation?: string,\n    metadata?: any\n  ): MonitoringIssue {\n    return {\n      id,\n      title,\n      description,\n      severity,\n      category,\n      recommendation,\n      metadata,\n    };\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1376f3a4920a3b5e0078c233615b0479a6d4af62","contentHash":"a1f723a44120703c610d19bff0b41cd771bb0c03456e67156f8b11ab4a1941d6"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/TokenSupplyModule.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/TokenSupplyModule.ts","statementMap":{"0":{"start":{"line":8,"column":0},"end":{"line":8,"column":62}},"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}},"2":{"start":{"line":10,"column":17},"end":{"line":10,"column":34}},"3":{"start":{"line":11,"column":16},"end":{"line":11,"column":40}},"4":{"start":{"line":20,"column":8},"end":{"line":20,"column":33}},"5":{"start":{"line":21,"column":8},"end":{"line":21,"column":46}},"6":{"start":{"line":22,"column":8},"end":{"line":22,"column":127}},"7":{"start":{"line":23,"column":8},"end":{"line":23,"column":31}},"8":{"start":{"line":24,"column":8},"end":{"line":24,"column":37}},"9":{"start":{"line":26,"column":8},"end":{"line":65,"column":10}},"10":{"start":{"line":71,"column":8},"end":{"line":133,"column":10}},"11":{"start":{"line":139,"column":23},"end":{"line":139,"column":25}},"12":{"start":{"line":140,"column":25},"end":{"line":140,"column":27}},"13":{"start":{"line":142,"column":30},"end":{"line":150,"column":9}},"14":{"start":{"line":151,"column":8},"end":{"line":155,"column":9}},"15":{"start":{"line":152,"column":12},"end":{"line":154,"column":13}},"16":{"start":{"line":153,"column":16},"end":{"line":153,"column":58}},"17":{"start":{"line":157,"column":8},"end":{"line":164,"column":9}},"18":{"start":{"line":158,"column":12},"end":{"line":163,"column":13}},"19":{"start":{"line":159,"column":16},"end":{"line":159,"column":46}},"20":{"start":{"line":162,"column":16},"end":{"line":162,"column":76}},"21":{"start":{"line":165,"column":8},"end":{"line":172,"column":9}},"22":{"start":{"line":166,"column":12},"end":{"line":171,"column":13}},"23":{"start":{"line":167,"column":16},"end":{"line":167,"column":46}},"24":{"start":{"line":170,"column":16},"end":{"line":170,"column":76}},"25":{"start":{"line":173,"column":8},"end":{"line":176,"column":9}},"26":{"start":{"line":175,"column":12},"end":{"line":175,"column":67}},"27":{"start":{"line":177,"column":8},"end":{"line":181,"column":10}},"28":{"start":{"line":187,"column":8},"end":{"line":187,"column":20}},"29":{"start":{"line":193,"column":26},"end":{"line":193,"column":36}},"30":{"start":{"line":194,"column":23},"end":{"line":194,"column":25}},"31":{"start":{"line":195,"column":29},"end":{"line":195,"column":58}},"32":{"start":{"line":196,"column":8},"end":{"line":196,"column":76}},"33":{"start":{"line":197,"column":8},"end":{"line":238,"column":9}},"34":{"start":{"line":199,"column":29},"end":{"line":199,"column":67}},"35":{"start":{"line":201,"column":12},"end":{"line":203,"column":13}},"36":{"start":{"line":202,"column":16},"end":{"line":202,"column":90}},"37":{"start":{"line":205,"column":12},"end":{"line":207,"column":13}},"38":{"start":{"line":206,"column":16},"end":{"line":206,"column":92}},"39":{"start":{"line":209,"column":12},"end":{"line":211,"column":13}},"40":{"start":{"line":210,"column":16},"end":{"line":210,"column":94}},"41":{"start":{"line":213,"column":12},"end":{"line":213,"column":82}},"42":{"start":{"line":214,"column":34},"end":{"line":214,"column":56}},"43":{"start":{"line":215,"column":12},"end":{"line":215,"column":99}},"44":{"start":{"line":216,"column":12},"end":{"line":226,"column":14}},"45":{"start":{"line":217,"column":41},"end":{"line":217,"column":132}},"46":{"start":{"line":229,"column":34},"end":{"line":229,"column":56}},"47":{"start":{"line":230,"column":12},"end":{"line":230,"column":93}},"48":{"start":{"line":231,"column":12},"end":{"line":231,"column":192}},"49":{"start":{"line":232,"column":12},"end":{"line":237,"column":14}},"50":{"start":{"line":244,"column":38},"end":{"line":244,"column":45}},"51":{"start":{"line":245,"column":25},"end":{"line":251,"column":9}},"52":{"start":{"line":253,"column":8},"end":{"line":261,"column":9}},"53":{"start":{"line":254,"column":12},"end":{"line":254,"column":88}},"54":{"start":{"line":255,"column":12},"end":{"line":255,"column":53}},"55":{"start":{"line":256,"column":12},"end":{"line":257,"column":47}},"56":{"start":{"line":257,"column":16},"end":{"line":257,"column":47}},"57":{"start":{"line":260,"column":12},"end":{"line":260,"column":79}},"58":{"start":{"line":263,"column":8},"end":{"line":271,"column":9}},"59":{"start":{"line":264,"column":12},"end":{"line":264,"column":90}},"60":{"start":{"line":265,"column":12},"end":{"line":265,"column":55}},"61":{"start":{"line":266,"column":12},"end":{"line":267,"column":47}},"62":{"start":{"line":267,"column":16},"end":{"line":267,"column":47}},"63":{"start":{"line":270,"column":12},"end":{"line":270,"column":80}},"64":{"start":{"line":273,"column":8},"end":{"line":281,"column":9}},"65":{"start":{"line":274,"column":12},"end":{"line":274,"column":92}},"66":{"start":{"line":275,"column":12},"end":{"line":275,"column":57}},"67":{"start":{"line":276,"column":12},"end":{"line":277,"column":47}},"68":{"start":{"line":277,"column":16},"end":{"line":277,"column":47}},"69":{"start":{"line":280,"column":12},"end":{"line":280,"column":81}},"70":{"start":{"line":282,"column":8},"end":{"line":282,"column":24}},"71":{"start":{"line":288,"column":8},"end":{"line":336,"column":9}},"72":{"start":{"line":290,"column":12},"end":{"line":292,"column":13}},"73":{"start":{"line":291,"column":16},"end":{"line":291,"column":33}},"74":{"start":{"line":293,"column":29},"end":{"line":300,"column":24}},"75":{"start":{"line":301,"column":32},"end":{"line":301,"column":60}},"76":{"start":{"line":302,"column":29},"end":{"line":302,"column":54}},"77":{"start":{"line":303,"column":27},"end":{"line":303,"column":50}},"78":{"start":{"line":304,"column":25},"end":{"line":304,"column":46}},"79":{"start":{"line":306,"column":25},"end":{"line":306,"column":30}},"80":{"start":{"line":307,"column":12},"end":{"line":313,"column":13}},"81":{"start":{"line":308,"column":16},"end":{"line":308,"column":43}},"82":{"start":{"line":309,"column":16},"end":{"line":309,"column":30}},"83":{"start":{"line":314,"column":27},"end":{"line":314,"column":32}},"84":{"start":{"line":315,"column":12},"end":{"line":320,"column":13}},"85":{"start":{"line":316,"column":16},"end":{"line":316,"column":51}},"86":{"start":{"line":321,"column":12},"end":{"line":332,"column":14}},"87":{"start":{"line":335,"column":12},"end":{"line":335,"column":29}},"88":{"start":{"line":342,"column":8},"end":{"line":378,"column":9}},"89":{"start":{"line":344,"column":12},"end":{"line":346,"column":13}},"90":{"start":{"line":345,"column":16},"end":{"line":345,"column":33}},"91":{"start":{"line":347,"column":29},"end":{"line":351,"column":24}},"92":{"start":{"line":352,"column":32},"end":{"line":352,"column":60}},"93":{"start":{"line":354,"column":12},"end":{"line":359,"column":13}},"94":{"start":{"line":355,"column":16},"end":{"line":355,"column":55}},"95":{"start":{"line":360,"column":27},"end":{"line":360,"column":32}},"96":{"start":{"line":361,"column":12},"end":{"line":366,"column":13}},"97":{"start":{"line":362,"column":16},"end":{"line":362,"column":51}},"98":{"start":{"line":367,"column":12},"end":{"line":374,"column":14}},"99":{"start":{"line":377,"column":12},"end":{"line":377,"column":29}},"100":{"start":{"line":384,"column":8},"end":{"line":416,"column":9}},"101":{"start":{"line":386,"column":12},"end":{"line":388,"column":13}},"102":{"start":{"line":387,"column":16},"end":{"line":387,"column":33}},"103":{"start":{"line":389,"column":29},"end":{"line":389,"column":194}},"104":{"start":{"line":391,"column":12},"end":{"line":396,"column":13}},"105":{"start":{"line":392,"column":16},"end":{"line":392,"column":44}},"106":{"start":{"line":397,"column":27},"end":{"line":397,"column":32}},"107":{"start":{"line":398,"column":12},"end":{"line":403,"column":13}},"108":{"start":{"line":399,"column":16},"end":{"line":399,"column":51}},"109":{"start":{"line":404,"column":12},"end":{"line":412,"column":14}},"110":{"start":{"line":415,"column":12},"end":{"line":415,"column":29}},"111":{"start":{"line":422,"column":8},"end":{"line":434,"column":9}},"112":{"start":{"line":424,"column":12},"end":{"line":426,"column":13}},"113":{"start":{"line":425,"column":16},"end":{"line":425,"column":29}},"114":{"start":{"line":427,"column":29},"end":{"line":427,"column":149}},"115":{"start":{"line":429,"column":12},"end":{"line":429,"column":51}},"116":{"start":{"line":430,"column":12},"end":{"line":430,"column":24}},"117":{"start":{"line":433,"column":12},"end":{"line":433,"column":25}},"118":{"start":{"line":440,"column":8},"end":{"line":452,"column":9}},"119":{"start":{"line":442,"column":12},"end":{"line":444,"column":13}},"120":{"start":{"line":443,"column":16},"end":{"line":443,"column":29}},"121":{"start":{"line":445,"column":29},"end":{"line":445,"column":141}},"122":{"start":{"line":447,"column":12},"end":{"line":447,"column":51}},"123":{"start":{"line":448,"column":12},"end":{"line":448,"column":24}},"124":{"start":{"line":451,"column":12},"end":{"line":451,"column":25}},"125":{"start":{"line":458,"column":23},"end":{"line":458,"column":25}},"126":{"start":{"line":460,"column":8},"end":{"line":465,"column":9}},"127":{"start":{"line":461,"column":30},"end":{"line":461,"column":59}},"128":{"start":{"line":462,"column":12},"end":{"line":464,"column":13}},"129":{"start":{"line":463,"column":16},"end":{"line":463,"column":219}},"130":{"start":{"line":466,"column":8},"end":{"line":471,"column":9}},"131":{"start":{"line":467,"column":30},"end":{"line":467,"column":59}},"132":{"start":{"line":468,"column":12},"end":{"line":470,"column":13}},"133":{"start":{"line":469,"column":16},"end":{"line":469,"column":225}},"134":{"start":{"line":473,"column":8},"end":{"line":475,"column":9}},"135":{"start":{"line":474,"column":12},"end":{"line":474,"column":190}},"136":{"start":{"line":477,"column":8},"end":{"line":479,"column":9}},"137":{"start":{"line":478,"column":12},"end":{"line":478,"column":214}},"138":{"start":{"line":481,"column":8},"end":{"line":483,"column":9}},"139":{"start":{"line":482,"column":12},"end":{"line":482,"column":169}},"140":{"start":{"line":484,"column":8},"end":{"line":484,"column":22}},"141":{"start":{"line":490,"column":23},"end":{"line":490,"column":25}},"142":{"start":{"line":492,"column":8},"end":{"line":494,"column":9}},"143":{"start":{"line":493,"column":12},"end":{"line":493,"column":206}},"144":{"start":{"line":496,"column":8},"end":{"line":498,"column":9}},"145":{"start":{"line":497,"column":12},"end":{"line":497,"column":194}},"146":{"start":{"line":500,"column":8},"end":{"line":502,"column":9}},"147":{"start":{"line":501,"column":12},"end":{"line":501,"column":169}},"148":{"start":{"line":503,"column":8},"end":{"line":503,"column":22}},"149":{"start":{"line":509,"column":23},"end":{"line":509,"column":25}},"150":{"start":{"line":511,"column":8},"end":{"line":513,"column":9}},"151":{"start":{"line":512,"column":12},"end":{"line":512,"column":179}},"152":{"start":{"line":515,"column":8},"end":{"line":517,"column":9}},"153":{"start":{"line":516,"column":12},"end":{"line":516,"column":177}},"154":{"start":{"line":518,"column":8},"end":{"line":518,"column":22}},"155":{"start":{"line":524,"column":23},"end":{"line":524,"column":25}},"156":{"start":{"line":526,"column":8},"end":{"line":528,"column":9}},"157":{"start":{"line":527,"column":12},"end":{"line":527,"column":208}},"158":{"start":{"line":530,"column":8},"end":{"line":532,"column":9}},"159":{"start":{"line":531,"column":12},"end":{"line":531,"column":316}},"160":{"start":{"line":533,"column":8},"end":{"line":533,"column":22}},"161":{"start":{"line":537,"column":8},"end":{"line":537,"column":57}},"162":{"start":{"line":540,"column":8},"end":{"line":542,"column":9}},"163":{"start":{"line":541,"column":12},"end":{"line":541,"column":51}},"164":{"start":{"line":545,"column":8},"end":{"line":553,"column":10}},"165":{"start":{"line":556,"column":0},"end":{"line":556,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":18},"end":{"line":66,"column":5}},"line":19},"1":{"name":"(anonymous_1)","decl":{"start":{"line":70,"column":4},"end":{"line":70,"column":5}},"loc":{"start":{"line":70,"column":24},"end":{"line":134,"column":5}},"line":70},"2":{"name":"(anonymous_2)","decl":{"start":{"line":138,"column":4},"end":{"line":138,"column":5}},"loc":{"start":{"line":138,"column":27},"end":{"line":182,"column":5}},"line":138},"3":{"name":"(anonymous_3)","decl":{"start":{"line":186,"column":4},"end":{"line":186,"column":5}},"loc":{"start":{"line":186,"column":39},"end":{"line":188,"column":5}},"line":186},"4":{"name":"(anonymous_4)","decl":{"start":{"line":192,"column":4},"end":{"line":192,"column":5}},"loc":{"start":{"line":192,"column":27},"end":{"line":239,"column":5}},"line":192},"5":{"name":"(anonymous_5)","decl":{"start":{"line":217,"column":36},"end":{"line":217,"column":37}},"loc":{"start":{"line":217,"column":41},"end":{"line":217,"column":132}},"line":217},"6":{"name":"(anonymous_6)","decl":{"start":{"line":243,"column":4},"end":{"line":243,"column":5}},"loc":{"start":{"line":243,"column":38},"end":{"line":283,"column":5}},"line":243},"7":{"name":"(anonymous_7)","decl":{"start":{"line":287,"column":4},"end":{"line":287,"column":5}},"loc":{"start":{"line":287,"column":46},"end":{"line":337,"column":5}},"line":287},"8":{"name":"(anonymous_8)","decl":{"start":{"line":341,"column":4},"end":{"line":341,"column":5}},"loc":{"start":{"line":341,"column":47},"end":{"line":379,"column":5}},"line":341},"9":{"name":"(anonymous_9)","decl":{"start":{"line":383,"column":4},"end":{"line":383,"column":5}},"loc":{"start":{"line":383,"column":48},"end":{"line":417,"column":5}},"line":383},"10":{"name":"(anonymous_10)","decl":{"start":{"line":421,"column":4},"end":{"line":421,"column":5}},"loc":{"start":{"line":421,"column":43},"end":{"line":435,"column":5}},"line":421},"11":{"name":"(anonymous_11)","decl":{"start":{"line":439,"column":4},"end":{"line":439,"column":5}},"loc":{"start":{"line":439,"column":43},"end":{"line":453,"column":5}},"line":439},"12":{"name":"(anonymous_12)","decl":{"start":{"line":457,"column":4},"end":{"line":457,"column":5}},"loc":{"start":{"line":457,"column":42},"end":{"line":485,"column":5}},"line":457},"13":{"name":"(anonymous_13)","decl":{"start":{"line":489,"column":4},"end":{"line":489,"column":5}},"loc":{"start":{"line":489,"column":44},"end":{"line":504,"column":5}},"line":489},"14":{"name":"(anonymous_14)","decl":{"start":{"line":508,"column":4},"end":{"line":508,"column":5}},"loc":{"start":{"line":508,"column":46},"end":{"line":519,"column":5}},"line":508},"15":{"name":"(anonymous_15)","decl":{"start":{"line":523,"column":4},"end":{"line":523,"column":5}},"loc":{"start":{"line":523,"column":47},"end":{"line":534,"column":5}},"line":523},"16":{"name":"(anonymous_16)","decl":{"start":{"line":536,"column":4},"end":{"line":536,"column":5}},"loc":{"start":{"line":536,"column":29},"end":{"line":538,"column":5}},"line":536},"17":{"name":"(anonymous_17)","decl":{"start":{"line":539,"column":4},"end":{"line":539,"column":5}},"loc":{"start":{"line":539,"column":33},"end":{"line":543,"column":5}},"line":539},"18":{"name":"(anonymous_18)","decl":{"start":{"line":544,"column":4},"end":{"line":544,"column":5}},"loc":{"start":{"line":544,"column":86},"end":{"line":554,"column":5}},"line":544}},"branchMap":{"0":{"loc":{"start":{"line":152,"column":12},"end":{"line":154,"column":13}},"type":"if","locations":[{"start":{"line":152,"column":12},"end":{"line":154,"column":13}},{"start":{},"end":{}}],"line":152},"1":{"loc":{"start":{"line":152,"column":16},"end":{"line":152,"column":81}},"type":"binary-expr","locations":[{"start":{"line":152,"column":16},"end":{"line":152,"column":43}},{"start":{"line":152,"column":47},"end":{"line":152,"column":81}}],"line":152},"2":{"loc":{"start":{"line":157,"column":8},"end":{"line":164,"column":9}},"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":164,"column":9}},{"start":{},"end":{}}],"line":157},"3":{"loc":{"start":{"line":165,"column":8},"end":{"line":172,"column":9}},"type":"if","locations":[{"start":{"line":165,"column":8},"end":{"line":172,"column":9}},{"start":{},"end":{}}],"line":165},"4":{"loc":{"start":{"line":173,"column":8},"end":{"line":176,"column":9}},"type":"if","locations":[{"start":{"line":173,"column":8},"end":{"line":176,"column":9}},{"start":{},"end":{}}],"line":173},"5":{"loc":{"start":{"line":173,"column":12},"end":{"line":174,"column":57}},"type":"binary-expr","locations":[{"start":{"line":173,"column":12},"end":{"line":173,"column":55}},{"start":{"line":174,"column":12},"end":{"line":174,"column":57}}],"line":173},"6":{"loc":{"start":{"line":201,"column":12},"end":{"line":203,"column":13}},"type":"if","locations":[{"start":{"line":201,"column":12},"end":{"line":203,"column":13}},{"start":{},"end":{}}],"line":201},"7":{"loc":{"start":{"line":201,"column":16},"end":{"line":201,"column":60}},"type":"binary-expr","locations":[{"start":{"line":201,"column":16},"end":{"line":201,"column":39}},{"start":{"line":201,"column":43},"end":{"line":201,"column":60}}],"line":201},"8":{"loc":{"start":{"line":205,"column":12},"end":{"line":207,"column":13}},"type":"if","locations":[{"start":{"line":205,"column":12},"end":{"line":207,"column":13}},{"start":{},"end":{}}],"line":205},"9":{"loc":{"start":{"line":205,"column":16},"end":{"line":205,"column":62}},"type":"binary-expr","locations":[{"start":{"line":205,"column":16},"end":{"line":205,"column":40}},{"start":{"line":205,"column":44},"end":{"line":205,"column":62}}],"line":205},"10":{"loc":{"start":{"line":209,"column":12},"end":{"line":211,"column":13}},"type":"if","locations":[{"start":{"line":209,"column":12},"end":{"line":211,"column":13}},{"start":{},"end":{}}],"line":209},"11":{"loc":{"start":{"line":209,"column":16},"end":{"line":209,"column":64}},"type":"binary-expr","locations":[{"start":{"line":209,"column":16},"end":{"line":209,"column":41}},{"start":{"line":209,"column":45},"end":{"line":209,"column":64}}],"line":209},"12":{"loc":{"start":{"line":217,"column":24},"end":{"line":219,"column":51}},"type":"cond-expr","locations":[{"start":{"line":218,"column":22},"end":{"line":218,"column":51}},{"start":{"line":219,"column":22},"end":{"line":219,"column":51}}],"line":217},"13":{"loc":{"start":{"line":217,"column":41},"end":{"line":217,"column":132}},"type":"binary-expr","locations":[{"start":{"line":217,"column":41},"end":{"line":217,"column":83}},{"start":{"line":217,"column":87},"end":{"line":217,"column":132}}],"line":217},"14":{"loc":{"start":{"line":256,"column":12},"end":{"line":257,"column":47}},"type":"if","locations":[{"start":{"line":256,"column":12},"end":{"line":257,"column":47}},{"start":{},"end":{}}],"line":256},"15":{"loc":{"start":{"line":266,"column":12},"end":{"line":267,"column":47}},"type":"if","locations":[{"start":{"line":266,"column":12},"end":{"line":267,"column":47}},{"start":{},"end":{}}],"line":266},"16":{"loc":{"start":{"line":276,"column":12},"end":{"line":277,"column":47}},"type":"if","locations":[{"start":{"line":276,"column":12},"end":{"line":277,"column":47}},{"start":{},"end":{}}],"line":276},"17":{"loc":{"start":{"line":290,"column":12},"end":{"line":292,"column":13}},"type":"if","locations":[{"start":{"line":290,"column":12},"end":{"line":292,"column":13}},{"start":{},"end":{}}],"line":290},"18":{"loc":{"start":{"line":328,"column":33},"end":{"line":328,"column":78}},"type":"cond-expr","locations":[{"start":{"line":328,"column":49},"end":{"line":328,"column":66}},{"start":{"line":328,"column":69},"end":{"line":328,"column":78}}],"line":328},"19":{"loc":{"start":{"line":328,"column":33},"end":{"line":328,"column":46}},"type":"binary-expr","locations":[{"start":{"line":328,"column":33},"end":{"line":328,"column":39}},{"start":{"line":328,"column":43},"end":{"line":328,"column":46}}],"line":328},"20":{"loc":{"start":{"line":344,"column":12},"end":{"line":346,"column":13}},"type":"if","locations":[{"start":{"line":344,"column":12},"end":{"line":346,"column":13}},{"start":{},"end":{}}],"line":344},"21":{"loc":{"start":{"line":370,"column":33},"end":{"line":370,"column":80}},"type":"cond-expr","locations":[{"start":{"line":370,"column":45},"end":{"line":370,"column":68}},{"start":{"line":370,"column":71},"end":{"line":370,"column":80}}],"line":370},"22":{"loc":{"start":{"line":386,"column":12},"end":{"line":388,"column":13}},"type":"if","locations":[{"start":{"line":386,"column":12},"end":{"line":388,"column":13}},{"start":{},"end":{}}],"line":386},"23":{"loc":{"start":{"line":424,"column":12},"end":{"line":426,"column":13}},"type":"if","locations":[{"start":{"line":424,"column":12},"end":{"line":426,"column":13}},{"start":{},"end":{}}],"line":424},"24":{"loc":{"start":{"line":442,"column":12},"end":{"line":444,"column":13}},"type":"if","locations":[{"start":{"line":442,"column":12},"end":{"line":444,"column":13}},{"start":{},"end":{}}],"line":442},"25":{"loc":{"start":{"line":460,"column":8},"end":{"line":465,"column":9}},"type":"if","locations":[{"start":{"line":460,"column":8},"end":{"line":465,"column":9}},{"start":{},"end":{}}],"line":460},"26":{"loc":{"start":{"line":462,"column":12},"end":{"line":464,"column":13}},"type":"if","locations":[{"start":{"line":462,"column":12},"end":{"line":464,"column":13}},{"start":{},"end":{}}],"line":462},"27":{"loc":{"start":{"line":466,"column":8},"end":{"line":471,"column":9}},"type":"if","locations":[{"start":{"line":466,"column":8},"end":{"line":471,"column":9}},{"start":{},"end":{}}],"line":466},"28":{"loc":{"start":{"line":468,"column":12},"end":{"line":470,"column":13}},"type":"if","locations":[{"start":{"line":468,"column":12},"end":{"line":470,"column":13}},{"start":{},"end":{}}],"line":468},"29":{"loc":{"start":{"line":473,"column":8},"end":{"line":475,"column":9}},"type":"if","locations":[{"start":{"line":473,"column":8},"end":{"line":475,"column":9}},{"start":{},"end":{}}],"line":473},"30":{"loc":{"start":{"line":473,"column":12},"end":{"line":473,"column":54}},"type":"binary-expr","locations":[{"start":{"line":473,"column":12},"end":{"line":473,"column":33}},{"start":{"line":473,"column":37},"end":{"line":473,"column":54}}],"line":473},"31":{"loc":{"start":{"line":477,"column":8},"end":{"line":479,"column":9}},"type":"if","locations":[{"start":{"line":477,"column":8},"end":{"line":479,"column":9}},{"start":{},"end":{}}],"line":477},"32":{"loc":{"start":{"line":477,"column":12},"end":{"line":477,"column":84}},"type":"binary-expr","locations":[{"start":{"line":477,"column":12},"end":{"line":477,"column":39}},{"start":{"line":477,"column":43},"end":{"line":477,"column":60}},{"start":{"line":477,"column":64},"end":{"line":477,"column":84}}],"line":477},"33":{"loc":{"start":{"line":481,"column":8},"end":{"line":483,"column":9}},"type":"if","locations":[{"start":{"line":481,"column":8},"end":{"line":483,"column":9}},{"start":{},"end":{}}],"line":481},"34":{"loc":{"start":{"line":481,"column":12},"end":{"line":481,"column":56}},"type":"binary-expr","locations":[{"start":{"line":481,"column":12},"end":{"line":481,"column":34}},{"start":{"line":481,"column":38},"end":{"line":481,"column":56}}],"line":481},"35":{"loc":{"start":{"line":492,"column":8},"end":{"line":494,"column":9}},"type":"if","locations":[{"start":{"line":492,"column":8},"end":{"line":494,"column":9}},{"start":{},"end":{}}],"line":492},"36":{"loc":{"start":{"line":492,"column":12},"end":{"line":492,"column":58}},"type":"binary-expr","locations":[{"start":{"line":492,"column":12},"end":{"line":492,"column":33}},{"start":{"line":492,"column":37},"end":{"line":492,"column":58}}],"line":492},"37":{"loc":{"start":{"line":496,"column":8},"end":{"line":498,"column":9}},"type":"if","locations":[{"start":{"line":496,"column":8},"end":{"line":498,"column":9}},{"start":{},"end":{}}],"line":496},"38":{"loc":{"start":{"line":496,"column":12},"end":{"line":496,"column":82}},"type":"binary-expr","locations":[{"start":{"line":496,"column":12},"end":{"line":496,"column":32}},{"start":{"line":496,"column":36},"end":{"line":496,"column":82}}],"line":496},"39":{"loc":{"start":{"line":500,"column":8},"end":{"line":502,"column":9}},"type":"if","locations":[{"start":{"line":500,"column":8},"end":{"line":502,"column":9}},{"start":{},"end":{}}],"line":500},"40":{"loc":{"start":{"line":500,"column":12},"end":{"line":500,"column":57}},"type":"binary-expr","locations":[{"start":{"line":500,"column":12},"end":{"line":500,"column":34}},{"start":{"line":500,"column":38},"end":{"line":500,"column":57}}],"line":500},"41":{"loc":{"start":{"line":511,"column":8},"end":{"line":513,"column":9}},"type":"if","locations":[{"start":{"line":511,"column":8},"end":{"line":513,"column":9}},{"start":{},"end":{}}],"line":511},"42":{"loc":{"start":{"line":511,"column":12},"end":{"line":511,"column":58}},"type":"binary-expr","locations":[{"start":{"line":511,"column":12},"end":{"line":511,"column":34}},{"start":{"line":511,"column":38},"end":{"line":511,"column":58}}],"line":511},"43":{"loc":{"start":{"line":515,"column":8},"end":{"line":517,"column":9}},"type":"if","locations":[{"start":{"line":515,"column":8},"end":{"line":517,"column":9}},{"start":{},"end":{}}],"line":515},"44":{"loc":{"start":{"line":526,"column":8},"end":{"line":528,"column":9}},"type":"if","locations":[{"start":{"line":526,"column":8},"end":{"line":528,"column":9}},{"start":{},"end":{}}],"line":526},"45":{"loc":{"start":{"line":530,"column":8},"end":{"line":532,"column":9}},"type":"if","locations":[{"start":{"line":530,"column":8},"end":{"line":532,"column":9}},{"start":{},"end":{}}],"line":530},"46":{"loc":{"start":{"line":537,"column":16},"end":{"line":537,"column":55}},"type":"binary-expr","locations":[{"start":{"line":537,"column":16},"end":{"line":537,"column":49}},{"start":{"line":537,"column":53},"end":{"line":537,"column":55}}],"line":537},"47":{"loc":{"start":{"line":540,"column":8},"end":{"line":542,"column":9}},"type":"if","locations":[{"start":{"line":540,"column":8},"end":{"line":542,"column":9}},{"start":{},"end":{}}],"line":540}},"s":{"0":1,"1":1,"2":1,"3":1,"4":3,"5":3,"6":3,"7":3,"8":3,"9":3,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":1},"f":{"0":3,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0]},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/TokenSupplyModule.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/TokenSupplyModule.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Token Supply Monitoring Module for Hardhat Diamond Monitor Plugin\n *\n * Monitors token supply mechanics including total supply, minting/burning,\n * supply caps, and token distribution patterns.\n */\n\nimport { ethers } from 'ethers';\nimport {\n  MonitoringModule,\n  MonitoringContext,\n  MonitoringResult,\n  MonitoringIssue,\n  SeverityLevel,\n  DiamondInfo,\n  NetworkInfo,\n  ConfigRequirement,\n  ValidationResult,\n  MonitoringStatus,\n} from '../core/types';\n\n/**\n * Token supply information for ERC20-like tokens\n */\ninterface ERC20SupplyInfo {\n  totalSupply: bigint;\n  decimals: number;\n  symbol: string;\n  name: string;\n  hasCap: boolean;\n  cap?: bigint;\n  remainingSupply?: bigint;\n  isMintable: boolean;\n  isBurnable: boolean;\n  isPaused: boolean;\n}\n\n/**\n * Token supply information for ERC721-like tokens\n */\ninterface ERC721SupplyInfo {\n  totalSupply: bigint;\n  maxSupply?: bigint;\n  remainingSupply?: bigint;\n  isMintable: boolean;\n  isBurnable: boolean;\n  isPaused: boolean;\n  baseURI?: string;\n}\n\n/**\n * Token supply information for ERC1155-like tokens\n */\ninterface ERC1155SupplyInfo {\n  tokenIds: string[];\n  totalSupplies: Record<string, bigint>;\n  maxSupplies: Record<string, bigint>;\n  isMintable: boolean;\n  isBurnable: boolean;\n  isPaused: boolean;\n  uri?: string;\n}\n\n/**\n * Combined token analysis result\n */\ninterface TokenSupplyAnalysis {\n  hasERC20: boolean;\n  hasERC721: boolean;\n  hasERC1155: boolean;\n  erc20Info?: ERC20SupplyInfo;\n  erc721Info?: ERC721SupplyInfo;\n  erc1155Info?: ERC1155SupplyInfo;\n  supplyIssues: string[];\n  totalTokenContracts: number;\n}\n\n/**\n * Configuration for token supply module\n */\ninterface TokenSupplyModuleConfig {\n  checkERC20?: boolean;\n  checkERC721?: boolean;\n  checkERC1155?: boolean;\n  enforceSupplyCaps?: boolean;\n  maxTotalSupply?: string; // String to handle BigInt\n  minTotalSupply?: string;\n  requireMintCap?: boolean;\n  allowInfiniteSupply?: boolean;\n  checkPauseState?: boolean;\n  monitorSupplyChanges?: boolean;\n  expectedTokenStandards?: string[];\n}\n\n/**\n * Token Supply Monitoring Module\n *\n * Monitors token supply mechanisms across different token standards (ERC20, ERC721, ERC1155)\n * implemented within the diamond contract.\n */\nexport class TokenSupplyModule implements MonitoringModule {\n  public readonly id = 'token-supply';\n  public readonly name = 'Token Supply Monitoring';\n  public readonly description =\n    'Monitors token supply mechanisms, caps, and distribution patterns across ERC20/721/1155 standards';\n  public readonly version = '1.0.0';\n  public readonly category = 'tokenomics';\n\n  // Standard token interface selectors\n  private readonly tokenSelectors = {\n    // ERC20\n    erc20: {\n      totalSupply: '0x18160ddd',\n      decimals: '0x313ce567',\n      symbol: '0x95d89b41',\n      name: '0x06fdde03',\n      balanceOf: '0x70a08231',\n    },\n    // ERC721\n    erc721: {\n      totalSupply: '0x18160ddd',\n      tokenByIndex: '0x4f6ccce7',\n      tokenOfOwnerByIndex: '0x2f745c59',\n      tokenURI: '0xc87b56dd',\n    },\n    // ERC1155\n    erc1155: {\n      balanceOf: '0x00fdd58e',\n      balanceOfBatch: '0x4e1273f4',\n      uri: '0x0e89341c',\n    },\n    // Common extensions\n    capped: {\n      cap: '0x355274ea',\n    },\n    mintable: {\n      mint: '0x40c10f19',\n      mintTo: '0x449a52f8',\n    },\n    burnable: {\n      burn: '0x42966c68',\n      burnFrom: '0x79cc6790',\n    },\n    pausable: {\n      paused: '0x5c975abb',\n      pause: '0x8456cb59',\n      unpause: '0x3f4ba83a',\n    },\n  };\n\n  /**\n   * Get configuration requirements for this module\n   */\n  public getRequiredConfig(): ConfigRequirement[] {\n    return [\n      {\n        key: 'checkERC20',\n        type: 'boolean',\n        required: false,\n        description: 'Whether to monitor ERC20 token supply',\n        defaultValue: true,\n      },\n      {\n        key: 'checkERC721',\n        type: 'boolean',\n        required: false,\n        description: 'Whether to monitor ERC721 token supply',\n        defaultValue: true,\n      },\n      {\n        key: 'checkERC1155',\n        type: 'boolean',\n        required: false,\n        description: 'Whether to monitor ERC1155 token supply',\n        defaultValue: true,\n      },\n      {\n        key: 'enforceSupplyCaps',\n        type: 'boolean',\n        required: false,\n        description: 'Whether to enforce supply cap validation',\n        defaultValue: true,\n      },\n      {\n        key: 'maxTotalSupply',\n        type: 'string',\n        required: false,\n        description: 'Maximum allowed total supply (as string to handle large numbers)',\n      },\n      {\n        key: 'minTotalSupply',\n        type: 'string',\n        required: false,\n        description: 'Minimum expected total supply (as string to handle large numbers)',\n      },\n      {\n        key: 'requireMintCap',\n        type: 'boolean',\n        required: false,\n        description: 'Whether a minting cap should be required',\n        defaultValue: false,\n      },\n      {\n        key: 'allowInfiniteSupply',\n        type: 'boolean',\n        required: false,\n        description: 'Whether infinite supply tokens are allowed',\n        defaultValue: true,\n      },\n      {\n        key: 'checkPauseState',\n        type: 'boolean',\n        required: false,\n        description: 'Whether to monitor pause state of tokens',\n        defaultValue: true,\n      },\n    ];\n  }\n\n  /**\n   * Validate module configuration\n   */\n  public validateConfig(config: any): ValidationResult {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    // Validate boolean fields\n    const booleanFields = [\n      'checkERC20',\n      'checkERC721',\n      'checkERC1155',\n      'enforceSupplyCaps',\n      'requireMintCap',\n      'allowInfiniteSupply',\n      'checkPauseState',\n    ];\n    for (const field of booleanFields) {\n      if (config[field] !== undefined && typeof config[field] !== 'boolean') {\n        errors.push(`${field} must be a boolean`);\n      }\n    }\n\n    // Validate supply limits\n    if (config.maxTotalSupply !== undefined) {\n      try {\n        BigInt(config.maxTotalSupply);\n      } catch {\n        errors.push('maxTotalSupply must be a valid number string');\n      }\n    }\n\n    if (config.minTotalSupply !== undefined) {\n      try {\n        BigInt(config.minTotalSupply);\n      } catch {\n        errors.push('minTotalSupply must be a valid number string');\n      }\n    }\n\n    if (\n      config.expectedTokenStandards !== undefined &&\n      !Array.isArray(config.expectedTokenStandards)\n    ) {\n      errors.push('expectedTokenStandards must be an array');\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n      warnings,\n    };\n  }\n\n  /**\n   * Check if this module can monitor the given diamond\n   */\n  public async canMonitor(diamond: DiamondInfo, network: NetworkInfo): Promise<boolean> {\n    return true; // This module can monitor any diamond\n  }\n\n  /**\n   * Execute token supply monitoring\n   */\n  public async monitor(context: MonitoringContext): Promise<MonitoringResult> {\n    const startTime = Date.now();\n    const issues: MonitoringIssue[] = [];\n    const moduleConfig = this.getModuleConfig<TokenSupplyModuleConfig>(context);\n\n    this.log(context, 'info', '🪙 Starting token supply monitoring...');\n\n    try {\n      // Analyze token supply across different standards\n      const analysis = await this.analyzeTokenSupply(context);\n\n      // Monitor ERC20 tokens if enabled\n      if (moduleConfig.checkERC20 && analysis.hasERC20) {\n        issues.push(...this.monitorERC20Supply(analysis.erc20Info!, moduleConfig));\n      }\n\n      // Monitor ERC721 tokens if enabled\n      if (moduleConfig.checkERC721 && analysis.hasERC721) {\n        issues.push(...this.monitorERC721Supply(analysis.erc721Info!, moduleConfig));\n      }\n\n      // Monitor ERC1155 tokens if enabled\n      if (moduleConfig.checkERC1155 && analysis.hasERC1155) {\n        issues.push(...this.monitorERC1155Supply(analysis.erc1155Info!, moduleConfig));\n      }\n\n      // Check for general supply issues\n      issues.push(...this.checkGeneralSupplyIssues(analysis, moduleConfig));\n\n      const executionTime = Date.now() - startTime;\n      this.log(context, 'info', `✅ Token supply monitoring completed in ${executionTime}ms`);\n\n      return {\n        status: issues.some(\n          i => i.severity === SeverityLevel.ERROR || i.severity === SeverityLevel.CRITICAL\n        )\n          ? MonitoringStatus.FAIL\n          : MonitoringStatus.PASS,\n        issues,\n        executionTime,\n        metadata: {\n          analysis,\n          moduleConfig,\n        },\n      };\n    } catch (error) {\n      const executionTime = Date.now() - startTime;\n      this.log(context, 'error', `❌ Token supply monitoring failed: ${(error as Error).message}`);\n\n      issues.push(\n        this.createIssue(\n          'token-supply-error',\n          'Token Supply Monitoring Failed',\n          `Failed to analyze token supply: ${(error as Error).message}`,\n          SeverityLevel.ERROR,\n          'execution'\n        )\n      );\n\n      return {\n        status: MonitoringStatus.FAIL,\n        issues,\n        executionTime,\n        metadata: { error: (error as Error).message },\n      };\n    }\n  }\n\n  /**\n   * Analyze token supply across different token standards\n   */\n  private async analyzeTokenSupply(context: MonitoringContext): Promise<TokenSupplyAnalysis> {\n    const { diamond, provider } = context;\n\n    const analysis: TokenSupplyAnalysis = {\n      hasERC20: false,\n      hasERC721: false,\n      hasERC1155: false,\n      supplyIssues: [],\n      totalTokenContracts: 0,\n    };\n\n    // Check for ERC20 implementation\n    try {\n      analysis.erc20Info = await this.checkERC20Supply(diamond.address, provider);\n      analysis.hasERC20 = !!analysis.erc20Info;\n      if (analysis.hasERC20) analysis.totalTokenContracts++;\n    } catch (error) {\n      this.log(context, 'debug', `ERC20 check failed: ${(error as Error).message}`);\n    }\n\n    // Check for ERC721 implementation\n    try {\n      analysis.erc721Info = await this.checkERC721Supply(diamond.address, provider);\n      analysis.hasERC721 = !!analysis.erc721Info;\n      if (analysis.hasERC721) analysis.totalTokenContracts++;\n    } catch (error) {\n      this.log(context, 'debug', `ERC721 check failed: ${(error as Error).message}`);\n    }\n\n    // Check for ERC1155 implementation\n    try {\n      analysis.erc1155Info = await this.checkERC1155Supply(diamond.address, provider);\n      analysis.hasERC1155 = !!analysis.erc1155Info;\n      if (analysis.hasERC1155) analysis.totalTokenContracts++;\n    } catch (error) {\n      this.log(context, 'debug', `ERC1155 check failed: ${(error as Error).message}`);\n    }\n\n    return analysis;\n  }\n\n  /**\n   * Check ERC20 token supply information\n   */\n  private async checkERC20Supply(\n    address: string,\n    provider: any\n  ): Promise<ERC20SupplyInfo | undefined> {\n    try {\n      // Ensure address is properly formatted\n      if (!ethers.isAddress(address)) {\n        return undefined;\n      }\n\n      const contract = new ethers.Contract(\n        ethers.getAddress(address),\n        [\n          'function totalSupply() view returns (uint256)',\n          'function decimals() view returns (uint8)',\n          'function symbol() view returns (string)',\n          'function name() view returns (string)',\n          'function cap() view returns (uint256)',\n          'function paused() view returns (bool)',\n        ],\n        provider\n      );\n\n      const totalSupply = await contract.totalSupply();\n      const decimals = await contract.decimals();\n      const symbol = await contract.symbol();\n      const name = await contract.name();\n\n      let cap: bigint | undefined;\n      let hasCap = false;\n      try {\n        cap = await contract.cap();\n        hasCap = true;\n      } catch {\n        // No cap function\n      }\n\n      let isPaused = false;\n      try {\n        isPaused = await contract.paused();\n      } catch {\n        // No pause function\n      }\n\n      return {\n        totalSupply,\n        decimals,\n        symbol,\n        name,\n        hasCap,\n        cap,\n        remainingSupply: hasCap && cap ? cap - totalSupply : undefined,\n        isMintable: await this.checkMintable(address, provider),\n        isBurnable: await this.checkBurnable(address, provider),\n        isPaused,\n      };\n    } catch {\n      return undefined;\n    }\n  }\n\n  /**\n   * Check ERC721 token supply information\n   */\n  private async checkERC721Supply(\n    address: string,\n    provider: any\n  ): Promise<ERC721SupplyInfo | undefined> {\n    try {\n      // Ensure address is properly formatted\n      if (!ethers.isAddress(address)) {\n        return undefined;\n      }\n\n      const contract = new ethers.Contract(\n        ethers.getAddress(address),\n        [\n          'function totalSupply() view returns (uint256)',\n          'function maxSupply() view returns (uint256)',\n          'function paused() view returns (bool)',\n        ],\n        provider\n      );\n\n      const totalSupply = await contract.totalSupply();\n\n      let maxSupply: bigint | undefined;\n      try {\n        maxSupply = await contract.maxSupply();\n      } catch {\n        // No maxSupply function\n      }\n\n      let isPaused = false;\n      try {\n        isPaused = await contract.paused();\n      } catch {\n        // No pause function\n      }\n\n      return {\n        totalSupply,\n        maxSupply,\n        remainingSupply: maxSupply ? maxSupply - totalSupply : undefined,\n        isMintable: await this.checkMintable(address, provider),\n        isBurnable: await this.checkBurnable(address, provider),\n        isPaused,\n      };\n    } catch {\n      return undefined;\n    }\n  }\n\n  /**\n   * Check ERC1155 token supply information\n   */\n  private async checkERC1155Supply(\n    address: string,\n    provider: any\n  ): Promise<ERC1155SupplyInfo | undefined> {\n    try {\n      // Ensure address is properly formatted\n      if (!ethers.isAddress(address)) {\n        return undefined;\n      }\n\n      const contract = new ethers.Contract(\n        ethers.getAddress(address),\n        ['function uri(uint256) view returns (string)', 'function paused() view returns (bool)'],\n        provider\n      );\n\n      let uri: string | undefined;\n      try {\n        uri = await contract.uri(0); // Try to get URI for token ID 0\n      } catch {\n        // No URI or token doesn't exist\n      }\n\n      let isPaused = false;\n      try {\n        isPaused = await contract.paused();\n      } catch {\n        // No pause function\n      }\n\n      return {\n        tokenIds: [], // Would need to track this from events\n        totalSupplies: {}, // Would need to query specific token IDs\n        maxSupplies: {}, // Would need contract-specific implementation\n        isMintable: await this.checkMintable(address, provider),\n        isBurnable: await this.checkBurnable(address, provider),\n        isPaused,\n        uri,\n      };\n    } catch {\n      return undefined;\n    }\n  }\n\n  /**\n   * Check if contract supports minting\n   */\n  private async checkMintable(address: string, provider: any): Promise<boolean> {\n    try {\n      // Ensure address is properly formatted\n      if (!ethers.isAddress(address)) {\n        return false;\n      }\n\n      const contract = new ethers.Contract(\n        ethers.getAddress(address),\n        ['function mint(address,uint256) external'],\n        provider\n      );\n\n      // Try to get the function (will throw if not present)\n      contract.interface.getFunction('mint');\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Check if contract supports burning\n   */\n  private async checkBurnable(address: string, provider: any): Promise<boolean> {\n    try {\n      // Ensure address is properly formatted\n      if (!ethers.isAddress(address)) {\n        return false;\n      }\n\n      const contract = new ethers.Contract(\n        ethers.getAddress(address),\n        ['function burn(uint256) external'],\n        provider\n      );\n\n      // Try to get the function (will throw if not present)\n      contract.interface.getFunction('burn');\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Monitor ERC20 supply patterns\n   */\n  private monitorERC20Supply(\n    erc20Info: ERC20SupplyInfo,\n    config: TokenSupplyModuleConfig\n  ): MonitoringIssue[] {\n    const issues: MonitoringIssue[] = [];\n\n    // Check total supply limits\n    if (config.maxTotalSupply) {\n      const maxSupply = BigInt(config.maxTotalSupply);\n      if (erc20Info.totalSupply > maxSupply) {\n        issues.push(\n          this.createIssue(\n            'erc20-supply-exceeded',\n            'ERC20 Supply Exceeds Maximum',\n            `Total supply ${erc20Info.totalSupply} exceeds maximum ${maxSupply}`,\n            SeverityLevel.ERROR,\n            'supply-limits'\n          )\n        );\n      }\n    }\n\n    if (config.minTotalSupply) {\n      const minSupply = BigInt(config.minTotalSupply);\n      if (erc20Info.totalSupply < minSupply) {\n        issues.push(\n          this.createIssue(\n            'erc20-supply-below-minimum',\n            'ERC20 Supply Below Minimum',\n            `Total supply ${erc20Info.totalSupply} is below minimum ${minSupply}`,\n            SeverityLevel.WARNING,\n            'supply-limits'\n          )\n        );\n      }\n    }\n\n    // Check for supply cap requirements\n    if (config.requireMintCap && !erc20Info.hasCap) {\n      issues.push(\n        this.createIssue(\n          'erc20-missing-cap',\n          'ERC20 Missing Supply Cap',\n          'Token requires a supply cap but none is implemented',\n          SeverityLevel.ERROR,\n          'supply-caps'\n        )\n      );\n    }\n\n    // Check infinite supply\n    if (!config.allowInfiniteSupply && !erc20Info.hasCap && erc20Info.isMintable) {\n      issues.push(\n        this.createIssue(\n          'erc20-infinite-supply',\n          'ERC20 Infinite Supply Risk',\n          'Token is mintable without a supply cap, allowing infinite inflation',\n          SeverityLevel.WARNING,\n          'supply-caps'\n        )\n      );\n    }\n\n    // Check pause state\n    if (config.checkPauseState && erc20Info.isPaused) {\n      issues.push(\n        this.createIssue(\n          'erc20-paused',\n          'ERC20 Token is Paused',\n          'Token transfers are currently paused',\n          SeverityLevel.WARNING,\n          'pause-state'\n        )\n      );\n    }\n\n    return issues;\n  }\n\n  /**\n   * Monitor ERC721 supply patterns\n   */\n  private monitorERC721Supply(\n    erc721Info: ERC721SupplyInfo,\n    config: TokenSupplyModuleConfig\n  ): MonitoringIssue[] {\n    const issues: MonitoringIssue[] = [];\n\n    // Check if max supply is implemented\n    if (config.requireMintCap && !erc721Info.maxSupply) {\n      issues.push(\n        this.createIssue(\n          'erc721-missing-max-supply',\n          'ERC721 Missing Max Supply',\n          'NFT collection requires max supply but none is implemented',\n          SeverityLevel.ERROR,\n          'supply-caps'\n        )\n      );\n    }\n\n    // Check if max supply is reached\n    if (erc721Info.maxSupply && erc721Info.totalSupply >= erc721Info.maxSupply) {\n      issues.push(\n        this.createIssue(\n          'erc721-max-supply-reached',\n          'ERC721 Max Supply Reached',\n          'NFT collection has reached its maximum supply',\n          SeverityLevel.INFO,\n          'supply-limits'\n        )\n      );\n    }\n\n    // Check pause state\n    if (config.checkPauseState && erc721Info.isPaused) {\n      issues.push(\n        this.createIssue(\n          'erc721-paused',\n          'ERC721 Token is Paused',\n          'NFT transfers are currently paused',\n          SeverityLevel.WARNING,\n          'pause-state'\n        )\n      );\n    }\n\n    return issues;\n  }\n\n  /**\n   * Monitor ERC1155 supply patterns\n   */\n  private monitorERC1155Supply(\n    erc1155Info: ERC1155SupplyInfo,\n    config: TokenSupplyModuleConfig\n  ): MonitoringIssue[] {\n    const issues: MonitoringIssue[] = [];\n\n    // Check pause state\n    if (config.checkPauseState && erc1155Info.isPaused) {\n      issues.push(\n        this.createIssue(\n          'erc1155-paused',\n          'ERC1155 Token is Paused',\n          'Multi-token transfers are currently paused',\n          SeverityLevel.WARNING,\n          'pause-state'\n        )\n      );\n    }\n\n    // Check for URI implementation\n    if (!erc1155Info.uri) {\n      issues.push(\n        this.createIssue(\n          'erc1155-missing-uri',\n          'ERC1155 Missing URI',\n          'Token URI is not implemented or accessible',\n          SeverityLevel.WARNING,\n          'metadata'\n        )\n      );\n    }\n\n    return issues;\n  }\n\n  /**\n   * Check for general supply issues\n   */\n  private checkGeneralSupplyIssues(\n    analysis: TokenSupplyAnalysis,\n    config: TokenSupplyModuleConfig\n  ): MonitoringIssue[] {\n    const issues: MonitoringIssue[] = [];\n\n    // Check if any token implementation is found\n    if (analysis.totalTokenContracts === 0) {\n      issues.push(\n        this.createIssue(\n          'no-token-implementation',\n          'No Token Implementation Found',\n          'Diamond does not implement any standard token interfaces',\n          SeverityLevel.INFO,\n          'implementation'\n        )\n      );\n    }\n\n    // Check for multiple token standards\n    if (analysis.totalTokenContracts > 1) {\n      issues.push(\n        this.createIssue(\n          'multiple-token-standards',\n          'Multiple Token Standards Detected',\n          `Diamond implements ${analysis.totalTokenContracts} different token standards`,\n          SeverityLevel.INFO,\n          'implementation',\n          'Ensure proper integration and avoid conflicts between different token standards'\n        )\n      );\n    }\n\n    return issues;\n  }\n\n  // Helper methods\n\n  private getModuleConfig<T>(context: MonitoringContext): T {\n    return (context.config.modules?.[this.id] || {}) as T;\n  }\n\n  private log(context: MonitoringContext, level: string, message: string): void {\n    if (context.config.reporting?.verbose) {\n      console.log(`[${this.id}] ${message}`);\n    }\n  }\n\n  private createIssue(\n    id: string,\n    title: string,\n    description: string,\n    severity: SeverityLevel,\n    category: string,\n    recommendation?: string,\n    metadata?: any\n  ): MonitoringIssue {\n    return {\n      id,\n      title,\n      description,\n      severity,\n      category,\n      recommendation,\n      metadata,\n    };\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e9b1fb179428caf5e9cf1e4650b9f04a83e236df","contentHash":"3e3f5768e867b920276aacd01aeeb70e0e78595a50a2b93ba6f5cca609480803"},"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/ERC165ComplianceModule.ts":{"path":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/ERC165ComplianceModule.ts","statementMap":{"0":{"start":{"line":8,"column":0},"end":{"line":8,"column":62}},"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"2":{"start":{"line":10,"column":17},"end":{"line":10,"column":34}},"3":{"start":{"line":11,"column":16},"end":{"line":11,"column":40}},"4":{"start":{"line":20,"column":8},"end":{"line":20,"column":38}},"5":{"start":{"line":21,"column":8},"end":{"line":21,"column":51}},"6":{"start":{"line":22,"column":8},"end":{"line":22,"column":117}},"7":{"start":{"line":23,"column":8},"end":{"line":23,"column":31}},"8":{"start":{"line":24,"column":8},"end":{"line":24,"column":37}},"9":{"start":{"line":26,"column":8},"end":{"line":50,"column":10}},"10":{"start":{"line":52,"column":8},"end":{"line":66,"column":10}},"11":{"start":{"line":72,"column":8},"end":{"line":114,"column":10}},"12":{"start":{"line":120,"column":23},"end":{"line":120,"column":25}},"13":{"start":{"line":121,"column":25},"end":{"line":121,"column":27}},"14":{"start":{"line":123,"column":30},"end":{"line":128,"column":9}},"15":{"start":{"line":129,"column":8},"end":{"line":133,"column":9}},"16":{"start":{"line":130,"column":12},"end":{"line":132,"column":13}},"17":{"start":{"line":131,"column":16},"end":{"line":131,"column":58}},"18":{"start":{"line":135,"column":8},"end":{"line":141,"column":9}},"19":{"start":{"line":136,"column":12},"end":{"line":140,"column":13}},"20":{"start":{"line":139,"column":16},"end":{"line":139,"column":89}},"21":{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},"22":{"start":{"line":144,"column":12},"end":{"line":144,"column":63}},"23":{"start":{"line":146,"column":8},"end":{"line":158,"column":9}},"24":{"start":{"line":147,"column":12},"end":{"line":157,"column":13}},"25":{"start":{"line":148,"column":16},"end":{"line":148,"column":65}},"26":{"start":{"line":151,"column":16},"end":{"line":156,"column":17}},"27":{"start":{"line":152,"column":20},"end":{"line":155,"column":21}},"28":{"start":{"line":153,"column":24},"end":{"line":153,"column":115}},"29":{"start":{"line":154,"column":24},"end":{"line":154,"column":30}},"30":{"start":{"line":159,"column":8},"end":{"line":163,"column":10}},"31":{"start":{"line":169,"column":8},"end":{"line":169,"column":20}},"32":{"start":{"line":175,"column":26},"end":{"line":175,"column":36}},"33":{"start":{"line":176,"column":23},"end":{"line":176,"column":25}},"34":{"start":{"line":177,"column":29},"end":{"line":177,"column":58}},"35":{"start":{"line":178,"column":8},"end":{"line":178,"column":81}},"36":{"start":{"line":179,"column":8},"end":{"line":237,"column":9}},"37":{"start":{"line":181,"column":29},"end":{"line":181,"column":72}},"38":{"start":{"line":183,"column":12},"end":{"line":185,"column":13}},"39":{"start":{"line":184,"column":16},"end":{"line":184,"column":259}},"40":{"start":{"line":187,"column":12},"end":{"line":189,"column":13}},"41":{"start":{"line":188,"column":16},"end":{"line":188,"column":71}},"42":{"start":{"line":191,"column":12},"end":{"line":193,"column":13}},"43":{"start":{"line":192,"column":16},"end":{"line":192,"column":69}},"44":{"start":{"line":195,"column":12},"end":{"line":197,"column":13}},"45":{"start":{"line":196,"column":16},"end":{"line":196,"column":104}},"46":{"start":{"line":199,"column":12},"end":{"line":202,"column":13}},"47":{"start":{"line":200,"column":37},"end":{"line":200,"column":119}},"48":{"start":{"line":201,"column":16},"end":{"line":201,"column":45}},"49":{"start":{"line":204,"column":12},"end":{"line":212,"column":13}},"50":{"start":{"line":206,"column":16},"end":{"line":211,"column":17}},"51":{"start":{"line":207,"column":20},"end":{"line":207,"column":307}},"52":{"start":{"line":210,"column":20},"end":{"line":210,"column":319}},"53":{"start":{"line":213,"column":34},"end":{"line":213,"column":56}},"54":{"start":{"line":214,"column":12},"end":{"line":214,"column":104}},"55":{"start":{"line":215,"column":12},"end":{"line":225,"column":14}},"56":{"start":{"line":216,"column":41},"end":{"line":216,"column":132}},"57":{"start":{"line":228,"column":34},"end":{"line":228,"column":56}},"58":{"start":{"line":229,"column":12},"end":{"line":229,"column":98}},"59":{"start":{"line":230,"column":12},"end":{"line":230,"column":207}},"60":{"start":{"line":231,"column":12},"end":{"line":236,"column":14}},"61":{"start":{"line":243,"column":38},"end":{"line":243,"column":45}},"62":{"start":{"line":244,"column":25},"end":{"line":251,"column":9}},"63":{"start":{"line":253,"column":8},"end":{"line":253,"column":126}},"64":{"start":{"line":255,"column":34},"end":{"line":255,"column":36}},"65":{"start":{"line":256,"column":8},"end":{"line":264,"column":9}},"66":{"start":{"line":257,"column":12},"end":{"line":263,"column":15}},"67":{"start":{"line":266,"column":8},"end":{"line":272,"column":9}},"68":{"start":{"line":267,"column":12},"end":{"line":267,"column":111}},"69":{"start":{"line":268,"column":12},"end":{"line":268,"column":46}},"70":{"start":{"line":269,"column":12},"end":{"line":271,"column":13}},"71":{"start":{"line":270,"column":16},"end":{"line":270,"column":57}},"72":{"start":{"line":274,"column":31},"end":{"line":274,"column":66}},"73":{"start":{"line":275,"column":8},"end":{"line":278,"column":20}},"74":{"start":{"line":279,"column":8},"end":{"line":279,"column":24}},"75":{"start":{"line":285,"column":8},"end":{"line":295,"column":9}},"76":{"start":{"line":287,"column":12},"end":{"line":289,"column":13}},"77":{"start":{"line":288,"column":16},"end":{"line":288,"column":29}},"78":{"start":{"line":290,"column":29},"end":{"line":290,"column":176}},"79":{"start":{"line":291,"column":12},"end":{"line":291,"column":65}},"80":{"start":{"line":294,"column":12},"end":{"line":294,"column":25}},"81":{"start":{"line":301,"column":8},"end":{"line":305,"column":9}},"82":{"start":{"line":302,"column":12},"end":{"line":304,"column":13}},"83":{"start":{"line":303,"column":16},"end":{"line":303,"column":32}},"84":{"start":{"line":306,"column":8},"end":{"line":306,"column":25}},"85":{"start":{"line":312,"column":23},"end":{"line":312,"column":25}},"86":{"start":{"line":314,"column":31},"end":{"line":314,"column":61}},"87":{"start":{"line":315,"column":42},"end":{"line":317,"column":37}},"88":{"start":{"line":316,"column":29},"end":{"line":316,"column":64}},"89":{"start":{"line":317,"column":26},"end":{"line":317,"column":36}},"90":{"start":{"line":318,"column":8},"end":{"line":320,"column":9}},"91":{"start":{"line":319,"column":12},"end":{"line":319,"column":323}},"92":{"start":{"line":322,"column":32},"end":{"line":322,"column":99}},"93":{"start":{"line":322,"column":75},"end":{"line":322,"column":98}},"94":{"start":{"line":323,"column":40},"end":{"line":323,"column":116}},"95":{"start":{"line":323,"column":83},"end":{"line":323,"column":115}},"96":{"start":{"line":324,"column":8},"end":{"line":326,"column":9}},"97":{"start":{"line":325,"column":12},"end":{"line":325,"column":267}},"98":{"start":{"line":327,"column":33},"end":{"line":327,"column":101}},"99":{"start":{"line":327,"column":76},"end":{"line":327,"column":100}},"100":{"start":{"line":328,"column":41},"end":{"line":328,"column":118}},"101":{"start":{"line":328,"column":84},"end":{"line":328,"column":117}},"102":{"start":{"line":329,"column":8},"end":{"line":331,"column":9}},"103":{"start":{"line":330,"column":12},"end":{"line":330,"column":286}},"104":{"start":{"line":332,"column":8},"end":{"line":332,"column":22}},"105":{"start":{"line":338,"column":23},"end":{"line":338,"column":25}},"106":{"start":{"line":339,"column":36},"end":{"line":339,"column":108}},"107":{"start":{"line":339,"column":79},"end":{"line":339,"column":107}},"108":{"start":{"line":340,"column":38},"end":{"line":340,"column":112}},"109":{"start":{"line":340,"column":81},"end":{"line":340,"column":111}},"110":{"start":{"line":341,"column":8},"end":{"line":343,"column":9}},"111":{"start":{"line":342,"column":12},"end":{"line":342,"column":265}},"112":{"start":{"line":344,"column":8},"end":{"line":346,"column":9}},"113":{"start":{"line":345,"column":12},"end":{"line":345,"column":273}},"114":{"start":{"line":347,"column":8},"end":{"line":347,"column":22}},"115":{"start":{"line":353,"column":23},"end":{"line":353,"column":25}},"116":{"start":{"line":354,"column":8},"end":{"line":359,"column":9}},"117":{"start":{"line":355,"column":32},"end":{"line":355,"column":117}},"118":{"start":{"line":355,"column":75},"end":{"line":355,"column":116}},"119":{"start":{"line":356,"column":12},"end":{"line":358,"column":13}},"120":{"start":{"line":357,"column":16},"end":{"line":357,"column":292}},"121":{"start":{"line":360,"column":8},"end":{"line":360,"column":22}},"122":{"start":{"line":366,"column":23},"end":{"line":366,"column":25}},"123":{"start":{"line":367,"column":8},"end":{"line":382,"column":9}},"124":{"start":{"line":368,"column":32},"end":{"line":368,"column":136}},"125":{"start":{"line":369,"column":12},"end":{"line":371,"column":13}},"126":{"start":{"line":370,"column":16},"end":{"line":370,"column":325}},"127":{"start":{"line":372,"column":12},"end":{"line":381,"column":13}},"128":{"start":{"line":374,"column":16},"end":{"line":380,"column":19}},"129":{"start":{"line":383,"column":8},"end":{"line":383,"column":22}},"130":{"start":{"line":387,"column":8},"end":{"line":387,"column":57}},"131":{"start":{"line":390,"column":8},"end":{"line":392,"column":9}},"132":{"start":{"line":391,"column":12},"end":{"line":391,"column":51}},"133":{"start":{"line":395,"column":8},"end":{"line":402,"column":10}},"134":{"start":{"line":405,"column":0},"end":{"line":405,"column":56}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":18},"end":{"line":67,"column":5}},"line":19},"1":{"name":"(anonymous_1)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":24},"end":{"line":115,"column":5}},"line":71},"2":{"name":"(anonymous_2)","decl":{"start":{"line":119,"column":4},"end":{"line":119,"column":5}},"loc":{"start":{"line":119,"column":27},"end":{"line":164,"column":5}},"line":119},"3":{"name":"(anonymous_3)","decl":{"start":{"line":168,"column":4},"end":{"line":168,"column":5}},"loc":{"start":{"line":168,"column":41},"end":{"line":170,"column":5}},"line":168},"4":{"name":"(anonymous_4)","decl":{"start":{"line":174,"column":4},"end":{"line":174,"column":5}},"loc":{"start":{"line":174,"column":27},"end":{"line":238,"column":5}},"line":174},"5":{"name":"(anonymous_5)","decl":{"start":{"line":216,"column":36},"end":{"line":216,"column":37}},"loc":{"start":{"line":216,"column":41},"end":{"line":216,"column":132}},"line":216},"6":{"name":"(anonymous_6)","decl":{"start":{"line":242,"column":4},"end":{"line":242,"column":5}},"loc":{"start":{"line":242,"column":43},"end":{"line":280,"column":5}},"line":242},"7":{"name":"(anonymous_7)","decl":{"start":{"line":284,"column":4},"end":{"line":284,"column":5}},"loc":{"start":{"line":284,"column":64},"end":{"line":296,"column":5}},"line":284},"8":{"name":"(anonymous_8)","decl":{"start":{"line":300,"column":4},"end":{"line":300,"column":5}},"loc":{"start":{"line":300,"column":40},"end":{"line":307,"column":5}},"line":300},"9":{"name":"(anonymous_9)","decl":{"start":{"line":311,"column":4},"end":{"line":311,"column":5}},"loc":{"start":{"line":311,"column":38},"end":{"line":333,"column":5}},"line":311},"10":{"name":"(anonymous_10)","decl":{"start":{"line":316,"column":20},"end":{"line":316,"column":21}},"loc":{"start":{"line":316,"column":29},"end":{"line":316,"column":64}},"line":316},"11":{"name":"(anonymous_11)","decl":{"start":{"line":317,"column":17},"end":{"line":317,"column":18}},"loc":{"start":{"line":317,"column":26},"end":{"line":317,"column":36}},"line":317},"12":{"name":"(anonymous_12)","decl":{"start":{"line":322,"column":66},"end":{"line":322,"column":67}},"loc":{"start":{"line":322,"column":75},"end":{"line":322,"column":98}},"line":322},"13":{"name":"(anonymous_13)","decl":{"start":{"line":323,"column":74},"end":{"line":323,"column":75}},"loc":{"start":{"line":323,"column":83},"end":{"line":323,"column":115}},"line":323},"14":{"name":"(anonymous_14)","decl":{"start":{"line":327,"column":67},"end":{"line":327,"column":68}},"loc":{"start":{"line":327,"column":76},"end":{"line":327,"column":100}},"line":327},"15":{"name":"(anonymous_15)","decl":{"start":{"line":328,"column":75},"end":{"line":328,"column":76}},"loc":{"start":{"line":328,"column":84},"end":{"line":328,"column":117}},"line":328},"16":{"name":"(anonymous_16)","decl":{"start":{"line":337,"column":4},"end":{"line":337,"column":5}},"loc":{"start":{"line":337,"column":36},"end":{"line":348,"column":5}},"line":337},"17":{"name":"(anonymous_17)","decl":{"start":{"line":339,"column":70},"end":{"line":339,"column":71}},"loc":{"start":{"line":339,"column":79},"end":{"line":339,"column":107}},"line":339},"18":{"name":"(anonymous_18)","decl":{"start":{"line":340,"column":72},"end":{"line":340,"column":73}},"loc":{"start":{"line":340,"column":81},"end":{"line":340,"column":111}},"line":340},"19":{"name":"(anonymous_19)","decl":{"start":{"line":352,"column":4},"end":{"line":352,"column":5}},"loc":{"start":{"line":352,"column":58},"end":{"line":361,"column":5}},"line":352},"20":{"name":"(anonymous_20)","decl":{"start":{"line":355,"column":66},"end":{"line":355,"column":67}},"loc":{"start":{"line":355,"column":75},"end":{"line":355,"column":116}},"line":355},"21":{"name":"(anonymous_21)","decl":{"start":{"line":365,"column":4},"end":{"line":365,"column":5}},"loc":{"start":{"line":365,"column":69},"end":{"line":384,"column":5}},"line":365},"22":{"name":"(anonymous_22)","decl":{"start":{"line":386,"column":4},"end":{"line":386,"column":5}},"loc":{"start":{"line":386,"column":29},"end":{"line":388,"column":5}},"line":386},"23":{"name":"(anonymous_23)","decl":{"start":{"line":389,"column":4},"end":{"line":389,"column":5}},"loc":{"start":{"line":389,"column":33},"end":{"line":393,"column":5}},"line":389},"24":{"name":"(anonymous_24)","decl":{"start":{"line":394,"column":4},"end":{"line":394,"column":5}},"loc":{"start":{"line":394,"column":76},"end":{"line":403,"column":5}},"line":394}},"branchMap":{"0":{"loc":{"start":{"line":130,"column":12},"end":{"line":132,"column":13}},"type":"if","locations":[{"start":{"line":130,"column":12},"end":{"line":132,"column":13}},{"start":{},"end":{}}],"line":130},"1":{"loc":{"start":{"line":130,"column":16},"end":{"line":130,"column":81}},"type":"binary-expr","locations":[{"start":{"line":130,"column":16},"end":{"line":130,"column":43}},{"start":{"line":130,"column":47},"end":{"line":130,"column":81}}],"line":130},"2":{"loc":{"start":{"line":135,"column":8},"end":{"line":141,"column":9}},"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":141,"column":9}},{"start":{},"end":{}}],"line":135},"3":{"loc":{"start":{"line":136,"column":12},"end":{"line":140,"column":13}},"type":"if","locations":[{"start":{"line":136,"column":12},"end":{"line":140,"column":13}},{"start":{},"end":{}}],"line":136},"4":{"loc":{"start":{"line":136,"column":16},"end":{"line":138,"column":51}},"type":"binary-expr","locations":[{"start":{"line":136,"column":16},"end":{"line":136,"column":65}},{"start":{"line":137,"column":16},"end":{"line":137,"column":49}},{"start":{"line":138,"column":16},"end":{"line":138,"column":51}}],"line":136},"5":{"loc":{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},"type":"if","locations":[{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},{"start":{},"end":{}}],"line":143},"6":{"loc":{"start":{"line":143,"column":12},"end":{"line":143,"column":96}},"type":"binary-expr","locations":[{"start":{"line":143,"column":12},"end":{"line":143,"column":51}},{"start":{"line":143,"column":55},"end":{"line":143,"column":96}}],"line":143},"7":{"loc":{"start":{"line":146,"column":8},"end":{"line":158,"column":9}},"type":"if","locations":[{"start":{"line":146,"column":8},"end":{"line":158,"column":9}},{"start":{},"end":{}}],"line":146},"8":{"loc":{"start":{"line":147,"column":12},"end":{"line":157,"column":13}},"type":"if","locations":[{"start":{"line":147,"column":12},"end":{"line":157,"column":13}},{"start":{"line":150,"column":17},"end":{"line":157,"column":13}}],"line":147},"9":{"loc":{"start":{"line":152,"column":20},"end":{"line":155,"column":21}},"type":"if","locations":[{"start":{"line":152,"column":20},"end":{"line":155,"column":21}},{"start":{},"end":{}}],"line":152},"10":{"loc":{"start":{"line":152,"column":24},"end":{"line":152,"column":96}},"type":"binary-expr","locations":[{"start":{"line":152,"column":24},"end":{"line":152,"column":42}},{"start":{"line":152,"column":46},"end":{"line":152,"column":57}},{"start":{"line":152,"column":61},"end":{"line":152,"column":96}}],"line":152},"11":{"loc":{"start":{"line":183,"column":12},"end":{"line":185,"column":13}},"type":"if","locations":[{"start":{"line":183,"column":12},"end":{"line":185,"column":13}},{"start":{},"end":{}}],"line":183},"12":{"loc":{"start":{"line":183,"column":16},"end":{"line":183,"column":77}},"type":"binary-expr","locations":[{"start":{"line":183,"column":16},"end":{"line":183,"column":49}},{"start":{"line":183,"column":53},"end":{"line":183,"column":77}}],"line":183},"13":{"loc":{"start":{"line":187,"column":12},"end":{"line":189,"column":13}},"type":"if","locations":[{"start":{"line":187,"column":12},"end":{"line":189,"column":13}},{"start":{},"end":{}}],"line":187},"14":{"loc":{"start":{"line":191,"column":12},"end":{"line":193,"column":13}},"type":"if","locations":[{"start":{"line":191,"column":12},"end":{"line":193,"column":13}},{"start":{},"end":{}}],"line":191},"15":{"loc":{"start":{"line":195,"column":12},"end":{"line":197,"column":13}},"type":"if","locations":[{"start":{"line":195,"column":12},"end":{"line":197,"column":13}},{"start":{},"end":{}}],"line":195},"16":{"loc":{"start":{"line":199,"column":12},"end":{"line":202,"column":13}},"type":"if","locations":[{"start":{"line":199,"column":12},"end":{"line":202,"column":13}},{"start":{},"end":{}}],"line":199},"17":{"loc":{"start":{"line":204,"column":12},"end":{"line":212,"column":13}},"type":"if","locations":[{"start":{"line":204,"column":12},"end":{"line":212,"column":13}},{"start":{},"end":{}}],"line":204},"18":{"loc":{"start":{"line":204,"column":16},"end":{"line":205,"column":78}},"type":"binary-expr","locations":[{"start":{"line":204,"column":16},"end":{"line":204,"column":51}},{"start":{"line":205,"column":16},"end":{"line":205,"column":78}}],"line":204},"19":{"loc":{"start":{"line":206,"column":16},"end":{"line":211,"column":17}},"type":"if","locations":[{"start":{"line":206,"column":16},"end":{"line":211,"column":17}},{"start":{"line":209,"column":21},"end":{"line":211,"column":17}}],"line":206},"20":{"loc":{"start":{"line":216,"column":24},"end":{"line":218,"column":51}},"type":"cond-expr","locations":[{"start":{"line":217,"column":22},"end":{"line":217,"column":51}},{"start":{"line":218,"column":22},"end":{"line":218,"column":51}}],"line":216},"21":{"loc":{"start":{"line":216,"column":41},"end":{"line":216,"column":132}},"type":"binary-expr","locations":[{"start":{"line":216,"column":41},"end":{"line":216,"column":83}},{"start":{"line":216,"column":87},"end":{"line":216,"column":132}}],"line":216},"22":{"loc":{"start":{"line":269,"column":12},"end":{"line":271,"column":13}},"type":"if","locations":[{"start":{"line":269,"column":12},"end":{"line":271,"column":13}},{"start":{},"end":{}}],"line":269},"23":{"loc":{"start":{"line":276,"column":12},"end":{"line":278,"column":19}},"type":"cond-expr","locations":[{"start":{"line":277,"column":18},"end":{"line":277,"column":86}},{"start":{"line":278,"column":18},"end":{"line":278,"column":19}}],"line":276},"24":{"loc":{"start":{"line":287,"column":12},"end":{"line":289,"column":13}},"type":"if","locations":[{"start":{"line":287,"column":12},"end":{"line":289,"column":13}},{"start":{},"end":{}}],"line":287},"25":{"loc":{"start":{"line":302,"column":12},"end":{"line":304,"column":13}},"type":"if","locations":[{"start":{"line":302,"column":12},"end":{"line":304,"column":13}},{"start":{},"end":{}}],"line":302},"26":{"loc":{"start":{"line":318,"column":8},"end":{"line":320,"column":9}},"type":"if","locations":[{"start":{"line":318,"column":8},"end":{"line":320,"column":9}},{"start":{},"end":{}}],"line":318},"27":{"loc":{"start":{"line":324,"column":8},"end":{"line":326,"column":9}},"type":"if","locations":[{"start":{"line":324,"column":8},"end":{"line":326,"column":9}},{"start":{},"end":{}}],"line":324},"28":{"loc":{"start":{"line":324,"column":12},"end":{"line":324,"column":55}},"type":"binary-expr","locations":[{"start":{"line":324,"column":12},"end":{"line":324,"column":27}},{"start":{"line":324,"column":31},"end":{"line":324,"column":55}}],"line":324},"29":{"loc":{"start":{"line":329,"column":8},"end":{"line":331,"column":9}},"type":"if","locations":[{"start":{"line":329,"column":8},"end":{"line":331,"column":9}},{"start":{},"end":{}}],"line":329},"30":{"loc":{"start":{"line":329,"column":12},"end":{"line":329,"column":57}},"type":"binary-expr","locations":[{"start":{"line":329,"column":12},"end":{"line":329,"column":28}},{"start":{"line":329,"column":32},"end":{"line":329,"column":57}}],"line":329},"31":{"loc":{"start":{"line":341,"column":8},"end":{"line":343,"column":9}},"type":"if","locations":[{"start":{"line":341,"column":8},"end":{"line":343,"column":9}},{"start":{},"end":{}}],"line":341},"32":{"loc":{"start":{"line":344,"column":8},"end":{"line":346,"column":9}},"type":"if","locations":[{"start":{"line":344,"column":8},"end":{"line":346,"column":9}},{"start":{},"end":{}}],"line":344},"33":{"loc":{"start":{"line":356,"column":12},"end":{"line":358,"column":13}},"type":"if","locations":[{"start":{"line":356,"column":12},"end":{"line":358,"column":13}},{"start":{},"end":{}}],"line":356},"34":{"loc":{"start":{"line":369,"column":12},"end":{"line":371,"column":13}},"type":"if","locations":[{"start":{"line":369,"column":12},"end":{"line":371,"column":13}},{"start":{},"end":{}}],"line":369},"35":{"loc":{"start":{"line":369,"column":16},"end":{"line":369,"column":56}},"type":"binary-expr","locations":[{"start":{"line":369,"column":16},"end":{"line":369,"column":40}},{"start":{"line":369,"column":44},"end":{"line":369,"column":56}}],"line":369},"36":{"loc":{"start":{"line":372,"column":12},"end":{"line":381,"column":13}},"type":"if","locations":[{"start":{"line":372,"column":12},"end":{"line":381,"column":13}},{"start":{},"end":{}}],"line":372},"37":{"loc":{"start":{"line":387,"column":16},"end":{"line":387,"column":55}},"type":"binary-expr","locations":[{"start":{"line":387,"column":16},"end":{"line":387,"column":49}},{"start":{"line":387,"column":53},"end":{"line":387,"column":55}}],"line":387},"38":{"loc":{"start":{"line":390,"column":8},"end":{"line":392,"column":9}},"type":"if","locations":[{"start":{"line":390,"column":8},"end":{"line":392,"column":9}},{"start":{},"end":{}}],"line":390}},"s":{"0":1,"1":1,"2":1,"3":1,"4":3,"5":3,"6":3,"7":3,"8":3,"9":3,"10":3,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":1},"f":{"0":3,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0]},"inputSourceMap":{"version":3,"file":"/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/ERC165ComplianceModule.ts","sources":["/home/jamatulli/decentralization/diamonds/diamonds-monitor-devenv/packages/diamonds-monitor/src/modules/ERC165ComplianceModule.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * ERC165 Compliance Monitoring Module for Hardhat Diamond Monitor Plugin\n *\n * Monitors ERC165 interface support compliance, ensuring proper interface\n * declarations and standard compliance across the diamond contract.\n */\n\nimport { ethers } from 'ethers';\nimport {\n  MonitoringModule,\n  MonitoringContext,\n  MonitoringResult,\n  MonitoringIssue,\n  SeverityLevel,\n  DiamondInfo,\n  NetworkInfo,\n  ConfigRequirement,\n  ValidationResult,\n  MonitoringStatus,\n} from '../core/types';\n\n/**\n * Interface support information\n */\ninterface InterfaceInfo {\n  interfaceId: string;\n  name: string;\n  isSupported: boolean;\n  isRequired: boolean;\n  standard: string;\n}\n\n/**\n * ERC165 compliance analysis result\n */\ninterface ERC165ComplianceAnalysis {\n  supportsERC165: boolean;\n  supportedInterfaces: InterfaceInfo[];\n  unsupportedRequiredInterfaces: InterfaceInfo[];\n  totalInterfacesChecked: number;\n  complianceScore: number; // 0-100\n  complianceIssues: string[];\n}\n\n/**\n * Configuration for ERC165 compliance module\n */\ninterface ERC165ComplianceModuleConfig {\n  enforceERC165Support?: boolean;\n  requiredInterfaces?: string[];\n  checkStandardCompliance?: boolean;\n  checkDiamondStandards?: boolean;\n  allowPartialCompliance?: boolean;\n  minimumComplianceScore?: number;\n  customInterfaces?: Array<{\n    interfaceId: string;\n    name: string;\n    required: boolean;\n  }>;\n}\n\n/**\n * ERC165 Compliance Monitoring Module\n *\n * Monitors ERC165 interface support and standard compliance across\n * various Ethereum standards implemented in the diamond contract.\n */\nexport class ERC165ComplianceModule implements MonitoringModule {\n  public readonly id = 'erc165-compliance';\n  public readonly name = 'ERC165 Compliance Monitoring';\n  public readonly description =\n    'Monitors ERC165 interface support and standard compliance across implemented interfaces';\n  public readonly version = '1.0.0';\n  public readonly category = 'compliance';\n\n  // Standard interface IDs (ERC165)\n  private readonly standardInterfaces = {\n    // Core interfaces\n    ERC165: '0x01ffc9a7',\n\n    // Token standards\n    ERC20: '0x36372b07',\n    ERC721: '0x80ac58cd',\n    ERC721_METADATA: '0x5b5e139f',\n    ERC721_ENUMERABLE: '0x780e9d63',\n    ERC1155: '0xd9b67a26',\n    ERC1155_METADATA: '0x0e89341c',\n\n    // Diamond standards\n    DIAMOND_CUT: '0x1f931c1c',\n    DIAMOND_LOUPE: '0x48e2b093',\n\n    // Access control\n    ACCESS_CONTROL: '0x7965db0b',\n    ACCESS_CONTROL_ENUMERABLE: '0x5a05180f',\n\n    // Extensions\n    OWNABLE: '0x7f5828d0',\n    PAUSABLE: '0x5c975abb',\n\n    // Governance\n    GOVERNANCE: '0x6ba42aaa',\n    VOTES: '0xe90fb3f6',\n\n    // Royalty\n    ERC2981: '0x2a55205a', // NFT Royalty Standard\n  };\n\n  // Interface categories for better organization\n  private readonly interfaceCategories = {\n    core: ['ERC165'],\n    tokens: [\n      'ERC20',\n      'ERC721',\n      'ERC721_METADATA',\n      'ERC721_ENUMERABLE',\n      'ERC1155',\n      'ERC1155_METADATA',\n    ],\n    diamond: ['DIAMOND_CUT', 'DIAMOND_LOUPE'],\n    access: ['ACCESS_CONTROL', 'ACCESS_CONTROL_ENUMERABLE', 'OWNABLE'],\n    extensions: ['PAUSABLE', 'ERC2981'],\n    governance: ['GOVERNANCE', 'VOTES'],\n  };\n\n  /**\n   * Get configuration requirements for this module\n   */\n  public getRequiredConfig(): ConfigRequirement[] {\n    return [\n      {\n        key: 'enforceERC165Support',\n        type: 'boolean',\n        required: false,\n        description: 'Whether ERC165 support is mandatory',\n        defaultValue: true,\n      },\n      {\n        key: 'requiredInterfaces',\n        type: 'array',\n        required: false,\n        description: 'List of interface IDs that must be supported',\n      },\n      {\n        key: 'checkStandardCompliance',\n        type: 'boolean',\n        required: false,\n        description: 'Whether to check compliance with standard interfaces',\n        defaultValue: true,\n      },\n      {\n        key: 'checkDiamondStandards',\n        type: 'boolean',\n        required: false,\n        description: 'Whether to check diamond standard compliance',\n        defaultValue: true,\n      },\n      {\n        key: 'allowPartialCompliance',\n        type: 'boolean',\n        required: false,\n        description: 'Whether partial compliance is acceptable',\n        defaultValue: false,\n      },\n      {\n        key: 'minimumComplianceScore',\n        type: 'number',\n        required: false,\n        description: 'Minimum compliance score (0-100) required',\n        defaultValue: 80,\n      },\n    ];\n  }\n\n  /**\n   * Validate module configuration\n   */\n  public validateConfig(config: Record<string, unknown>): ValidationResult {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    // Validate boolean fields\n    const booleanFields = [\n      'enforceERC165Support',\n      'checkStandardCompliance',\n      'checkDiamondStandards',\n      'allowPartialCompliance',\n    ];\n    for (const field of booleanFields) {\n      if (config[field] !== undefined && typeof config[field] !== 'boolean') {\n        errors.push(`${field} must be a boolean`);\n      }\n    }\n\n    // Validate compliance score\n    if (config.minimumComplianceScore !== undefined) {\n      if (\n        typeof config.minimumComplianceScore !== 'number' ||\n        config.minimumComplianceScore < 0 ||\n        config.minimumComplianceScore > 100\n      ) {\n        errors.push('minimumComplianceScore must be a number between 0 and 100');\n      }\n    }\n\n    // Validate arrays\n    if (config.requiredInterfaces !== undefined && !Array.isArray(config.requiredInterfaces)) {\n      errors.push('requiredInterfaces must be an array');\n    }\n\n    if (config.customInterfaces !== undefined) {\n      if (!Array.isArray(config.customInterfaces)) {\n        errors.push('customInterfaces must be an array');\n      } else {\n        for (const iface of config.customInterfaces) {\n          if (!iface.interfaceId || !iface.name || typeof iface.required !== 'boolean') {\n            errors.push(\n              'customInterfaces items must have interfaceId, name, and required properties'\n            );\n            break;\n          }\n        }\n      }\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n      warnings,\n    };\n  }\n\n  /**\n   * Check if this module can monitor the given diamond\n   */\n  public async canMonitor(_diamond: DiamondInfo, _network: NetworkInfo): Promise<boolean> {\n    return true; // This module can monitor any diamond\n  }\n\n  /**\n   * Execute ERC165 compliance monitoring\n   */\n  public async monitor(context: MonitoringContext): Promise<MonitoringResult> {\n    const startTime = Date.now();\n    const issues: MonitoringIssue[] = [];\n    const moduleConfig = this.getModuleConfig<ERC165ComplianceModuleConfig>(context);\n\n    this.log(context, 'info', '🔍 Starting ERC165 compliance monitoring...');\n\n    try {\n      // Analyze ERC165 compliance\n      const analysis = await this.analyzeERC165Compliance(context);\n\n      // Check ERC165 support requirement\n      if (moduleConfig.enforceERC165Support && !analysis.supportsERC165) {\n        issues.push(\n          this.createIssue(\n            'missing-erc165',\n            'Missing ERC165 Support',\n            'Contract does not support ERC165 interface detection',\n            SeverityLevel.ERROR,\n            'erc165-support',\n            'Implement ERC165 interface support for better interoperability'\n          )\n        );\n      }\n\n      // Check standard compliance\n      if (moduleConfig.checkStandardCompliance) {\n        issues.push(...this.checkStandardCompliance(analysis));\n      }\n\n      // Check diamond standards\n      if (moduleConfig.checkDiamondStandards) {\n        issues.push(...this.checkDiamondStandards(analysis));\n      }\n\n      // Check required interfaces\n      if (moduleConfig.requiredInterfaces) {\n        issues.push(...this.checkRequiredInterfaces(analysis, moduleConfig.requiredInterfaces));\n      }\n\n      // Check custom interfaces\n      if (moduleConfig.customInterfaces) {\n        const customIssues = await this.checkCustomInterfaces(\n          analysis,\n          moduleConfig.customInterfaces,\n          context\n        );\n        issues.push(...customIssues);\n      }\n\n      // Check compliance score\n      if (\n        moduleConfig.minimumComplianceScore &&\n        analysis.complianceScore < moduleConfig.minimumComplianceScore\n      ) {\n        if (!moduleConfig.allowPartialCompliance) {\n          issues.push(\n            this.createIssue(\n              'low-compliance-score',\n              'Low Compliance Score',\n              `Compliance score ${analysis.complianceScore}% is below minimum ${moduleConfig.minimumComplianceScore}%`,\n              SeverityLevel.ERROR,\n              'compliance-score',\n              'Implement missing interfaces to improve compliance'\n            )\n          );\n        } else {\n          issues.push(\n            this.createIssue(\n              'partial-compliance',\n              'Partial Compliance',\n              `Compliance score ${analysis.complianceScore}% is below target ${moduleConfig.minimumComplianceScore}%`,\n              SeverityLevel.WARNING,\n              'compliance-score',\n              'Consider implementing additional interfaces for better compliance'\n            )\n          );\n        }\n      }\n\n      const executionTime = Date.now() - startTime;\n      this.log(context, 'info', `✅ ERC165 compliance monitoring completed in ${executionTime}ms`);\n\n      return {\n        status: issues.some(\n          i => i.severity === SeverityLevel.ERROR || i.severity === SeverityLevel.CRITICAL\n        )\n          ? MonitoringStatus.FAIL\n          : MonitoringStatus.PASS,\n        issues,\n        executionTime,\n        metadata: {\n          analysis,\n          moduleConfig,\n        },\n      };\n    } catch (error) {\n      const executionTime = Date.now() - startTime;\n      this.log(\n        context,\n        'error',\n        `❌ ERC165 compliance monitoring failed: ${(error as Error).message}`\n      );\n\n      issues.push(\n        this.createIssue(\n          'erc165-compliance-error',\n          'ERC165 Compliance Monitoring Failed',\n          `Failed to analyze ERC165 compliance: ${(error as Error).message}`,\n          SeverityLevel.ERROR,\n          'execution'\n        )\n      );\n\n      return {\n        status: MonitoringStatus.FAIL,\n        issues,\n        executionTime,\n        metadata: { error: (error as Error).message },\n      };\n    }\n  }\n\n  /**\n   * Analyze ERC165 compliance for the diamond\n   */\n  private async analyzeERC165Compliance(\n    context: MonitoringContext\n  ): Promise<ERC165ComplianceAnalysis> {\n    const { diamond, provider } = context;\n\n    const analysis: ERC165ComplianceAnalysis = {\n      supportsERC165: false,\n      supportedInterfaces: [],\n      unsupportedRequiredInterfaces: [],\n      totalInterfacesChecked: 0,\n      complianceScore: 0,\n      complianceIssues: [],\n    };\n\n    // First check if ERC165 is supported\n    analysis.supportsERC165 = await this.checkInterfaceSupport(\n      diamond.address,\n      this.standardInterfaces.ERC165,\n      provider\n    );\n\n    // Check all standard interfaces\n    const interfacesToCheck: InterfaceInfo[] = [];\n\n    for (const [name, interfaceId] of Object.entries(this.standardInterfaces)) {\n      interfacesToCheck.push({\n        interfaceId,\n        name,\n        isSupported: false,\n        isRequired: false, // Will be set based on configuration\n        standard: this.getInterfaceStandard(name),\n      });\n    }\n\n    // Check interface support\n    for (const iface of interfacesToCheck) {\n      iface.isSupported = await this.checkInterfaceSupport(\n        diamond.address,\n        iface.interfaceId,\n        provider\n      );\n      analysis.totalInterfacesChecked++;\n\n      if (iface.isSupported) {\n        analysis.supportedInterfaces.push(iface);\n      }\n    }\n\n    // Calculate compliance score\n    const supportedCount = analysis.supportedInterfaces.length;\n    analysis.complianceScore =\n      analysis.totalInterfacesChecked > 0\n        ? Math.round((supportedCount / analysis.totalInterfacesChecked) * 100)\n        : 0;\n\n    return analysis;\n  }\n\n  /**\n   * Check if a specific interface is supported\n   */\n  private async checkInterfaceSupport(\n    address: string,\n    interfaceId: string,\n    provider: ethers.Provider\n  ): Promise<boolean> {\n    try {\n      // Ensure address is properly formatted\n      if (!ethers.isAddress(address)) {\n        return false;\n      }\n\n      const contract = new ethers.Contract(\n        ethers.getAddress(address),\n        ['function supportsInterface(bytes4 interfaceId) view returns (bool)'],\n        provider\n      );\n\n      return await contract.supportsInterface(interfaceId);\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Get the standard category for an interface\n   */\n  private getInterfaceStandard(interfaceName: string): string {\n    for (const [category, interfaces] of Object.entries(this.interfaceCategories)) {\n      if (interfaces.includes(interfaceName)) {\n        return category;\n      }\n    }\n    return 'unknown';\n  }\n\n  /**\n   * Check standard compliance\n   */\n  private checkStandardCompliance(analysis: ERC165ComplianceAnalysis): MonitoringIssue[] {\n    const issues: MonitoringIssue[] = [];\n\n    // Check for consistent token standard implementation\n    const tokenStandards = ['ERC20', 'ERC721', 'ERC1155'];\n    const implementedTokenStandards = analysis.supportedInterfaces\n      .filter(iface => tokenStandards.includes(iface.name))\n      .map(iface => iface.name);\n\n    if (implementedTokenStandards.length > 1) {\n      issues.push(\n        this.createIssue(\n          'multiple-token-standards',\n          'Multiple Token Standards',\n          `Contract implements multiple token standards: ${implementedTokenStandards.join(', ')}`,\n          SeverityLevel.WARNING,\n          'standard-compliance',\n          'Ensure proper separation and avoid conflicts between different token standards'\n        )\n      );\n    }\n\n    // Check for incomplete standard implementations\n    const erc721Supported = analysis.supportedInterfaces.some(iface => iface.name === 'ERC721');\n    const erc721MetadataSupported = analysis.supportedInterfaces.some(\n      iface => iface.name === 'ERC721_METADATA'\n    );\n\n    if (erc721Supported && !erc721MetadataSupported) {\n      issues.push(\n        this.createIssue(\n          'incomplete-erc721',\n          'Incomplete ERC721 Implementation',\n          'ERC721 is supported but ERC721Metadata is not',\n          SeverityLevel.WARNING,\n          'standard-compliance',\n          'Implement ERC721Metadata for complete NFT standard compliance'\n        )\n      );\n    }\n\n    const erc1155Supported = analysis.supportedInterfaces.some(iface => iface.name === 'ERC1155');\n    const erc1155MetadataSupported = analysis.supportedInterfaces.some(\n      iface => iface.name === 'ERC1155_METADATA'\n    );\n\n    if (erc1155Supported && !erc1155MetadataSupported) {\n      issues.push(\n        this.createIssue(\n          'incomplete-erc1155',\n          'Incomplete ERC1155 Implementation',\n          'ERC1155 is supported but ERC1155MetadataURI is not',\n          SeverityLevel.WARNING,\n          'standard-compliance',\n          'Implement ERC1155MetadataURI for complete multi-token standard compliance'\n        )\n      );\n    }\n\n    return issues;\n  }\n\n  /**\n   * Check diamond standard compliance\n   */\n  private checkDiamondStandards(analysis: ERC165ComplianceAnalysis): MonitoringIssue[] {\n    const issues: MonitoringIssue[] = [];\n\n    const diamondCutSupported = analysis.supportedInterfaces.some(\n      iface => iface.name === 'DIAMOND_CUT'\n    );\n    const diamondLoupeSupported = analysis.supportedInterfaces.some(\n      iface => iface.name === 'DIAMOND_LOUPE'\n    );\n\n    if (!diamondCutSupported) {\n      issues.push(\n        this.createIssue(\n          'missing-diamond-cut',\n          'Missing Diamond Cut Interface',\n          'Diamond does not declare support for DiamondCut interface',\n          SeverityLevel.WARNING,\n          'diamond-compliance',\n          'Implement ERC165 support for DiamondCut interface'\n        )\n      );\n    }\n\n    if (!diamondLoupeSupported) {\n      issues.push(\n        this.createIssue(\n          'missing-diamond-loupe',\n          'Missing Diamond Loupe Interface',\n          'Diamond does not declare support for DiamondLoupe interface',\n          SeverityLevel.WARNING,\n          'diamond-compliance',\n          'Implement ERC165 support for DiamondLoupe interface'\n        )\n      );\n    }\n\n    return issues;\n  }\n\n  /**\n   * Check required interfaces\n   */\n  private checkRequiredInterfaces(\n    analysis: ERC165ComplianceAnalysis,\n    requiredInterfaces: string[]\n  ): MonitoringIssue[] {\n    const issues: MonitoringIssue[] = [];\n\n    for (const requiredInterfaceId of requiredInterfaces) {\n      const isSupported = analysis.supportedInterfaces.some(\n        iface => iface.interfaceId === requiredInterfaceId\n      );\n\n      if (!isSupported) {\n        issues.push(\n          this.createIssue(\n            'missing-required-interface',\n            'Missing Required Interface',\n            `Required interface ${requiredInterfaceId} is not supported`,\n            SeverityLevel.ERROR,\n            'required-interfaces',\n            'Implement the required interface and declare it in supportsInterface'\n          )\n        );\n      }\n    }\n\n    return issues;\n  }\n\n  /**\n   * Check custom interfaces\n   */\n  private async checkCustomInterfaces(\n    analysis: ERC165ComplianceAnalysis,\n    customInterfaces: Array<{ interfaceId: string; name: string; required: boolean }>,\n    context: MonitoringContext\n  ): Promise<MonitoringIssue[]> {\n    const issues: MonitoringIssue[] = [];\n\n    for (const customInterface of customInterfaces) {\n      const isSupported = await this.checkInterfaceSupport(\n        context.diamond.address,\n        customInterface.interfaceId,\n        context.provider\n      );\n\n      if (customInterface.required && !isSupported) {\n        issues.push(\n          this.createIssue(\n            'missing-custom-interface',\n            'Missing Custom Interface',\n            `Required custom interface ${customInterface.name} (${customInterface.interfaceId}) is not supported`,\n            SeverityLevel.ERROR,\n            'custom-interfaces',\n            'Implement the custom interface and declare it in supportsInterface'\n          )\n        );\n      }\n\n      if (isSupported) {\n        // Add to supported interfaces for tracking\n        analysis.supportedInterfaces.push({\n          interfaceId: customInterface.interfaceId,\n          name: customInterface.name,\n          isSupported: true,\n          isRequired: customInterface.required,\n          standard: 'custom',\n        });\n      }\n    }\n\n    return issues;\n  }\n\n  // Helper methods\n\n  private getModuleConfig<T>(context: MonitoringContext): T {\n    return (context.config.modules?.[this.id] || {}) as T;\n  }\n\n  private log(context: MonitoringContext, level: string, message: string): void {\n    if (context.config.reporting?.verbose) {\n      console.log(`[${this.id}] ${message}`);\n    }\n  }\n\n  private createIssue(\n    id: string,\n    title: string,\n    description: string,\n    severity: SeverityLevel,\n    category: string,\n    recommendation?: string\n  ): MonitoringIssue {\n    return {\n      id,\n      title,\n      description,\n      severity,\n      category,\n      recommendation,\n    };\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"813c9f338eed3a29fd3b93c0ec01cd690872fab2","contentHash":"f57940359d93b264977f35037b684f73e7ec1ff9fe9c6e9086b85aa7cdf89f47"}}